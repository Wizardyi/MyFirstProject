// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: position.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "position.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace positionproto {

namespace {

const ::google::protobuf::Descriptor* MessageType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageType_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MessageType_Cmd_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BPBattleRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BPBattleRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBBattleRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBBattleRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* GPGateRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GPGateRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* PGGateRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PGGateRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* GPPlayerRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GPPlayerRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* OPOnlineRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OPOnlineRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* POOnlineRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  POOnlineRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* OPPlayerRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OPPlayerRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* OPPlayerTroopDispatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OPPlayerTroopDispatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* POPlayerTroopDispatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  POPlayerTroopDispatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* BPBattleResultNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BPBattleResultNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* OPTroopAttack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OPTroopAttack_reflection_ = NULL;
const ::google::protobuf::Descriptor* POTroopAttack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  POTroopAttack_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_position_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_position_2eproto() {
  protobuf_AddDesc_position_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "position.proto");
  GOOGLE_CHECK(file != NULL);
  MessageType_descriptor_ = file->message_type(0);
  static const int MessageType_offsets_[1] = {
  };
  MessageType_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageType_descriptor_,
      MessageType::default_instance_,
      MessageType_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageType),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageType, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageType, _is_default_instance_));
  MessageType_Cmd_descriptor_ = MessageType_descriptor_->enum_type(0);
  BPBattleRegister_descriptor_ = file->message_type(1);
  static const int BPBattleRegister_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BPBattleRegister, battle_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BPBattleRegister, battle_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BPBattleRegister, battle_port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BPBattleRegister, x_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BPBattleRegister, x_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BPBattleRegister, y_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BPBattleRegister, y_end_),
  };
  BPBattleRegister_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BPBattleRegister_descriptor_,
      BPBattleRegister::default_instance_,
      BPBattleRegister_offsets_,
      -1,
      -1,
      -1,
      sizeof(BPBattleRegister),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BPBattleRegister, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BPBattleRegister, _is_default_instance_));
  PBBattleRegister_descriptor_ = file->message_type(2);
  static const int PBBattleRegister_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBattleRegister, gate_info_),
  };
  PBBattleRegister_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBBattleRegister_descriptor_,
      PBBattleRegister::default_instance_,
      PBBattleRegister_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBBattleRegister),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBattleRegister, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBattleRegister, _is_default_instance_));
  GPGateRegister_descriptor_ = file->message_type(3);
  static const int GPGateRegister_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPGateRegister, gate_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPGateRegister, gate_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPGateRegister, gate_port_),
  };
  GPGateRegister_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GPGateRegister_descriptor_,
      GPGateRegister::default_instance_,
      GPGateRegister_offsets_,
      -1,
      -1,
      -1,
      sizeof(GPGateRegister),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPGateRegister, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPGateRegister, _is_default_instance_));
  PGGateRegister_descriptor_ = file->message_type(4);
  static const int PGGateRegister_offsets_[1] = {
  };
  PGGateRegister_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PGGateRegister_descriptor_,
      PGGateRegister::default_instance_,
      PGGateRegister_offsets_,
      -1,
      -1,
      -1,
      sizeof(PGGateRegister),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGGateRegister, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGGateRegister, _is_default_instance_));
  GPPlayerRegister_descriptor_ = file->message_type(5);
  static const int GPPlayerRegister_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPPlayerRegister, player_),
  };
  GPPlayerRegister_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GPPlayerRegister_descriptor_,
      GPPlayerRegister::default_instance_,
      GPPlayerRegister_offsets_,
      -1,
      -1,
      -1,
      sizeof(GPPlayerRegister),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPPlayerRegister, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPPlayerRegister, _is_default_instance_));
  OPOnlineRegister_descriptor_ = file->message_type(6);
  static const int OPOnlineRegister_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPOnlineRegister, online_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPOnlineRegister, online_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPOnlineRegister, online_port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPOnlineRegister, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPOnlineRegister, server_id_),
  };
  OPOnlineRegister_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OPOnlineRegister_descriptor_,
      OPOnlineRegister::default_instance_,
      OPOnlineRegister_offsets_,
      -1,
      -1,
      -1,
      sizeof(OPOnlineRegister),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPOnlineRegister, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPOnlineRegister, _is_default_instance_));
  POOnlineRegister_descriptor_ = file->message_type(7);
  static const int POOnlineRegister_offsets_[1] = {
  };
  POOnlineRegister_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      POOnlineRegister_descriptor_,
      POOnlineRegister::default_instance_,
      POOnlineRegister_offsets_,
      -1,
      -1,
      -1,
      sizeof(POOnlineRegister),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POOnlineRegister, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POOnlineRegister, _is_default_instance_));
  OPPlayerRegister_descriptor_ = file->message_type(8);
  static const int OPPlayerRegister_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPPlayerRegister, player_),
  };
  OPPlayerRegister_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OPPlayerRegister_descriptor_,
      OPPlayerRegister::default_instance_,
      OPPlayerRegister_offsets_,
      -1,
      -1,
      -1,
      sizeof(OPPlayerRegister),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPPlayerRegister, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPPlayerRegister, _is_default_instance_));
  OPPlayerTroopDispatch_descriptor_ = file->message_type(9);
  static const int OPPlayerTroopDispatch_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPPlayerTroopDispatch, troop_),
  };
  OPPlayerTroopDispatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OPPlayerTroopDispatch_descriptor_,
      OPPlayerTroopDispatch::default_instance_,
      OPPlayerTroopDispatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(OPPlayerTroopDispatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPPlayerTroopDispatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPPlayerTroopDispatch, _is_default_instance_));
  POPlayerTroopDispatch_descriptor_ = file->message_type(10);
  static const int POPlayerTroopDispatch_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POPlayerTroopDispatch, troop_),
  };
  POPlayerTroopDispatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      POPlayerTroopDispatch_descriptor_,
      POPlayerTroopDispatch::default_instance_,
      POPlayerTroopDispatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(POPlayerTroopDispatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POPlayerTroopDispatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POPlayerTroopDispatch, _is_default_instance_));
  BPBattleResultNotify_descriptor_ = file->message_type(11);
  static const int BPBattleResultNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BPBattleResultNotify, troop_info_),
  };
  BPBattleResultNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BPBattleResultNotify_descriptor_,
      BPBattleResultNotify::default_instance_,
      BPBattleResultNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(BPBattleResultNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BPBattleResultNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BPBattleResultNotify, _is_default_instance_));
  OPTroopAttack_descriptor_ = file->message_type(12);
  static const int OPTroopAttack_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPTroopAttack, info_),
  };
  OPTroopAttack_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OPTroopAttack_descriptor_,
      OPTroopAttack::default_instance_,
      OPTroopAttack_offsets_,
      -1,
      -1,
      -1,
      sizeof(OPTroopAttack),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPTroopAttack, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OPTroopAttack, _is_default_instance_));
  POTroopAttack_descriptor_ = file->message_type(13);
  static const int POTroopAttack_offsets_[1] = {
  };
  POTroopAttack_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      POTroopAttack_descriptor_,
      POTroopAttack::default_instance_,
      POTroopAttack_offsets_,
      -1,
      -1,
      -1,
      sizeof(POTroopAttack),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POTroopAttack, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POTroopAttack, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_position_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageType_descriptor_, &MessageType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BPBattleRegister_descriptor_, &BPBattleRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBBattleRegister_descriptor_, &PBBattleRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GPGateRegister_descriptor_, &GPGateRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PGGateRegister_descriptor_, &PGGateRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GPPlayerRegister_descriptor_, &GPPlayerRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OPOnlineRegister_descriptor_, &OPOnlineRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      POOnlineRegister_descriptor_, &POOnlineRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OPPlayerRegister_descriptor_, &OPPlayerRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OPPlayerTroopDispatch_descriptor_, &OPPlayerTroopDispatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      POPlayerTroopDispatch_descriptor_, &POPlayerTroopDispatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BPBattleResultNotify_descriptor_, &BPBattleResultNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OPTroopAttack_descriptor_, &OPTroopAttack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      POTroopAttack_descriptor_, &POTroopAttack::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_position_2eproto() {
  delete MessageType::default_instance_;
  delete MessageType_reflection_;
  delete BPBattleRegister::default_instance_;
  delete BPBattleRegister_reflection_;
  delete PBBattleRegister::default_instance_;
  delete PBBattleRegister_reflection_;
  delete GPGateRegister::default_instance_;
  delete GPGateRegister_reflection_;
  delete PGGateRegister::default_instance_;
  delete PGGateRegister_reflection_;
  delete GPPlayerRegister::default_instance_;
  delete GPPlayerRegister_reflection_;
  delete OPOnlineRegister::default_instance_;
  delete OPOnlineRegister_reflection_;
  delete POOnlineRegister::default_instance_;
  delete POOnlineRegister_reflection_;
  delete OPPlayerRegister::default_instance_;
  delete OPPlayerRegister_reflection_;
  delete OPPlayerTroopDispatch::default_instance_;
  delete OPPlayerTroopDispatch_reflection_;
  delete POPlayerTroopDispatch::default_instance_;
  delete POPlayerTroopDispatch_reflection_;
  delete BPBattleResultNotify::default_instance_;
  delete BPBattleResultNotify_reflection_;
  delete OPTroopAttack::default_instance_;
  delete OPTroopAttack_reflection_;
  delete POTroopAttack::default_instance_;
  delete POTroopAttack_reflection_;
}

void protobuf_AddDesc_position_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_position_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::shareproto::protobuf_AddDesc_share_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016position.proto\022\rpositionproto\032\013share.p"
    "roto\"\220\002\n\013MessageType\"\200\002\n\003Cmd\022\014\n\010StartCmd"
    "\020\000\022\017\n\nGPStartCmd\020\270\027\022\025\n\020BPBattleRegister\020"
    "\271\027\022\023\n\016GPGateRegister\020\272\027\022\025\n\020GPPlayerRegis"
    "ter\020\273\027\022\017\n\nPBGtIfNTBt\020\274\027\022\025\n\020OPOnlineRegis"
    "ter\020\275\027\022\025\n\020OPPlayerRegister\020\276\027\022\032\n\025OPPlaye"
    "rTroopDispatch\020\277\027\022\031\n\024BPBattleResultNotif"
    "y\020\300\027\022\022\n\rOPTroopAttack\020\301\027\022\r\n\010GPEndCmd\020\237\037\""
    "\215\001\n\020BPBattleRegister\022\021\n\tbattle_id\030\001 \001(\r\022"
    "\021\n\tbattle_ip\030\002 \001(\014\022\023\n\013battle_port\030\003 \001(\r\022"
    "\017\n\007x_start\030\004 \001(\002\022\r\n\005x_end\030\005 \001(\002\022\017\n\007y_sta"
    "rt\030\006 \001(\002\022\r\n\005y_end\030\007 \001(\002\"D\n\020PBBattleRegis"
    "ter\0220\n\tgate_info\030\001 \003(\0132\035.positionproto.G"
    "PGateRegister\"E\n\016GPGateRegister\022\017\n\007gate_"
    "id\030\001 \001(\r\022\017\n\007gate_ip\030\002 \001(\014\022\021\n\tgate_port\030\003"
    " \001(\r\"\020\n\016PGGateRegister\"B\n\020GPPlayerRegist"
    "er\022.\n\006player\030\001 \003(\0132\036.shareproto.PlayerRe"
    "gisterInfo\"p\n\020OPOnlineRegister\022\021\n\tonline"
    "_id\030\001 \001(\r\022\021\n\tonline_ip\030\002 \001(\014\022\023\n\013online_p"
    "ort\030\003 \001(\r\022\016\n\006source\030\004 \001(\r\022\021\n\tserver_id\030\005"
    " \001(\r\"\022\n\020POOnlineRegister\"B\n\020OPPlayerRegi"
    "ster\022.\n\006player\030\001 \003(\0132\036.shareproto.Player"
    "RegisterInfo\"C\n\025OPPlayerTroopDispatch\022*\n"
    "\005troop\030\001 \003(\0132\033.shareproto.PlayerTroopInf"
    "o\"C\n\025POPlayerTroopDispatch\022*\n\005troop\030\002 \003("
    "\0132\033.shareproto.PlayerTroopInfo\"G\n\024BPBatt"
    "leResultNotify\022/\n\ntroop_info\030\001 \003(\0132\033.sha"
    "reproto.TroopDetailInfo\":\n\rOPTroopAttack"
    "\022)\n\004info\030\001 \001(\0132\033.shareproto.TroopAttackI"
    "nfo\"\017\n\rPOTroopAttackb\006proto3", 1188);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "position.proto", &protobuf_RegisterTypes);
  MessageType::default_instance_ = new MessageType();
  BPBattleRegister::default_instance_ = new BPBattleRegister();
  PBBattleRegister::default_instance_ = new PBBattleRegister();
  GPGateRegister::default_instance_ = new GPGateRegister();
  PGGateRegister::default_instance_ = new PGGateRegister();
  GPPlayerRegister::default_instance_ = new GPPlayerRegister();
  OPOnlineRegister::default_instance_ = new OPOnlineRegister();
  POOnlineRegister::default_instance_ = new POOnlineRegister();
  OPPlayerRegister::default_instance_ = new OPPlayerRegister();
  OPPlayerTroopDispatch::default_instance_ = new OPPlayerTroopDispatch();
  POPlayerTroopDispatch::default_instance_ = new POPlayerTroopDispatch();
  BPBattleResultNotify::default_instance_ = new BPBattleResultNotify();
  OPTroopAttack::default_instance_ = new OPTroopAttack();
  POTroopAttack::default_instance_ = new POTroopAttack();
  MessageType::default_instance_->InitAsDefaultInstance();
  BPBattleRegister::default_instance_->InitAsDefaultInstance();
  PBBattleRegister::default_instance_->InitAsDefaultInstance();
  GPGateRegister::default_instance_->InitAsDefaultInstance();
  PGGateRegister::default_instance_->InitAsDefaultInstance();
  GPPlayerRegister::default_instance_->InitAsDefaultInstance();
  OPOnlineRegister::default_instance_->InitAsDefaultInstance();
  POOnlineRegister::default_instance_->InitAsDefaultInstance();
  OPPlayerRegister::default_instance_->InitAsDefaultInstance();
  OPPlayerTroopDispatch::default_instance_->InitAsDefaultInstance();
  POPlayerTroopDispatch::default_instance_->InitAsDefaultInstance();
  BPBattleResultNotify::default_instance_->InitAsDefaultInstance();
  OPTroopAttack::default_instance_->InitAsDefaultInstance();
  POTroopAttack::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_position_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_position_2eproto {
  StaticDescriptorInitializer_position_2eproto() {
    protobuf_AddDesc_position_2eproto();
  }
} static_descriptor_initializer_position_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* MessageType_Cmd_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_Cmd_descriptor_;
}
bool MessageType_Cmd_IsValid(int value) {
  switch(value) {
    case 0:
    case 3000:
    case 3001:
    case 3002:
    case 3003:
    case 3004:
    case 3005:
    case 3006:
    case 3007:
    case 3008:
    case 3009:
    case 3999:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MessageType_Cmd MessageType::StartCmd;
const MessageType_Cmd MessageType::GPStartCmd;
const MessageType_Cmd MessageType::BPBattleRegister;
const MessageType_Cmd MessageType::GPGateRegister;
const MessageType_Cmd MessageType::GPPlayerRegister;
const MessageType_Cmd MessageType::PBGtIfNTBt;
const MessageType_Cmd MessageType::OPOnlineRegister;
const MessageType_Cmd MessageType::OPPlayerRegister;
const MessageType_Cmd MessageType::OPPlayerTroopDispatch;
const MessageType_Cmd MessageType::BPBattleResultNotify;
const MessageType_Cmd MessageType::OPTroopAttack;
const MessageType_Cmd MessageType::GPEndCmd;
const MessageType_Cmd MessageType::Cmd_MIN;
const MessageType_Cmd MessageType::Cmd_MAX;
const int MessageType::Cmd_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageType::MessageType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:positionproto.MessageType)
}

void MessageType::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageType::MessageType(const MessageType& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:positionproto.MessageType)
}

void MessageType::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MessageType::~MessageType() {
  // @@protoc_insertion_point(destructor:positionproto.MessageType)
  SharedDtor();
}

void MessageType::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_descriptor_;
}

const MessageType& MessageType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_position_2eproto();
  return *default_instance_;
}

MessageType* MessageType::default_instance_ = NULL;

MessageType* MessageType::New(::google::protobuf::Arena* arena) const {
  MessageType* n = new MessageType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageType::Clear() {
// @@protoc_insertion_point(message_clear_start:positionproto.MessageType)
}

bool MessageType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:positionproto.MessageType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:positionproto.MessageType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:positionproto.MessageType)
  return false;
#undef DO_
}

void MessageType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:positionproto.MessageType)
  // @@protoc_insertion_point(serialize_end:positionproto.MessageType)
}

::google::protobuf::uint8* MessageType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:positionproto.MessageType)
  // @@protoc_insertion_point(serialize_to_array_end:positionproto.MessageType)
  return target;
}

int MessageType::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:positionproto.MessageType)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:positionproto.MessageType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageType* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:positionproto.MessageType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:positionproto.MessageType)
    MergeFrom(*source);
  }
}

void MessageType::MergeFrom(const MessageType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:positionproto.MessageType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void MessageType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:positionproto.MessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageType::CopyFrom(const MessageType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:positionproto.MessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageType::IsInitialized() const {

  return true;
}

void MessageType::Swap(MessageType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageType::InternalSwap(MessageType* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageType_descriptor_;
  metadata.reflection = MessageType_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageType

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BPBattleRegister::kBattleIdFieldNumber;
const int BPBattleRegister::kBattleIpFieldNumber;
const int BPBattleRegister::kBattlePortFieldNumber;
const int BPBattleRegister::kXStartFieldNumber;
const int BPBattleRegister::kXEndFieldNumber;
const int BPBattleRegister::kYStartFieldNumber;
const int BPBattleRegister::kYEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BPBattleRegister::BPBattleRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:positionproto.BPBattleRegister)
}

void BPBattleRegister::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BPBattleRegister::BPBattleRegister(const BPBattleRegister& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:positionproto.BPBattleRegister)
}

void BPBattleRegister::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  battle_id_ = 0u;
  battle_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  battle_port_ = 0u;
  x_start_ = 0;
  x_end_ = 0;
  y_start_ = 0;
  y_end_ = 0;
}

BPBattleRegister::~BPBattleRegister() {
  // @@protoc_insertion_point(destructor:positionproto.BPBattleRegister)
  SharedDtor();
}

void BPBattleRegister::SharedDtor() {
  battle_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BPBattleRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BPBattleRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BPBattleRegister_descriptor_;
}

const BPBattleRegister& BPBattleRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_position_2eproto();
  return *default_instance_;
}

BPBattleRegister* BPBattleRegister::default_instance_ = NULL;

BPBattleRegister* BPBattleRegister::New(::google::protobuf::Arena* arena) const {
  BPBattleRegister* n = new BPBattleRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BPBattleRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:positionproto.BPBattleRegister)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BPBattleRegister, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BPBattleRegister*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(battle_id_, y_end_);
  battle_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool BPBattleRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:positionproto.BPBattleRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 battle_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battle_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_battle_ip;
        break;
      }

      // optional bytes battle_ip = 2;
      case 2: {
        if (tag == 18) {
         parse_battle_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_battle_ip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_battle_port;
        break;
      }

      // optional uint32 battle_port = 3;
      case 3: {
        if (tag == 24) {
         parse_battle_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battle_port_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_x_start;
        break;
      }

      // optional float x_start = 4;
      case 4: {
        if (tag == 37) {
         parse_x_start:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_start_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_x_end;
        break;
      }

      // optional float x_end = 5;
      case 5: {
        if (tag == 45) {
         parse_x_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_end_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_y_start;
        break;
      }

      // optional float y_start = 6;
      case 6: {
        if (tag == 53) {
         parse_y_start:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_start_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_y_end;
        break;
      }

      // optional float y_end = 7;
      case 7: {
        if (tag == 61) {
         parse_y_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_end_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:positionproto.BPBattleRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:positionproto.BPBattleRegister)
  return false;
#undef DO_
}

void BPBattleRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:positionproto.BPBattleRegister)
  // optional uint32 battle_id = 1;
  if (this->battle_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->battle_id(), output);
  }

  // optional bytes battle_ip = 2;
  if (this->battle_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->battle_ip(), output);
  }

  // optional uint32 battle_port = 3;
  if (this->battle_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->battle_port(), output);
  }

  // optional float x_start = 4;
  if (this->x_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->x_start(), output);
  }

  // optional float x_end = 5;
  if (this->x_end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->x_end(), output);
  }

  // optional float y_start = 6;
  if (this->y_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->y_start(), output);
  }

  // optional float y_end = 7;
  if (this->y_end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->y_end(), output);
  }

  // @@protoc_insertion_point(serialize_end:positionproto.BPBattleRegister)
}

::google::protobuf::uint8* BPBattleRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:positionproto.BPBattleRegister)
  // optional uint32 battle_id = 1;
  if (this->battle_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->battle_id(), target);
  }

  // optional bytes battle_ip = 2;
  if (this->battle_ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->battle_ip(), target);
  }

  // optional uint32 battle_port = 3;
  if (this->battle_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->battle_port(), target);
  }

  // optional float x_start = 4;
  if (this->x_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->x_start(), target);
  }

  // optional float x_end = 5;
  if (this->x_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->x_end(), target);
  }

  // optional float y_start = 6;
  if (this->y_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->y_start(), target);
  }

  // optional float y_end = 7;
  if (this->y_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->y_end(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:positionproto.BPBattleRegister)
  return target;
}

int BPBattleRegister::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:positionproto.BPBattleRegister)
  int total_size = 0;

  // optional uint32 battle_id = 1;
  if (this->battle_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battle_id());
  }

  // optional bytes battle_ip = 2;
  if (this->battle_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->battle_ip());
  }

  // optional uint32 battle_port = 3;
  if (this->battle_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battle_port());
  }

  // optional float x_start = 4;
  if (this->x_start() != 0) {
    total_size += 1 + 4;
  }

  // optional float x_end = 5;
  if (this->x_end() != 0) {
    total_size += 1 + 4;
  }

  // optional float y_start = 6;
  if (this->y_start() != 0) {
    total_size += 1 + 4;
  }

  // optional float y_end = 7;
  if (this->y_end() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BPBattleRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:positionproto.BPBattleRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BPBattleRegister* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BPBattleRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:positionproto.BPBattleRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:positionproto.BPBattleRegister)
    MergeFrom(*source);
  }
}

void BPBattleRegister::MergeFrom(const BPBattleRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:positionproto.BPBattleRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.battle_id() != 0) {
    set_battle_id(from.battle_id());
  }
  if (from.battle_ip().size() > 0) {

    battle_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.battle_ip_);
  }
  if (from.battle_port() != 0) {
    set_battle_port(from.battle_port());
  }
  if (from.x_start() != 0) {
    set_x_start(from.x_start());
  }
  if (from.x_end() != 0) {
    set_x_end(from.x_end());
  }
  if (from.y_start() != 0) {
    set_y_start(from.y_start());
  }
  if (from.y_end() != 0) {
    set_y_end(from.y_end());
  }
}

void BPBattleRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:positionproto.BPBattleRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BPBattleRegister::CopyFrom(const BPBattleRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:positionproto.BPBattleRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BPBattleRegister::IsInitialized() const {

  return true;
}

void BPBattleRegister::Swap(BPBattleRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BPBattleRegister::InternalSwap(BPBattleRegister* other) {
  std::swap(battle_id_, other->battle_id_);
  battle_ip_.Swap(&other->battle_ip_);
  std::swap(battle_port_, other->battle_port_);
  std::swap(x_start_, other->x_start_);
  std::swap(x_end_, other->x_end_);
  std::swap(y_start_, other->y_start_);
  std::swap(y_end_, other->y_end_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BPBattleRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BPBattleRegister_descriptor_;
  metadata.reflection = BPBattleRegister_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BPBattleRegister

// optional uint32 battle_id = 1;
void BPBattleRegister::clear_battle_id() {
  battle_id_ = 0u;
}
 ::google::protobuf::uint32 BPBattleRegister::battle_id() const {
  // @@protoc_insertion_point(field_get:positionproto.BPBattleRegister.battle_id)
  return battle_id_;
}
 void BPBattleRegister::set_battle_id(::google::protobuf::uint32 value) {
  
  battle_id_ = value;
  // @@protoc_insertion_point(field_set:positionproto.BPBattleRegister.battle_id)
}

// optional bytes battle_ip = 2;
void BPBattleRegister::clear_battle_ip() {
  battle_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BPBattleRegister::battle_ip() const {
  // @@protoc_insertion_point(field_get:positionproto.BPBattleRegister.battle_ip)
  return battle_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BPBattleRegister::set_battle_ip(const ::std::string& value) {
  
  battle_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:positionproto.BPBattleRegister.battle_ip)
}
 void BPBattleRegister::set_battle_ip(const char* value) {
  
  battle_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:positionproto.BPBattleRegister.battle_ip)
}
 void BPBattleRegister::set_battle_ip(const void* value, size_t size) {
  
  battle_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:positionproto.BPBattleRegister.battle_ip)
}
 ::std::string* BPBattleRegister::mutable_battle_ip() {
  
  // @@protoc_insertion_point(field_mutable:positionproto.BPBattleRegister.battle_ip)
  return battle_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BPBattleRegister::release_battle_ip() {
  // @@protoc_insertion_point(field_release:positionproto.BPBattleRegister.battle_ip)
  
  return battle_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BPBattleRegister::set_allocated_battle_ip(::std::string* battle_ip) {
  if (battle_ip != NULL) {
    
  } else {
    
  }
  battle_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), battle_ip);
  // @@protoc_insertion_point(field_set_allocated:positionproto.BPBattleRegister.battle_ip)
}

// optional uint32 battle_port = 3;
void BPBattleRegister::clear_battle_port() {
  battle_port_ = 0u;
}
 ::google::protobuf::uint32 BPBattleRegister::battle_port() const {
  // @@protoc_insertion_point(field_get:positionproto.BPBattleRegister.battle_port)
  return battle_port_;
}
 void BPBattleRegister::set_battle_port(::google::protobuf::uint32 value) {
  
  battle_port_ = value;
  // @@protoc_insertion_point(field_set:positionproto.BPBattleRegister.battle_port)
}

// optional float x_start = 4;
void BPBattleRegister::clear_x_start() {
  x_start_ = 0;
}
 float BPBattleRegister::x_start() const {
  // @@protoc_insertion_point(field_get:positionproto.BPBattleRegister.x_start)
  return x_start_;
}
 void BPBattleRegister::set_x_start(float value) {
  
  x_start_ = value;
  // @@protoc_insertion_point(field_set:positionproto.BPBattleRegister.x_start)
}

// optional float x_end = 5;
void BPBattleRegister::clear_x_end() {
  x_end_ = 0;
}
 float BPBattleRegister::x_end() const {
  // @@protoc_insertion_point(field_get:positionproto.BPBattleRegister.x_end)
  return x_end_;
}
 void BPBattleRegister::set_x_end(float value) {
  
  x_end_ = value;
  // @@protoc_insertion_point(field_set:positionproto.BPBattleRegister.x_end)
}

// optional float y_start = 6;
void BPBattleRegister::clear_y_start() {
  y_start_ = 0;
}
 float BPBattleRegister::y_start() const {
  // @@protoc_insertion_point(field_get:positionproto.BPBattleRegister.y_start)
  return y_start_;
}
 void BPBattleRegister::set_y_start(float value) {
  
  y_start_ = value;
  // @@protoc_insertion_point(field_set:positionproto.BPBattleRegister.y_start)
}

// optional float y_end = 7;
void BPBattleRegister::clear_y_end() {
  y_end_ = 0;
}
 float BPBattleRegister::y_end() const {
  // @@protoc_insertion_point(field_get:positionproto.BPBattleRegister.y_end)
  return y_end_;
}
 void BPBattleRegister::set_y_end(float value) {
  
  y_end_ = value;
  // @@protoc_insertion_point(field_set:positionproto.BPBattleRegister.y_end)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBBattleRegister::kGateInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBBattleRegister::PBBattleRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:positionproto.PBBattleRegister)
}

void PBBattleRegister::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBBattleRegister::PBBattleRegister(const PBBattleRegister& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:positionproto.PBBattleRegister)
}

void PBBattleRegister::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PBBattleRegister::~PBBattleRegister() {
  // @@protoc_insertion_point(destructor:positionproto.PBBattleRegister)
  SharedDtor();
}

void PBBattleRegister::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBBattleRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBBattleRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBBattleRegister_descriptor_;
}

const PBBattleRegister& PBBattleRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_position_2eproto();
  return *default_instance_;
}

PBBattleRegister* PBBattleRegister::default_instance_ = NULL;

PBBattleRegister* PBBattleRegister::New(::google::protobuf::Arena* arena) const {
  PBBattleRegister* n = new PBBattleRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBBattleRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:positionproto.PBBattleRegister)
  gate_info_.Clear();
}

bool PBBattleRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:positionproto.PBBattleRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .positionproto.GPGateRegister gate_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_gate_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_gate_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_gate_info;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:positionproto.PBBattleRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:positionproto.PBBattleRegister)
  return false;
#undef DO_
}

void PBBattleRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:positionproto.PBBattleRegister)
  // repeated .positionproto.GPGateRegister gate_info = 1;
  for (unsigned int i = 0, n = this->gate_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gate_info(i), output);
  }

  // @@protoc_insertion_point(serialize_end:positionproto.PBBattleRegister)
}

::google::protobuf::uint8* PBBattleRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:positionproto.PBBattleRegister)
  // repeated .positionproto.GPGateRegister gate_info = 1;
  for (unsigned int i = 0, n = this->gate_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->gate_info(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:positionproto.PBBattleRegister)
  return target;
}

int PBBattleRegister::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:positionproto.PBBattleRegister)
  int total_size = 0;

  // repeated .positionproto.GPGateRegister gate_info = 1;
  total_size += 1 * this->gate_info_size();
  for (int i = 0; i < this->gate_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gate_info(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBBattleRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:positionproto.PBBattleRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PBBattleRegister* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBBattleRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:positionproto.PBBattleRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:positionproto.PBBattleRegister)
    MergeFrom(*source);
  }
}

void PBBattleRegister::MergeFrom(const PBBattleRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:positionproto.PBBattleRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  gate_info_.MergeFrom(from.gate_info_);
}

void PBBattleRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:positionproto.PBBattleRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBBattleRegister::CopyFrom(const PBBattleRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:positionproto.PBBattleRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBBattleRegister::IsInitialized() const {

  return true;
}

void PBBattleRegister::Swap(PBBattleRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBBattleRegister::InternalSwap(PBBattleRegister* other) {
  gate_info_.UnsafeArenaSwap(&other->gate_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBBattleRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBBattleRegister_descriptor_;
  metadata.reflection = PBBattleRegister_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBBattleRegister

// repeated .positionproto.GPGateRegister gate_info = 1;
int PBBattleRegister::gate_info_size() const {
  return gate_info_.size();
}
void PBBattleRegister::clear_gate_info() {
  gate_info_.Clear();
}
const ::positionproto::GPGateRegister& PBBattleRegister::gate_info(int index) const {
  // @@protoc_insertion_point(field_get:positionproto.PBBattleRegister.gate_info)
  return gate_info_.Get(index);
}
::positionproto::GPGateRegister* PBBattleRegister::mutable_gate_info(int index) {
  // @@protoc_insertion_point(field_mutable:positionproto.PBBattleRegister.gate_info)
  return gate_info_.Mutable(index);
}
::positionproto::GPGateRegister* PBBattleRegister::add_gate_info() {
  // @@protoc_insertion_point(field_add:positionproto.PBBattleRegister.gate_info)
  return gate_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::positionproto::GPGateRegister >*
PBBattleRegister::mutable_gate_info() {
  // @@protoc_insertion_point(field_mutable_list:positionproto.PBBattleRegister.gate_info)
  return &gate_info_;
}
const ::google::protobuf::RepeatedPtrField< ::positionproto::GPGateRegister >&
PBBattleRegister::gate_info() const {
  // @@protoc_insertion_point(field_list:positionproto.PBBattleRegister.gate_info)
  return gate_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GPGateRegister::kGateIdFieldNumber;
const int GPGateRegister::kGateIpFieldNumber;
const int GPGateRegister::kGatePortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GPGateRegister::GPGateRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:positionproto.GPGateRegister)
}

void GPGateRegister::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GPGateRegister::GPGateRegister(const GPGateRegister& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:positionproto.GPGateRegister)
}

void GPGateRegister::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gate_id_ = 0u;
  gate_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gate_port_ = 0u;
}

GPGateRegister::~GPGateRegister() {
  // @@protoc_insertion_point(destructor:positionproto.GPGateRegister)
  SharedDtor();
}

void GPGateRegister::SharedDtor() {
  gate_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GPGateRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GPGateRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GPGateRegister_descriptor_;
}

const GPGateRegister& GPGateRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_position_2eproto();
  return *default_instance_;
}

GPGateRegister* GPGateRegister::default_instance_ = NULL;

GPGateRegister* GPGateRegister::New(::google::protobuf::Arena* arena) const {
  GPGateRegister* n = new GPGateRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GPGateRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:positionproto.GPGateRegister)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GPGateRegister, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GPGateRegister*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(gate_id_, gate_port_);
  gate_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GPGateRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:positionproto.GPGateRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 gate_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gate_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gate_ip;
        break;
      }

      // optional bytes gate_ip = 2;
      case 2: {
        if (tag == 18) {
         parse_gate_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gate_ip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gate_port;
        break;
      }

      // optional uint32 gate_port = 3;
      case 3: {
        if (tag == 24) {
         parse_gate_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gate_port_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:positionproto.GPGateRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:positionproto.GPGateRegister)
  return false;
#undef DO_
}

void GPGateRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:positionproto.GPGateRegister)
  // optional uint32 gate_id = 1;
  if (this->gate_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gate_id(), output);
  }

  // optional bytes gate_ip = 2;
  if (this->gate_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->gate_ip(), output);
  }

  // optional uint32 gate_port = 3;
  if (this->gate_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gate_port(), output);
  }

  // @@protoc_insertion_point(serialize_end:positionproto.GPGateRegister)
}

::google::protobuf::uint8* GPGateRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:positionproto.GPGateRegister)
  // optional uint32 gate_id = 1;
  if (this->gate_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gate_id(), target);
  }

  // optional bytes gate_ip = 2;
  if (this->gate_ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->gate_ip(), target);
  }

  // optional uint32 gate_port = 3;
  if (this->gate_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gate_port(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:positionproto.GPGateRegister)
  return target;
}

int GPGateRegister::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:positionproto.GPGateRegister)
  int total_size = 0;

  // optional uint32 gate_id = 1;
  if (this->gate_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gate_id());
  }

  // optional bytes gate_ip = 2;
  if (this->gate_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gate_ip());
  }

  // optional uint32 gate_port = 3;
  if (this->gate_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gate_port());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GPGateRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:positionproto.GPGateRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GPGateRegister* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GPGateRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:positionproto.GPGateRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:positionproto.GPGateRegister)
    MergeFrom(*source);
  }
}

void GPGateRegister::MergeFrom(const GPGateRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:positionproto.GPGateRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.gate_id() != 0) {
    set_gate_id(from.gate_id());
  }
  if (from.gate_ip().size() > 0) {

    gate_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gate_ip_);
  }
  if (from.gate_port() != 0) {
    set_gate_port(from.gate_port());
  }
}

void GPGateRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:positionproto.GPGateRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GPGateRegister::CopyFrom(const GPGateRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:positionproto.GPGateRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GPGateRegister::IsInitialized() const {

  return true;
}

void GPGateRegister::Swap(GPGateRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GPGateRegister::InternalSwap(GPGateRegister* other) {
  std::swap(gate_id_, other->gate_id_);
  gate_ip_.Swap(&other->gate_ip_);
  std::swap(gate_port_, other->gate_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GPGateRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GPGateRegister_descriptor_;
  metadata.reflection = GPGateRegister_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GPGateRegister

// optional uint32 gate_id = 1;
void GPGateRegister::clear_gate_id() {
  gate_id_ = 0u;
}
 ::google::protobuf::uint32 GPGateRegister::gate_id() const {
  // @@protoc_insertion_point(field_get:positionproto.GPGateRegister.gate_id)
  return gate_id_;
}
 void GPGateRegister::set_gate_id(::google::protobuf::uint32 value) {
  
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:positionproto.GPGateRegister.gate_id)
}

// optional bytes gate_ip = 2;
void GPGateRegister::clear_gate_ip() {
  gate_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GPGateRegister::gate_ip() const {
  // @@protoc_insertion_point(field_get:positionproto.GPGateRegister.gate_ip)
  return gate_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GPGateRegister::set_gate_ip(const ::std::string& value) {
  
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:positionproto.GPGateRegister.gate_ip)
}
 void GPGateRegister::set_gate_ip(const char* value) {
  
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:positionproto.GPGateRegister.gate_ip)
}
 void GPGateRegister::set_gate_ip(const void* value, size_t size) {
  
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:positionproto.GPGateRegister.gate_ip)
}
 ::std::string* GPGateRegister::mutable_gate_ip() {
  
  // @@protoc_insertion_point(field_mutable:positionproto.GPGateRegister.gate_ip)
  return gate_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GPGateRegister::release_gate_ip() {
  // @@protoc_insertion_point(field_release:positionproto.GPGateRegister.gate_ip)
  
  return gate_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GPGateRegister::set_allocated_gate_ip(::std::string* gate_ip) {
  if (gate_ip != NULL) {
    
  } else {
    
  }
  gate_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gate_ip);
  // @@protoc_insertion_point(field_set_allocated:positionproto.GPGateRegister.gate_ip)
}

// optional uint32 gate_port = 3;
void GPGateRegister::clear_gate_port() {
  gate_port_ = 0u;
}
 ::google::protobuf::uint32 GPGateRegister::gate_port() const {
  // @@protoc_insertion_point(field_get:positionproto.GPGateRegister.gate_port)
  return gate_port_;
}
 void GPGateRegister::set_gate_port(::google::protobuf::uint32 value) {
  
  gate_port_ = value;
  // @@protoc_insertion_point(field_set:positionproto.GPGateRegister.gate_port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PGGateRegister::PGGateRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:positionproto.PGGateRegister)
}

void PGGateRegister::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PGGateRegister::PGGateRegister(const PGGateRegister& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:positionproto.PGGateRegister)
}

void PGGateRegister::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PGGateRegister::~PGGateRegister() {
  // @@protoc_insertion_point(destructor:positionproto.PGGateRegister)
  SharedDtor();
}

void PGGateRegister::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PGGateRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PGGateRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PGGateRegister_descriptor_;
}

const PGGateRegister& PGGateRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_position_2eproto();
  return *default_instance_;
}

PGGateRegister* PGGateRegister::default_instance_ = NULL;

PGGateRegister* PGGateRegister::New(::google::protobuf::Arena* arena) const {
  PGGateRegister* n = new PGGateRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PGGateRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:positionproto.PGGateRegister)
}

bool PGGateRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:positionproto.PGGateRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:positionproto.PGGateRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:positionproto.PGGateRegister)
  return false;
#undef DO_
}

void PGGateRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:positionproto.PGGateRegister)
  // @@protoc_insertion_point(serialize_end:positionproto.PGGateRegister)
}

::google::protobuf::uint8* PGGateRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:positionproto.PGGateRegister)
  // @@protoc_insertion_point(serialize_to_array_end:positionproto.PGGateRegister)
  return target;
}

int PGGateRegister::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:positionproto.PGGateRegister)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PGGateRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:positionproto.PGGateRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PGGateRegister* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PGGateRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:positionproto.PGGateRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:positionproto.PGGateRegister)
    MergeFrom(*source);
  }
}

void PGGateRegister::MergeFrom(const PGGateRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:positionproto.PGGateRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void PGGateRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:positionproto.PGGateRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PGGateRegister::CopyFrom(const PGGateRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:positionproto.PGGateRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PGGateRegister::IsInitialized() const {

  return true;
}

void PGGateRegister::Swap(PGGateRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PGGateRegister::InternalSwap(PGGateRegister* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PGGateRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PGGateRegister_descriptor_;
  metadata.reflection = PGGateRegister_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PGGateRegister

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GPPlayerRegister::kPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GPPlayerRegister::GPPlayerRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:positionproto.GPPlayerRegister)
}

void GPPlayerRegister::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GPPlayerRegister::GPPlayerRegister(const GPPlayerRegister& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:positionproto.GPPlayerRegister)
}

void GPPlayerRegister::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

GPPlayerRegister::~GPPlayerRegister() {
  // @@protoc_insertion_point(destructor:positionproto.GPPlayerRegister)
  SharedDtor();
}

void GPPlayerRegister::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GPPlayerRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GPPlayerRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GPPlayerRegister_descriptor_;
}

const GPPlayerRegister& GPPlayerRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_position_2eproto();
  return *default_instance_;
}

GPPlayerRegister* GPPlayerRegister::default_instance_ = NULL;

GPPlayerRegister* GPPlayerRegister::New(::google::protobuf::Arena* arena) const {
  GPPlayerRegister* n = new GPPlayerRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GPPlayerRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:positionproto.GPPlayerRegister)
  player_.Clear();
}

bool GPPlayerRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:positionproto.GPPlayerRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shareproto.PlayerRegisterInfo player = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_player:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_player()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_player;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:positionproto.GPPlayerRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:positionproto.GPPlayerRegister)
  return false;
#undef DO_
}

void GPPlayerRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:positionproto.GPPlayerRegister)
  // repeated .shareproto.PlayerRegisterInfo player = 1;
  for (unsigned int i = 0, n = this->player_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player(i), output);
  }

  // @@protoc_insertion_point(serialize_end:positionproto.GPPlayerRegister)
}

::google::protobuf::uint8* GPPlayerRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:positionproto.GPPlayerRegister)
  // repeated .shareproto.PlayerRegisterInfo player = 1;
  for (unsigned int i = 0, n = this->player_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->player(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:positionproto.GPPlayerRegister)
  return target;
}

int GPPlayerRegister::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:positionproto.GPPlayerRegister)
  int total_size = 0;

  // repeated .shareproto.PlayerRegisterInfo player = 1;
  total_size += 1 * this->player_size();
  for (int i = 0; i < this->player_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->player(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GPPlayerRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:positionproto.GPPlayerRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GPPlayerRegister* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GPPlayerRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:positionproto.GPPlayerRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:positionproto.GPPlayerRegister)
    MergeFrom(*source);
  }
}

void GPPlayerRegister::MergeFrom(const GPPlayerRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:positionproto.GPPlayerRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  player_.MergeFrom(from.player_);
}

void GPPlayerRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:positionproto.GPPlayerRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GPPlayerRegister::CopyFrom(const GPPlayerRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:positionproto.GPPlayerRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GPPlayerRegister::IsInitialized() const {

  return true;
}

void GPPlayerRegister::Swap(GPPlayerRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GPPlayerRegister::InternalSwap(GPPlayerRegister* other) {
  player_.UnsafeArenaSwap(&other->player_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GPPlayerRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GPPlayerRegister_descriptor_;
  metadata.reflection = GPPlayerRegister_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GPPlayerRegister

// repeated .shareproto.PlayerRegisterInfo player = 1;
int GPPlayerRegister::player_size() const {
  return player_.size();
}
void GPPlayerRegister::clear_player() {
  player_.Clear();
}
const ::shareproto::PlayerRegisterInfo& GPPlayerRegister::player(int index) const {
  // @@protoc_insertion_point(field_get:positionproto.GPPlayerRegister.player)
  return player_.Get(index);
}
::shareproto::PlayerRegisterInfo* GPPlayerRegister::mutable_player(int index) {
  // @@protoc_insertion_point(field_mutable:positionproto.GPPlayerRegister.player)
  return player_.Mutable(index);
}
::shareproto::PlayerRegisterInfo* GPPlayerRegister::add_player() {
  // @@protoc_insertion_point(field_add:positionproto.GPPlayerRegister.player)
  return player_.Add();
}
::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >*
GPPlayerRegister::mutable_player() {
  // @@protoc_insertion_point(field_mutable_list:positionproto.GPPlayerRegister.player)
  return &player_;
}
const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >&
GPPlayerRegister::player() const {
  // @@protoc_insertion_point(field_list:positionproto.GPPlayerRegister.player)
  return player_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OPOnlineRegister::kOnlineIdFieldNumber;
const int OPOnlineRegister::kOnlineIpFieldNumber;
const int OPOnlineRegister::kOnlinePortFieldNumber;
const int OPOnlineRegister::kSourceFieldNumber;
const int OPOnlineRegister::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OPOnlineRegister::OPOnlineRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:positionproto.OPOnlineRegister)
}

void OPOnlineRegister::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OPOnlineRegister::OPOnlineRegister(const OPOnlineRegister& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:positionproto.OPOnlineRegister)
}

void OPOnlineRegister::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  online_id_ = 0u;
  online_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_port_ = 0u;
  source_ = 0u;
  server_id_ = 0u;
}

OPOnlineRegister::~OPOnlineRegister() {
  // @@protoc_insertion_point(destructor:positionproto.OPOnlineRegister)
  SharedDtor();
}

void OPOnlineRegister::SharedDtor() {
  online_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void OPOnlineRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OPOnlineRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OPOnlineRegister_descriptor_;
}

const OPOnlineRegister& OPOnlineRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_position_2eproto();
  return *default_instance_;
}

OPOnlineRegister* OPOnlineRegister::default_instance_ = NULL;

OPOnlineRegister* OPOnlineRegister::New(::google::protobuf::Arena* arena) const {
  OPOnlineRegister* n = new OPOnlineRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OPOnlineRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:positionproto.OPOnlineRegister)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OPOnlineRegister, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OPOnlineRegister*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(online_id_, server_id_);
  online_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool OPOnlineRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:positionproto.OPOnlineRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 online_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &online_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_online_ip;
        break;
      }

      // optional bytes online_ip = 2;
      case 2: {
        if (tag == 18) {
         parse_online_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_online_ip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_online_port;
        break;
      }

      // optional uint32 online_port = 3;
      case 3: {
        if (tag == 24) {
         parse_online_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &online_port_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_source;
        break;
      }

      // optional uint32 source = 4;
      case 4: {
        if (tag == 32) {
         parse_source:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_server_id;
        break;
      }

      // optional uint32 server_id = 5;
      case 5: {
        if (tag == 40) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:positionproto.OPOnlineRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:positionproto.OPOnlineRegister)
  return false;
#undef DO_
}

void OPOnlineRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:positionproto.OPOnlineRegister)
  // optional uint32 online_id = 1;
  if (this->online_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->online_id(), output);
  }

  // optional bytes online_ip = 2;
  if (this->online_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->online_ip(), output);
  }

  // optional uint32 online_port = 3;
  if (this->online_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->online_port(), output);
  }

  // optional uint32 source = 4;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->source(), output);
  }

  // optional uint32 server_id = 5;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->server_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:positionproto.OPOnlineRegister)
}

::google::protobuf::uint8* OPOnlineRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:positionproto.OPOnlineRegister)
  // optional uint32 online_id = 1;
  if (this->online_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->online_id(), target);
  }

  // optional bytes online_ip = 2;
  if (this->online_ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->online_ip(), target);
  }

  // optional uint32 online_port = 3;
  if (this->online_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->online_port(), target);
  }

  // optional uint32 source = 4;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->source(), target);
  }

  // optional uint32 server_id = 5;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->server_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:positionproto.OPOnlineRegister)
  return target;
}

int OPOnlineRegister::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:positionproto.OPOnlineRegister)
  int total_size = 0;

  // optional uint32 online_id = 1;
  if (this->online_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->online_id());
  }

  // optional bytes online_ip = 2;
  if (this->online_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->online_ip());
  }

  // optional uint32 online_port = 3;
  if (this->online_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->online_port());
  }

  // optional uint32 source = 4;
  if (this->source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source());
  }

  // optional uint32 server_id = 5;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OPOnlineRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:positionproto.OPOnlineRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OPOnlineRegister* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OPOnlineRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:positionproto.OPOnlineRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:positionproto.OPOnlineRegister)
    MergeFrom(*source);
  }
}

void OPOnlineRegister::MergeFrom(const OPOnlineRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:positionproto.OPOnlineRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.online_id() != 0) {
    set_online_id(from.online_id());
  }
  if (from.online_ip().size() > 0) {

    online_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_ip_);
  }
  if (from.online_port() != 0) {
    set_online_port(from.online_port());
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
}

void OPOnlineRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:positionproto.OPOnlineRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OPOnlineRegister::CopyFrom(const OPOnlineRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:positionproto.OPOnlineRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OPOnlineRegister::IsInitialized() const {

  return true;
}

void OPOnlineRegister::Swap(OPOnlineRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OPOnlineRegister::InternalSwap(OPOnlineRegister* other) {
  std::swap(online_id_, other->online_id_);
  online_ip_.Swap(&other->online_ip_);
  std::swap(online_port_, other->online_port_);
  std::swap(source_, other->source_);
  std::swap(server_id_, other->server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OPOnlineRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OPOnlineRegister_descriptor_;
  metadata.reflection = OPOnlineRegister_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OPOnlineRegister

// optional uint32 online_id = 1;
void OPOnlineRegister::clear_online_id() {
  online_id_ = 0u;
}
 ::google::protobuf::uint32 OPOnlineRegister::online_id() const {
  // @@protoc_insertion_point(field_get:positionproto.OPOnlineRegister.online_id)
  return online_id_;
}
 void OPOnlineRegister::set_online_id(::google::protobuf::uint32 value) {
  
  online_id_ = value;
  // @@protoc_insertion_point(field_set:positionproto.OPOnlineRegister.online_id)
}

// optional bytes online_ip = 2;
void OPOnlineRegister::clear_online_ip() {
  online_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OPOnlineRegister::online_ip() const {
  // @@protoc_insertion_point(field_get:positionproto.OPOnlineRegister.online_ip)
  return online_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OPOnlineRegister::set_online_ip(const ::std::string& value) {
  
  online_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:positionproto.OPOnlineRegister.online_ip)
}
 void OPOnlineRegister::set_online_ip(const char* value) {
  
  online_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:positionproto.OPOnlineRegister.online_ip)
}
 void OPOnlineRegister::set_online_ip(const void* value, size_t size) {
  
  online_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:positionproto.OPOnlineRegister.online_ip)
}
 ::std::string* OPOnlineRegister::mutable_online_ip() {
  
  // @@protoc_insertion_point(field_mutable:positionproto.OPOnlineRegister.online_ip)
  return online_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OPOnlineRegister::release_online_ip() {
  // @@protoc_insertion_point(field_release:positionproto.OPOnlineRegister.online_ip)
  
  return online_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OPOnlineRegister::set_allocated_online_ip(::std::string* online_ip) {
  if (online_ip != NULL) {
    
  } else {
    
  }
  online_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_ip);
  // @@protoc_insertion_point(field_set_allocated:positionproto.OPOnlineRegister.online_ip)
}

// optional uint32 online_port = 3;
void OPOnlineRegister::clear_online_port() {
  online_port_ = 0u;
}
 ::google::protobuf::uint32 OPOnlineRegister::online_port() const {
  // @@protoc_insertion_point(field_get:positionproto.OPOnlineRegister.online_port)
  return online_port_;
}
 void OPOnlineRegister::set_online_port(::google::protobuf::uint32 value) {
  
  online_port_ = value;
  // @@protoc_insertion_point(field_set:positionproto.OPOnlineRegister.online_port)
}

// optional uint32 source = 4;
void OPOnlineRegister::clear_source() {
  source_ = 0u;
}
 ::google::protobuf::uint32 OPOnlineRegister::source() const {
  // @@protoc_insertion_point(field_get:positionproto.OPOnlineRegister.source)
  return source_;
}
 void OPOnlineRegister::set_source(::google::protobuf::uint32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:positionproto.OPOnlineRegister.source)
}

// optional uint32 server_id = 5;
void OPOnlineRegister::clear_server_id() {
  server_id_ = 0u;
}
 ::google::protobuf::uint32 OPOnlineRegister::server_id() const {
  // @@protoc_insertion_point(field_get:positionproto.OPOnlineRegister.server_id)
  return server_id_;
}
 void OPOnlineRegister::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:positionproto.OPOnlineRegister.server_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

POOnlineRegister::POOnlineRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:positionproto.POOnlineRegister)
}

void POOnlineRegister::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

POOnlineRegister::POOnlineRegister(const POOnlineRegister& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:positionproto.POOnlineRegister)
}

void POOnlineRegister::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

POOnlineRegister::~POOnlineRegister() {
  // @@protoc_insertion_point(destructor:positionproto.POOnlineRegister)
  SharedDtor();
}

void POOnlineRegister::SharedDtor() {
  if (this != default_instance_) {
  }
}

void POOnlineRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* POOnlineRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return POOnlineRegister_descriptor_;
}

const POOnlineRegister& POOnlineRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_position_2eproto();
  return *default_instance_;
}

POOnlineRegister* POOnlineRegister::default_instance_ = NULL;

POOnlineRegister* POOnlineRegister::New(::google::protobuf::Arena* arena) const {
  POOnlineRegister* n = new POOnlineRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void POOnlineRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:positionproto.POOnlineRegister)
}

bool POOnlineRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:positionproto.POOnlineRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:positionproto.POOnlineRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:positionproto.POOnlineRegister)
  return false;
#undef DO_
}

void POOnlineRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:positionproto.POOnlineRegister)
  // @@protoc_insertion_point(serialize_end:positionproto.POOnlineRegister)
}

::google::protobuf::uint8* POOnlineRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:positionproto.POOnlineRegister)
  // @@protoc_insertion_point(serialize_to_array_end:positionproto.POOnlineRegister)
  return target;
}

int POOnlineRegister::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:positionproto.POOnlineRegister)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void POOnlineRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:positionproto.POOnlineRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const POOnlineRegister* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const POOnlineRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:positionproto.POOnlineRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:positionproto.POOnlineRegister)
    MergeFrom(*source);
  }
}

void POOnlineRegister::MergeFrom(const POOnlineRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:positionproto.POOnlineRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void POOnlineRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:positionproto.POOnlineRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void POOnlineRegister::CopyFrom(const POOnlineRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:positionproto.POOnlineRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool POOnlineRegister::IsInitialized() const {

  return true;
}

void POOnlineRegister::Swap(POOnlineRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void POOnlineRegister::InternalSwap(POOnlineRegister* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata POOnlineRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = POOnlineRegister_descriptor_;
  metadata.reflection = POOnlineRegister_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// POOnlineRegister

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OPPlayerRegister::kPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OPPlayerRegister::OPPlayerRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:positionproto.OPPlayerRegister)
}

void OPPlayerRegister::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OPPlayerRegister::OPPlayerRegister(const OPPlayerRegister& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:positionproto.OPPlayerRegister)
}

void OPPlayerRegister::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

OPPlayerRegister::~OPPlayerRegister() {
  // @@protoc_insertion_point(destructor:positionproto.OPPlayerRegister)
  SharedDtor();
}

void OPPlayerRegister::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OPPlayerRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OPPlayerRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OPPlayerRegister_descriptor_;
}

const OPPlayerRegister& OPPlayerRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_position_2eproto();
  return *default_instance_;
}

OPPlayerRegister* OPPlayerRegister::default_instance_ = NULL;

OPPlayerRegister* OPPlayerRegister::New(::google::protobuf::Arena* arena) const {
  OPPlayerRegister* n = new OPPlayerRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OPPlayerRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:positionproto.OPPlayerRegister)
  player_.Clear();
}

bool OPPlayerRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:positionproto.OPPlayerRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shareproto.PlayerRegisterInfo player = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_player:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_player()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_player;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:positionproto.OPPlayerRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:positionproto.OPPlayerRegister)
  return false;
#undef DO_
}

void OPPlayerRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:positionproto.OPPlayerRegister)
  // repeated .shareproto.PlayerRegisterInfo player = 1;
  for (unsigned int i = 0, n = this->player_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player(i), output);
  }

  // @@protoc_insertion_point(serialize_end:positionproto.OPPlayerRegister)
}

::google::protobuf::uint8* OPPlayerRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:positionproto.OPPlayerRegister)
  // repeated .shareproto.PlayerRegisterInfo player = 1;
  for (unsigned int i = 0, n = this->player_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->player(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:positionproto.OPPlayerRegister)
  return target;
}

int OPPlayerRegister::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:positionproto.OPPlayerRegister)
  int total_size = 0;

  // repeated .shareproto.PlayerRegisterInfo player = 1;
  total_size += 1 * this->player_size();
  for (int i = 0; i < this->player_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->player(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OPPlayerRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:positionproto.OPPlayerRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OPPlayerRegister* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OPPlayerRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:positionproto.OPPlayerRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:positionproto.OPPlayerRegister)
    MergeFrom(*source);
  }
}

void OPPlayerRegister::MergeFrom(const OPPlayerRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:positionproto.OPPlayerRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  player_.MergeFrom(from.player_);
}

void OPPlayerRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:positionproto.OPPlayerRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OPPlayerRegister::CopyFrom(const OPPlayerRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:positionproto.OPPlayerRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OPPlayerRegister::IsInitialized() const {

  return true;
}

void OPPlayerRegister::Swap(OPPlayerRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OPPlayerRegister::InternalSwap(OPPlayerRegister* other) {
  player_.UnsafeArenaSwap(&other->player_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OPPlayerRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OPPlayerRegister_descriptor_;
  metadata.reflection = OPPlayerRegister_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OPPlayerRegister

// repeated .shareproto.PlayerRegisterInfo player = 1;
int OPPlayerRegister::player_size() const {
  return player_.size();
}
void OPPlayerRegister::clear_player() {
  player_.Clear();
}
const ::shareproto::PlayerRegisterInfo& OPPlayerRegister::player(int index) const {
  // @@protoc_insertion_point(field_get:positionproto.OPPlayerRegister.player)
  return player_.Get(index);
}
::shareproto::PlayerRegisterInfo* OPPlayerRegister::mutable_player(int index) {
  // @@protoc_insertion_point(field_mutable:positionproto.OPPlayerRegister.player)
  return player_.Mutable(index);
}
::shareproto::PlayerRegisterInfo* OPPlayerRegister::add_player() {
  // @@protoc_insertion_point(field_add:positionproto.OPPlayerRegister.player)
  return player_.Add();
}
::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >*
OPPlayerRegister::mutable_player() {
  // @@protoc_insertion_point(field_mutable_list:positionproto.OPPlayerRegister.player)
  return &player_;
}
const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >&
OPPlayerRegister::player() const {
  // @@protoc_insertion_point(field_list:positionproto.OPPlayerRegister.player)
  return player_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OPPlayerTroopDispatch::kTroopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OPPlayerTroopDispatch::OPPlayerTroopDispatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:positionproto.OPPlayerTroopDispatch)
}

void OPPlayerTroopDispatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OPPlayerTroopDispatch::OPPlayerTroopDispatch(const OPPlayerTroopDispatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:positionproto.OPPlayerTroopDispatch)
}

void OPPlayerTroopDispatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

OPPlayerTroopDispatch::~OPPlayerTroopDispatch() {
  // @@protoc_insertion_point(destructor:positionproto.OPPlayerTroopDispatch)
  SharedDtor();
}

void OPPlayerTroopDispatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OPPlayerTroopDispatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OPPlayerTroopDispatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OPPlayerTroopDispatch_descriptor_;
}

const OPPlayerTroopDispatch& OPPlayerTroopDispatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_position_2eproto();
  return *default_instance_;
}

OPPlayerTroopDispatch* OPPlayerTroopDispatch::default_instance_ = NULL;

OPPlayerTroopDispatch* OPPlayerTroopDispatch::New(::google::protobuf::Arena* arena) const {
  OPPlayerTroopDispatch* n = new OPPlayerTroopDispatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OPPlayerTroopDispatch::Clear() {
// @@protoc_insertion_point(message_clear_start:positionproto.OPPlayerTroopDispatch)
  troop_.Clear();
}

bool OPPlayerTroopDispatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:positionproto.OPPlayerTroopDispatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shareproto.PlayerTroopInfo troop = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_troop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_troop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_troop;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:positionproto.OPPlayerTroopDispatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:positionproto.OPPlayerTroopDispatch)
  return false;
#undef DO_
}

void OPPlayerTroopDispatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:positionproto.OPPlayerTroopDispatch)
  // repeated .shareproto.PlayerTroopInfo troop = 1;
  for (unsigned int i = 0, n = this->troop_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->troop(i), output);
  }

  // @@protoc_insertion_point(serialize_end:positionproto.OPPlayerTroopDispatch)
}

::google::protobuf::uint8* OPPlayerTroopDispatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:positionproto.OPPlayerTroopDispatch)
  // repeated .shareproto.PlayerTroopInfo troop = 1;
  for (unsigned int i = 0, n = this->troop_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->troop(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:positionproto.OPPlayerTroopDispatch)
  return target;
}

int OPPlayerTroopDispatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:positionproto.OPPlayerTroopDispatch)
  int total_size = 0;

  // repeated .shareproto.PlayerTroopInfo troop = 1;
  total_size += 1 * this->troop_size();
  for (int i = 0; i < this->troop_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->troop(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OPPlayerTroopDispatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:positionproto.OPPlayerTroopDispatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OPPlayerTroopDispatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OPPlayerTroopDispatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:positionproto.OPPlayerTroopDispatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:positionproto.OPPlayerTroopDispatch)
    MergeFrom(*source);
  }
}

void OPPlayerTroopDispatch::MergeFrom(const OPPlayerTroopDispatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:positionproto.OPPlayerTroopDispatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  troop_.MergeFrom(from.troop_);
}

void OPPlayerTroopDispatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:positionproto.OPPlayerTroopDispatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OPPlayerTroopDispatch::CopyFrom(const OPPlayerTroopDispatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:positionproto.OPPlayerTroopDispatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OPPlayerTroopDispatch::IsInitialized() const {

  return true;
}

void OPPlayerTroopDispatch::Swap(OPPlayerTroopDispatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OPPlayerTroopDispatch::InternalSwap(OPPlayerTroopDispatch* other) {
  troop_.UnsafeArenaSwap(&other->troop_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OPPlayerTroopDispatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OPPlayerTroopDispatch_descriptor_;
  metadata.reflection = OPPlayerTroopDispatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OPPlayerTroopDispatch

// repeated .shareproto.PlayerTroopInfo troop = 1;
int OPPlayerTroopDispatch::troop_size() const {
  return troop_.size();
}
void OPPlayerTroopDispatch::clear_troop() {
  troop_.Clear();
}
const ::shareproto::PlayerTroopInfo& OPPlayerTroopDispatch::troop(int index) const {
  // @@protoc_insertion_point(field_get:positionproto.OPPlayerTroopDispatch.troop)
  return troop_.Get(index);
}
::shareproto::PlayerTroopInfo* OPPlayerTroopDispatch::mutable_troop(int index) {
  // @@protoc_insertion_point(field_mutable:positionproto.OPPlayerTroopDispatch.troop)
  return troop_.Mutable(index);
}
::shareproto::PlayerTroopInfo* OPPlayerTroopDispatch::add_troop() {
  // @@protoc_insertion_point(field_add:positionproto.OPPlayerTroopDispatch.troop)
  return troop_.Add();
}
::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >*
OPPlayerTroopDispatch::mutable_troop() {
  // @@protoc_insertion_point(field_mutable_list:positionproto.OPPlayerTroopDispatch.troop)
  return &troop_;
}
const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >&
OPPlayerTroopDispatch::troop() const {
  // @@protoc_insertion_point(field_list:positionproto.OPPlayerTroopDispatch.troop)
  return troop_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int POPlayerTroopDispatch::kTroopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

POPlayerTroopDispatch::POPlayerTroopDispatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:positionproto.POPlayerTroopDispatch)
}

void POPlayerTroopDispatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

POPlayerTroopDispatch::POPlayerTroopDispatch(const POPlayerTroopDispatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:positionproto.POPlayerTroopDispatch)
}

void POPlayerTroopDispatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

POPlayerTroopDispatch::~POPlayerTroopDispatch() {
  // @@protoc_insertion_point(destructor:positionproto.POPlayerTroopDispatch)
  SharedDtor();
}

void POPlayerTroopDispatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void POPlayerTroopDispatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* POPlayerTroopDispatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return POPlayerTroopDispatch_descriptor_;
}

const POPlayerTroopDispatch& POPlayerTroopDispatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_position_2eproto();
  return *default_instance_;
}

POPlayerTroopDispatch* POPlayerTroopDispatch::default_instance_ = NULL;

POPlayerTroopDispatch* POPlayerTroopDispatch::New(::google::protobuf::Arena* arena) const {
  POPlayerTroopDispatch* n = new POPlayerTroopDispatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void POPlayerTroopDispatch::Clear() {
// @@protoc_insertion_point(message_clear_start:positionproto.POPlayerTroopDispatch)
  troop_.Clear();
}

bool POPlayerTroopDispatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:positionproto.POPlayerTroopDispatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shareproto.PlayerTroopInfo troop = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_troop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_troop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_troop;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:positionproto.POPlayerTroopDispatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:positionproto.POPlayerTroopDispatch)
  return false;
#undef DO_
}

void POPlayerTroopDispatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:positionproto.POPlayerTroopDispatch)
  // repeated .shareproto.PlayerTroopInfo troop = 2;
  for (unsigned int i = 0, n = this->troop_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->troop(i), output);
  }

  // @@protoc_insertion_point(serialize_end:positionproto.POPlayerTroopDispatch)
}

::google::protobuf::uint8* POPlayerTroopDispatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:positionproto.POPlayerTroopDispatch)
  // repeated .shareproto.PlayerTroopInfo troop = 2;
  for (unsigned int i = 0, n = this->troop_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->troop(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:positionproto.POPlayerTroopDispatch)
  return target;
}

int POPlayerTroopDispatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:positionproto.POPlayerTroopDispatch)
  int total_size = 0;

  // repeated .shareproto.PlayerTroopInfo troop = 2;
  total_size += 1 * this->troop_size();
  for (int i = 0; i < this->troop_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->troop(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void POPlayerTroopDispatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:positionproto.POPlayerTroopDispatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const POPlayerTroopDispatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const POPlayerTroopDispatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:positionproto.POPlayerTroopDispatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:positionproto.POPlayerTroopDispatch)
    MergeFrom(*source);
  }
}

void POPlayerTroopDispatch::MergeFrom(const POPlayerTroopDispatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:positionproto.POPlayerTroopDispatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  troop_.MergeFrom(from.troop_);
}

void POPlayerTroopDispatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:positionproto.POPlayerTroopDispatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void POPlayerTroopDispatch::CopyFrom(const POPlayerTroopDispatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:positionproto.POPlayerTroopDispatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool POPlayerTroopDispatch::IsInitialized() const {

  return true;
}

void POPlayerTroopDispatch::Swap(POPlayerTroopDispatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void POPlayerTroopDispatch::InternalSwap(POPlayerTroopDispatch* other) {
  troop_.UnsafeArenaSwap(&other->troop_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata POPlayerTroopDispatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = POPlayerTroopDispatch_descriptor_;
  metadata.reflection = POPlayerTroopDispatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// POPlayerTroopDispatch

// repeated .shareproto.PlayerTroopInfo troop = 2;
int POPlayerTroopDispatch::troop_size() const {
  return troop_.size();
}
void POPlayerTroopDispatch::clear_troop() {
  troop_.Clear();
}
const ::shareproto::PlayerTroopInfo& POPlayerTroopDispatch::troop(int index) const {
  // @@protoc_insertion_point(field_get:positionproto.POPlayerTroopDispatch.troop)
  return troop_.Get(index);
}
::shareproto::PlayerTroopInfo* POPlayerTroopDispatch::mutable_troop(int index) {
  // @@protoc_insertion_point(field_mutable:positionproto.POPlayerTroopDispatch.troop)
  return troop_.Mutable(index);
}
::shareproto::PlayerTroopInfo* POPlayerTroopDispatch::add_troop() {
  // @@protoc_insertion_point(field_add:positionproto.POPlayerTroopDispatch.troop)
  return troop_.Add();
}
::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >*
POPlayerTroopDispatch::mutable_troop() {
  // @@protoc_insertion_point(field_mutable_list:positionproto.POPlayerTroopDispatch.troop)
  return &troop_;
}
const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >&
POPlayerTroopDispatch::troop() const {
  // @@protoc_insertion_point(field_list:positionproto.POPlayerTroopDispatch.troop)
  return troop_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BPBattleResultNotify::kTroopInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BPBattleResultNotify::BPBattleResultNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:positionproto.BPBattleResultNotify)
}

void BPBattleResultNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BPBattleResultNotify::BPBattleResultNotify(const BPBattleResultNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:positionproto.BPBattleResultNotify)
}

void BPBattleResultNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

BPBattleResultNotify::~BPBattleResultNotify() {
  // @@protoc_insertion_point(destructor:positionproto.BPBattleResultNotify)
  SharedDtor();
}

void BPBattleResultNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BPBattleResultNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BPBattleResultNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BPBattleResultNotify_descriptor_;
}

const BPBattleResultNotify& BPBattleResultNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_position_2eproto();
  return *default_instance_;
}

BPBattleResultNotify* BPBattleResultNotify::default_instance_ = NULL;

BPBattleResultNotify* BPBattleResultNotify::New(::google::protobuf::Arena* arena) const {
  BPBattleResultNotify* n = new BPBattleResultNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BPBattleResultNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:positionproto.BPBattleResultNotify)
  troop_info_.Clear();
}

bool BPBattleResultNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:positionproto.BPBattleResultNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shareproto.TroopDetailInfo troop_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_troop_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_troop_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_troop_info;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:positionproto.BPBattleResultNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:positionproto.BPBattleResultNotify)
  return false;
#undef DO_
}

void BPBattleResultNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:positionproto.BPBattleResultNotify)
  // repeated .shareproto.TroopDetailInfo troop_info = 1;
  for (unsigned int i = 0, n = this->troop_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->troop_info(i), output);
  }

  // @@protoc_insertion_point(serialize_end:positionproto.BPBattleResultNotify)
}

::google::protobuf::uint8* BPBattleResultNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:positionproto.BPBattleResultNotify)
  // repeated .shareproto.TroopDetailInfo troop_info = 1;
  for (unsigned int i = 0, n = this->troop_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->troop_info(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:positionproto.BPBattleResultNotify)
  return target;
}

int BPBattleResultNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:positionproto.BPBattleResultNotify)
  int total_size = 0;

  // repeated .shareproto.TroopDetailInfo troop_info = 1;
  total_size += 1 * this->troop_info_size();
  for (int i = 0; i < this->troop_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->troop_info(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BPBattleResultNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:positionproto.BPBattleResultNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BPBattleResultNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BPBattleResultNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:positionproto.BPBattleResultNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:positionproto.BPBattleResultNotify)
    MergeFrom(*source);
  }
}

void BPBattleResultNotify::MergeFrom(const BPBattleResultNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:positionproto.BPBattleResultNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  troop_info_.MergeFrom(from.troop_info_);
}

void BPBattleResultNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:positionproto.BPBattleResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BPBattleResultNotify::CopyFrom(const BPBattleResultNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:positionproto.BPBattleResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BPBattleResultNotify::IsInitialized() const {

  return true;
}

void BPBattleResultNotify::Swap(BPBattleResultNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BPBattleResultNotify::InternalSwap(BPBattleResultNotify* other) {
  troop_info_.UnsafeArenaSwap(&other->troop_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BPBattleResultNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BPBattleResultNotify_descriptor_;
  metadata.reflection = BPBattleResultNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BPBattleResultNotify

// repeated .shareproto.TroopDetailInfo troop_info = 1;
int BPBattleResultNotify::troop_info_size() const {
  return troop_info_.size();
}
void BPBattleResultNotify::clear_troop_info() {
  troop_info_.Clear();
}
const ::shareproto::TroopDetailInfo& BPBattleResultNotify::troop_info(int index) const {
  // @@protoc_insertion_point(field_get:positionproto.BPBattleResultNotify.troop_info)
  return troop_info_.Get(index);
}
::shareproto::TroopDetailInfo* BPBattleResultNotify::mutable_troop_info(int index) {
  // @@protoc_insertion_point(field_mutable:positionproto.BPBattleResultNotify.troop_info)
  return troop_info_.Mutable(index);
}
::shareproto::TroopDetailInfo* BPBattleResultNotify::add_troop_info() {
  // @@protoc_insertion_point(field_add:positionproto.BPBattleResultNotify.troop_info)
  return troop_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::shareproto::TroopDetailInfo >*
BPBattleResultNotify::mutable_troop_info() {
  // @@protoc_insertion_point(field_mutable_list:positionproto.BPBattleResultNotify.troop_info)
  return &troop_info_;
}
const ::google::protobuf::RepeatedPtrField< ::shareproto::TroopDetailInfo >&
BPBattleResultNotify::troop_info() const {
  // @@protoc_insertion_point(field_list:positionproto.BPBattleResultNotify.troop_info)
  return troop_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OPTroopAttack::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OPTroopAttack::OPTroopAttack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:positionproto.OPTroopAttack)
}

void OPTroopAttack::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  info_ = const_cast< ::shareproto::TroopAttackInfo*>(&::shareproto::TroopAttackInfo::default_instance());
}

OPTroopAttack::OPTroopAttack(const OPTroopAttack& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:positionproto.OPTroopAttack)
}

void OPTroopAttack::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  info_ = NULL;
}

OPTroopAttack::~OPTroopAttack() {
  // @@protoc_insertion_point(destructor:positionproto.OPTroopAttack)
  SharedDtor();
}

void OPTroopAttack::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void OPTroopAttack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OPTroopAttack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OPTroopAttack_descriptor_;
}

const OPTroopAttack& OPTroopAttack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_position_2eproto();
  return *default_instance_;
}

OPTroopAttack* OPTroopAttack::default_instance_ = NULL;

OPTroopAttack* OPTroopAttack::New(::google::protobuf::Arena* arena) const {
  OPTroopAttack* n = new OPTroopAttack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OPTroopAttack::Clear() {
// @@protoc_insertion_point(message_clear_start:positionproto.OPTroopAttack)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}

bool OPTroopAttack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:positionproto.OPTroopAttack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .shareproto.TroopAttackInfo info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:positionproto.OPTroopAttack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:positionproto.OPTroopAttack)
  return false;
#undef DO_
}

void OPTroopAttack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:positionproto.OPTroopAttack)
  // optional .shareproto.TroopAttackInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:positionproto.OPTroopAttack)
}

::google::protobuf::uint8* OPTroopAttack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:positionproto.OPTroopAttack)
  // optional .shareproto.TroopAttackInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:positionproto.OPTroopAttack)
  return target;
}

int OPTroopAttack::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:positionproto.OPTroopAttack)
  int total_size = 0;

  // optional .shareproto.TroopAttackInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OPTroopAttack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:positionproto.OPTroopAttack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OPTroopAttack* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OPTroopAttack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:positionproto.OPTroopAttack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:positionproto.OPTroopAttack)
    MergeFrom(*source);
  }
}

void OPTroopAttack::MergeFrom(const OPTroopAttack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:positionproto.OPTroopAttack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_info()) {
    mutable_info()->::shareproto::TroopAttackInfo::MergeFrom(from.info());
  }
}

void OPTroopAttack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:positionproto.OPTroopAttack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OPTroopAttack::CopyFrom(const OPTroopAttack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:positionproto.OPTroopAttack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OPTroopAttack::IsInitialized() const {

  return true;
}

void OPTroopAttack::Swap(OPTroopAttack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OPTroopAttack::InternalSwap(OPTroopAttack* other) {
  std::swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OPTroopAttack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OPTroopAttack_descriptor_;
  metadata.reflection = OPTroopAttack_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OPTroopAttack

// optional .shareproto.TroopAttackInfo info = 1;
bool OPTroopAttack::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
void OPTroopAttack::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::shareproto::TroopAttackInfo& OPTroopAttack::info() const {
  // @@protoc_insertion_point(field_get:positionproto.OPTroopAttack.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::shareproto::TroopAttackInfo* OPTroopAttack::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::shareproto::TroopAttackInfo;
  }
  // @@protoc_insertion_point(field_mutable:positionproto.OPTroopAttack.info)
  return info_;
}
::shareproto::TroopAttackInfo* OPTroopAttack::release_info() {
  // @@protoc_insertion_point(field_release:positionproto.OPTroopAttack.info)
  
  ::shareproto::TroopAttackInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void OPTroopAttack::set_allocated_info(::shareproto::TroopAttackInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:positionproto.OPTroopAttack.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

POTroopAttack::POTroopAttack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:positionproto.POTroopAttack)
}

void POTroopAttack::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

POTroopAttack::POTroopAttack(const POTroopAttack& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:positionproto.POTroopAttack)
}

void POTroopAttack::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

POTroopAttack::~POTroopAttack() {
  // @@protoc_insertion_point(destructor:positionproto.POTroopAttack)
  SharedDtor();
}

void POTroopAttack::SharedDtor() {
  if (this != default_instance_) {
  }
}

void POTroopAttack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* POTroopAttack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return POTroopAttack_descriptor_;
}

const POTroopAttack& POTroopAttack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_position_2eproto();
  return *default_instance_;
}

POTroopAttack* POTroopAttack::default_instance_ = NULL;

POTroopAttack* POTroopAttack::New(::google::protobuf::Arena* arena) const {
  POTroopAttack* n = new POTroopAttack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void POTroopAttack::Clear() {
// @@protoc_insertion_point(message_clear_start:positionproto.POTroopAttack)
}

bool POTroopAttack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:positionproto.POTroopAttack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:positionproto.POTroopAttack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:positionproto.POTroopAttack)
  return false;
#undef DO_
}

void POTroopAttack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:positionproto.POTroopAttack)
  // @@protoc_insertion_point(serialize_end:positionproto.POTroopAttack)
}

::google::protobuf::uint8* POTroopAttack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:positionproto.POTroopAttack)
  // @@protoc_insertion_point(serialize_to_array_end:positionproto.POTroopAttack)
  return target;
}

int POTroopAttack::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:positionproto.POTroopAttack)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void POTroopAttack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:positionproto.POTroopAttack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const POTroopAttack* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const POTroopAttack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:positionproto.POTroopAttack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:positionproto.POTroopAttack)
    MergeFrom(*source);
  }
}

void POTroopAttack::MergeFrom(const POTroopAttack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:positionproto.POTroopAttack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void POTroopAttack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:positionproto.POTroopAttack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void POTroopAttack::CopyFrom(const POTroopAttack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:positionproto.POTroopAttack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool POTroopAttack::IsInitialized() const {

  return true;
}

void POTroopAttack::Swap(POTroopAttack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void POTroopAttack::InternalSwap(POTroopAttack* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata POTroopAttack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = POTroopAttack_descriptor_;
  metadata.reflection = POTroopAttack_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// POTroopAttack

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace positionproto

// @@protoc_insertion_point(global_scope)
