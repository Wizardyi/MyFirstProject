// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gate.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gateproto {

namespace {

const ::google::protobuf::Descriptor* MessageType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageType_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MessageType_Cmd_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CGEnterGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGEnterGame_reflection_ = NULL;
const ::google::protobuf::Descriptor* GCEnterGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCEnterGame_reflection_ = NULL;
const ::google::protobuf::Descriptor* BattleResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BattleResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* BGBattleResultNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BGBattleResultNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* PGPlayerTroopPos_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PGPlayerTroopPos_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_gate_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_gate_2eproto() {
  protobuf_AddDesc_gate_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "gate.proto");
  GOOGLE_CHECK(file != NULL);
  MessageType_descriptor_ = file->message_type(0);
  static const int MessageType_offsets_[1] = {
  };
  MessageType_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageType_descriptor_,
      MessageType::default_instance_,
      MessageType_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageType),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageType, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageType, _is_default_instance_));
  MessageType_Cmd_descriptor_ = MessageType_descriptor_->enum_type(0);
  CGEnterGame_descriptor_ = file->message_type(1);
  static const int CGEnterGame_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGEnterGame, id_),
  };
  CGEnterGame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGEnterGame_descriptor_,
      CGEnterGame::default_instance_,
      CGEnterGame_offsets_,
      -1,
      -1,
      -1,
      sizeof(CGEnterGame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGEnterGame, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGEnterGame, _is_default_instance_));
  GCEnterGame_descriptor_ = file->message_type(2);
  static const int GCEnterGame_offsets_[1] = {
  };
  GCEnterGame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GCEnterGame_descriptor_,
      GCEnterGame::default_instance_,
      GCEnterGame_offsets_,
      -1,
      -1,
      -1,
      sizeof(GCEnterGame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCEnterGame, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCEnterGame, _is_default_instance_));
  BattleResult_descriptor_ = file->message_type(3);
  static const int BattleResult_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResult, attack_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResult, be_attacked_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResult, attack_),
  };
  BattleResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BattleResult_descriptor_,
      BattleResult::default_instance_,
      BattleResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(BattleResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResult, _is_default_instance_));
  BGBattleResultNotify_descriptor_ = file->message_type(4);
  static const int BGBattleResultNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BGBattleResultNotify, result_),
  };
  BGBattleResultNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BGBattleResultNotify_descriptor_,
      BGBattleResultNotify::default_instance_,
      BGBattleResultNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(BGBattleResultNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BGBattleResultNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BGBattleResultNotify, _is_default_instance_));
  PGPlayerTroopPos_descriptor_ = file->message_type(5);
  static const int PGPlayerTroopPos_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGPlayerTroopPos, troop_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGPlayerTroopPos, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGPlayerTroopPos, pos_y_),
  };
  PGPlayerTroopPos_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PGPlayerTroopPos_descriptor_,
      PGPlayerTroopPos::default_instance_,
      PGPlayerTroopPos_offsets_,
      -1,
      -1,
      -1,
      sizeof(PGPlayerTroopPos),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGPlayerTroopPos, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PGPlayerTroopPos, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_gate_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageType_descriptor_, &MessageType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGEnterGame_descriptor_, &CGEnterGame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GCEnterGame_descriptor_, &GCEnterGame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BattleResult_descriptor_, &BattleResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BGBattleResultNotify_descriptor_, &BGBattleResultNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PGPlayerTroopPos_descriptor_, &PGPlayerTroopPos::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_gate_2eproto() {
  delete MessageType::default_instance_;
  delete MessageType_reflection_;
  delete CGEnterGame::default_instance_;
  delete CGEnterGame_reflection_;
  delete GCEnterGame::default_instance_;
  delete GCEnterGame_reflection_;
  delete BattleResult::default_instance_;
  delete BattleResult_reflection_;
  delete BGBattleResultNotify::default_instance_;
  delete BGBattleResultNotify_reflection_;
  delete PGPlayerTroopPos::default_instance_;
  delete PGPlayerTroopPos_reflection_;
}

void protobuf_AddDesc_gate_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_gate_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ngate.proto\022\tgateproto\"\206\001\n\013MessageType\""
    "w\n\003Cmd\022\014\n\010StartCmd\020\000\022\017\n\nCGStartCmd\020\300>\022\020\n"
    "\013CGEnterGame\020\301>\022\031\n\024BGBattleResultNotify\020"
    "\302>\022\025\n\020PGPlayerTroopPos\020\303>\022\r\n\010CGEndCmd\020\247F"
    "\"\031\n\013CGEnterGame\022\n\n\002id\030\001 \001(\r\"\r\n\013GCEnterGa"
    "me\"I\n\014BattleResult\022\021\n\tattack_id\030\001 \001(\004\022\026\n"
    "\016be_attacked_id\030\002 \001(\004\022\016\n\006attack\030\003 \001(\002\"\?\n"
    "\024BGBattleResultNotify\022\'\n\006result\030\001 \003(\0132\027."
    "gateproto.BattleResult\"B\n\020PGPlayerTroopP"
    "os\022\020\n\010troop_id\030\001 \001(\004\022\r\n\005pos_x\030\002 \001(\002\022\r\n\005p"
    "os_y\030\003 \001(\002b\006proto3", 418);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gate.proto", &protobuf_RegisterTypes);
  MessageType::default_instance_ = new MessageType();
  CGEnterGame::default_instance_ = new CGEnterGame();
  GCEnterGame::default_instance_ = new GCEnterGame();
  BattleResult::default_instance_ = new BattleResult();
  BGBattleResultNotify::default_instance_ = new BGBattleResultNotify();
  PGPlayerTroopPos::default_instance_ = new PGPlayerTroopPos();
  MessageType::default_instance_->InitAsDefaultInstance();
  CGEnterGame::default_instance_->InitAsDefaultInstance();
  GCEnterGame::default_instance_->InitAsDefaultInstance();
  BattleResult::default_instance_->InitAsDefaultInstance();
  BGBattleResultNotify::default_instance_->InitAsDefaultInstance();
  PGPlayerTroopPos::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_gate_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_gate_2eproto {
  StaticDescriptorInitializer_gate_2eproto() {
    protobuf_AddDesc_gate_2eproto();
  }
} static_descriptor_initializer_gate_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* MessageType_Cmd_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_Cmd_descriptor_;
}
bool MessageType_Cmd_IsValid(int value) {
  switch(value) {
    case 0:
    case 8000:
    case 8001:
    case 8002:
    case 8003:
    case 8999:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MessageType_Cmd MessageType::StartCmd;
const MessageType_Cmd MessageType::CGStartCmd;
const MessageType_Cmd MessageType::CGEnterGame;
const MessageType_Cmd MessageType::BGBattleResultNotify;
const MessageType_Cmd MessageType::PGPlayerTroopPos;
const MessageType_Cmd MessageType::CGEndCmd;
const MessageType_Cmd MessageType::Cmd_MIN;
const MessageType_Cmd MessageType::Cmd_MAX;
const int MessageType::Cmd_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageType::MessageType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gateproto.MessageType)
}

void MessageType::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageType::MessageType(const MessageType& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gateproto.MessageType)
}

void MessageType::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MessageType::~MessageType() {
  // @@protoc_insertion_point(destructor:gateproto.MessageType)
  SharedDtor();
}

void MessageType::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_descriptor_;
}

const MessageType& MessageType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gate_2eproto();
  return *default_instance_;
}

MessageType* MessageType::default_instance_ = NULL;

MessageType* MessageType::New(::google::protobuf::Arena* arena) const {
  MessageType* n = new MessageType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageType::Clear() {
// @@protoc_insertion_point(message_clear_start:gateproto.MessageType)
}

bool MessageType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gateproto.MessageType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:gateproto.MessageType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gateproto.MessageType)
  return false;
#undef DO_
}

void MessageType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gateproto.MessageType)
  // @@protoc_insertion_point(serialize_end:gateproto.MessageType)
}

::google::protobuf::uint8* MessageType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateproto.MessageType)
  // @@protoc_insertion_point(serialize_to_array_end:gateproto.MessageType)
  return target;
}

int MessageType::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gateproto.MessageType)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gateproto.MessageType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageType* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gateproto.MessageType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gateproto.MessageType)
    MergeFrom(*source);
  }
}

void MessageType::MergeFrom(const MessageType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gateproto.MessageType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void MessageType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gateproto.MessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageType::CopyFrom(const MessageType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateproto.MessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageType::IsInitialized() const {

  return true;
}

void MessageType::Swap(MessageType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageType::InternalSwap(MessageType* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageType_descriptor_;
  metadata.reflection = MessageType_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageType

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGEnterGame::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGEnterGame::CGEnterGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gateproto.CGEnterGame)
}

void CGEnterGame::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CGEnterGame::CGEnterGame(const CGEnterGame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gateproto.CGEnterGame)
}

void CGEnterGame::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0u;
}

CGEnterGame::~CGEnterGame() {
  // @@protoc_insertion_point(destructor:gateproto.CGEnterGame)
  SharedDtor();
}

void CGEnterGame::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGEnterGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGEnterGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGEnterGame_descriptor_;
}

const CGEnterGame& CGEnterGame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gate_2eproto();
  return *default_instance_;
}

CGEnterGame* CGEnterGame::default_instance_ = NULL;

CGEnterGame* CGEnterGame::New(::google::protobuf::Arena* arena) const {
  CGEnterGame* n = new CGEnterGame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGEnterGame::Clear() {
// @@protoc_insertion_point(message_clear_start:gateproto.CGEnterGame)
  id_ = 0u;
}

bool CGEnterGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gateproto.CGEnterGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gateproto.CGEnterGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gateproto.CGEnterGame)
  return false;
#undef DO_
}

void CGEnterGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gateproto.CGEnterGame)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:gateproto.CGEnterGame)
}

::google::protobuf::uint8* CGEnterGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateproto.CGEnterGame)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gateproto.CGEnterGame)
  return target;
}

int CGEnterGame::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gateproto.CGEnterGame)
  int total_size = 0;

  // optional uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGEnterGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gateproto.CGEnterGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CGEnterGame* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGEnterGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gateproto.CGEnterGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gateproto.CGEnterGame)
    MergeFrom(*source);
  }
}

void CGEnterGame::MergeFrom(const CGEnterGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gateproto.CGEnterGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void CGEnterGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gateproto.CGEnterGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGEnterGame::CopyFrom(const CGEnterGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateproto.CGEnterGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGEnterGame::IsInitialized() const {

  return true;
}

void CGEnterGame::Swap(CGEnterGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGEnterGame::InternalSwap(CGEnterGame* other) {
  std::swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGEnterGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGEnterGame_descriptor_;
  metadata.reflection = CGEnterGame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGEnterGame

// optional uint32 id = 1;
void CGEnterGame::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 CGEnterGame::id() const {
  // @@protoc_insertion_point(field_get:gateproto.CGEnterGame.id)
  return id_;
}
 void CGEnterGame::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gateproto.CGEnterGame.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GCEnterGame::GCEnterGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gateproto.GCEnterGame)
}

void GCEnterGame::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GCEnterGame::GCEnterGame(const GCEnterGame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gateproto.GCEnterGame)
}

void GCEnterGame::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

GCEnterGame::~GCEnterGame() {
  // @@protoc_insertion_point(destructor:gateproto.GCEnterGame)
  SharedDtor();
}

void GCEnterGame::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GCEnterGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCEnterGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCEnterGame_descriptor_;
}

const GCEnterGame& GCEnterGame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gate_2eproto();
  return *default_instance_;
}

GCEnterGame* GCEnterGame::default_instance_ = NULL;

GCEnterGame* GCEnterGame::New(::google::protobuf::Arena* arena) const {
  GCEnterGame* n = new GCEnterGame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GCEnterGame::Clear() {
// @@protoc_insertion_point(message_clear_start:gateproto.GCEnterGame)
}

bool GCEnterGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gateproto.GCEnterGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:gateproto.GCEnterGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gateproto.GCEnterGame)
  return false;
#undef DO_
}

void GCEnterGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gateproto.GCEnterGame)
  // @@protoc_insertion_point(serialize_end:gateproto.GCEnterGame)
}

::google::protobuf::uint8* GCEnterGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateproto.GCEnterGame)
  // @@protoc_insertion_point(serialize_to_array_end:gateproto.GCEnterGame)
  return target;
}

int GCEnterGame::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gateproto.GCEnterGame)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCEnterGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gateproto.GCEnterGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GCEnterGame* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GCEnterGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gateproto.GCEnterGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gateproto.GCEnterGame)
    MergeFrom(*source);
  }
}

void GCEnterGame::MergeFrom(const GCEnterGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gateproto.GCEnterGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void GCEnterGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gateproto.GCEnterGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCEnterGame::CopyFrom(const GCEnterGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateproto.GCEnterGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCEnterGame::IsInitialized() const {

  return true;
}

void GCEnterGame::Swap(GCEnterGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GCEnterGame::InternalSwap(GCEnterGame* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GCEnterGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCEnterGame_descriptor_;
  metadata.reflection = GCEnterGame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GCEnterGame

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BattleResult::kAttackIdFieldNumber;
const int BattleResult::kBeAttackedIdFieldNumber;
const int BattleResult::kAttackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BattleResult::BattleResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gateproto.BattleResult)
}

void BattleResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BattleResult::BattleResult(const BattleResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gateproto.BattleResult)
}

void BattleResult::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  attack_id_ = GOOGLE_ULONGLONG(0);
  be_attacked_id_ = GOOGLE_ULONGLONG(0);
  attack_ = 0;
}

BattleResult::~BattleResult() {
  // @@protoc_insertion_point(destructor:gateproto.BattleResult)
  SharedDtor();
}

void BattleResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BattleResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleResult_descriptor_;
}

const BattleResult& BattleResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gate_2eproto();
  return *default_instance_;
}

BattleResult* BattleResult::default_instance_ = NULL;

BattleResult* BattleResult::New(::google::protobuf::Arena* arena) const {
  BattleResult* n = new BattleResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BattleResult::Clear() {
// @@protoc_insertion_point(message_clear_start:gateproto.BattleResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BattleResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BattleResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(attack_id_, attack_);

#undef ZR_HELPER_
#undef ZR_

}

bool BattleResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gateproto.BattleResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 attack_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &attack_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_be_attacked_id;
        break;
      }

      // optional uint64 be_attacked_id = 2;
      case 2: {
        if (tag == 16) {
         parse_be_attacked_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &be_attacked_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_attack;
        break;
      }

      // optional float attack = 3;
      case 3: {
        if (tag == 29) {
         parse_attack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &attack_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gateproto.BattleResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gateproto.BattleResult)
  return false;
#undef DO_
}

void BattleResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gateproto.BattleResult)
  // optional uint64 attack_id = 1;
  if (this->attack_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->attack_id(), output);
  }

  // optional uint64 be_attacked_id = 2;
  if (this->be_attacked_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->be_attacked_id(), output);
  }

  // optional float attack = 3;
  if (this->attack() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->attack(), output);
  }

  // @@protoc_insertion_point(serialize_end:gateproto.BattleResult)
}

::google::protobuf::uint8* BattleResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateproto.BattleResult)
  // optional uint64 attack_id = 1;
  if (this->attack_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->attack_id(), target);
  }

  // optional uint64 be_attacked_id = 2;
  if (this->be_attacked_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->be_attacked_id(), target);
  }

  // optional float attack = 3;
  if (this->attack() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->attack(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gateproto.BattleResult)
  return target;
}

int BattleResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gateproto.BattleResult)
  int total_size = 0;

  // optional uint64 attack_id = 1;
  if (this->attack_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->attack_id());
  }

  // optional uint64 be_attacked_id = 2;
  if (this->be_attacked_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->be_attacked_id());
  }

  // optional float attack = 3;
  if (this->attack() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gateproto.BattleResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BattleResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BattleResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gateproto.BattleResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gateproto.BattleResult)
    MergeFrom(*source);
  }
}

void BattleResult::MergeFrom(const BattleResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gateproto.BattleResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.attack_id() != 0) {
    set_attack_id(from.attack_id());
  }
  if (from.be_attacked_id() != 0) {
    set_be_attacked_id(from.be_attacked_id());
  }
  if (from.attack() != 0) {
    set_attack(from.attack());
  }
}

void BattleResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gateproto.BattleResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleResult::CopyFrom(const BattleResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateproto.BattleResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleResult::IsInitialized() const {

  return true;
}

void BattleResult::Swap(BattleResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BattleResult::InternalSwap(BattleResult* other) {
  std::swap(attack_id_, other->attack_id_);
  std::swap(be_attacked_id_, other->be_attacked_id_);
  std::swap(attack_, other->attack_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BattleResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BattleResult_descriptor_;
  metadata.reflection = BattleResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BattleResult

// optional uint64 attack_id = 1;
void BattleResult::clear_attack_id() {
  attack_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 BattleResult::attack_id() const {
  // @@protoc_insertion_point(field_get:gateproto.BattleResult.attack_id)
  return attack_id_;
}
 void BattleResult::set_attack_id(::google::protobuf::uint64 value) {
  
  attack_id_ = value;
  // @@protoc_insertion_point(field_set:gateproto.BattleResult.attack_id)
}

// optional uint64 be_attacked_id = 2;
void BattleResult::clear_be_attacked_id() {
  be_attacked_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 BattleResult::be_attacked_id() const {
  // @@protoc_insertion_point(field_get:gateproto.BattleResult.be_attacked_id)
  return be_attacked_id_;
}
 void BattleResult::set_be_attacked_id(::google::protobuf::uint64 value) {
  
  be_attacked_id_ = value;
  // @@protoc_insertion_point(field_set:gateproto.BattleResult.be_attacked_id)
}

// optional float attack = 3;
void BattleResult::clear_attack() {
  attack_ = 0;
}
 float BattleResult::attack() const {
  // @@protoc_insertion_point(field_get:gateproto.BattleResult.attack)
  return attack_;
}
 void BattleResult::set_attack(float value) {
  
  attack_ = value;
  // @@protoc_insertion_point(field_set:gateproto.BattleResult.attack)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BGBattleResultNotify::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BGBattleResultNotify::BGBattleResultNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gateproto.BGBattleResultNotify)
}

void BGBattleResultNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BGBattleResultNotify::BGBattleResultNotify(const BGBattleResultNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gateproto.BGBattleResultNotify)
}

void BGBattleResultNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

BGBattleResultNotify::~BGBattleResultNotify() {
  // @@protoc_insertion_point(destructor:gateproto.BGBattleResultNotify)
  SharedDtor();
}

void BGBattleResultNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BGBattleResultNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BGBattleResultNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BGBattleResultNotify_descriptor_;
}

const BGBattleResultNotify& BGBattleResultNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gate_2eproto();
  return *default_instance_;
}

BGBattleResultNotify* BGBattleResultNotify::default_instance_ = NULL;

BGBattleResultNotify* BGBattleResultNotify::New(::google::protobuf::Arena* arena) const {
  BGBattleResultNotify* n = new BGBattleResultNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BGBattleResultNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:gateproto.BGBattleResultNotify)
  result_.Clear();
}

bool BGBattleResultNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gateproto.BGBattleResultNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gateproto.BattleResult result = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_result()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_result;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gateproto.BGBattleResultNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gateproto.BGBattleResultNotify)
  return false;
#undef DO_
}

void BGBattleResultNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gateproto.BGBattleResultNotify)
  // repeated .gateproto.BattleResult result = 1;
  for (unsigned int i = 0, n = this->result_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gateproto.BGBattleResultNotify)
}

::google::protobuf::uint8* BGBattleResultNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateproto.BGBattleResultNotify)
  // repeated .gateproto.BattleResult result = 1;
  for (unsigned int i = 0, n = this->result_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->result(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gateproto.BGBattleResultNotify)
  return target;
}

int BGBattleResultNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gateproto.BGBattleResultNotify)
  int total_size = 0;

  // repeated .gateproto.BattleResult result = 1;
  total_size += 1 * this->result_size();
  for (int i = 0; i < this->result_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->result(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BGBattleResultNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gateproto.BGBattleResultNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BGBattleResultNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BGBattleResultNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gateproto.BGBattleResultNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gateproto.BGBattleResultNotify)
    MergeFrom(*source);
  }
}

void BGBattleResultNotify::MergeFrom(const BGBattleResultNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gateproto.BGBattleResultNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  result_.MergeFrom(from.result_);
}

void BGBattleResultNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gateproto.BGBattleResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BGBattleResultNotify::CopyFrom(const BGBattleResultNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateproto.BGBattleResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BGBattleResultNotify::IsInitialized() const {

  return true;
}

void BGBattleResultNotify::Swap(BGBattleResultNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BGBattleResultNotify::InternalSwap(BGBattleResultNotify* other) {
  result_.UnsafeArenaSwap(&other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BGBattleResultNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BGBattleResultNotify_descriptor_;
  metadata.reflection = BGBattleResultNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BGBattleResultNotify

// repeated .gateproto.BattleResult result = 1;
int BGBattleResultNotify::result_size() const {
  return result_.size();
}
void BGBattleResultNotify::clear_result() {
  result_.Clear();
}
const ::gateproto::BattleResult& BGBattleResultNotify::result(int index) const {
  // @@protoc_insertion_point(field_get:gateproto.BGBattleResultNotify.result)
  return result_.Get(index);
}
::gateproto::BattleResult* BGBattleResultNotify::mutable_result(int index) {
  // @@protoc_insertion_point(field_mutable:gateproto.BGBattleResultNotify.result)
  return result_.Mutable(index);
}
::gateproto::BattleResult* BGBattleResultNotify::add_result() {
  // @@protoc_insertion_point(field_add:gateproto.BGBattleResultNotify.result)
  return result_.Add();
}
::google::protobuf::RepeatedPtrField< ::gateproto::BattleResult >*
BGBattleResultNotify::mutable_result() {
  // @@protoc_insertion_point(field_mutable_list:gateproto.BGBattleResultNotify.result)
  return &result_;
}
const ::google::protobuf::RepeatedPtrField< ::gateproto::BattleResult >&
BGBattleResultNotify::result() const {
  // @@protoc_insertion_point(field_list:gateproto.BGBattleResultNotify.result)
  return result_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PGPlayerTroopPos::kTroopIdFieldNumber;
const int PGPlayerTroopPos::kPosXFieldNumber;
const int PGPlayerTroopPos::kPosYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PGPlayerTroopPos::PGPlayerTroopPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gateproto.PGPlayerTroopPos)
}

void PGPlayerTroopPos::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PGPlayerTroopPos::PGPlayerTroopPos(const PGPlayerTroopPos& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gateproto.PGPlayerTroopPos)
}

void PGPlayerTroopPos::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  troop_id_ = GOOGLE_ULONGLONG(0);
  pos_x_ = 0;
  pos_y_ = 0;
}

PGPlayerTroopPos::~PGPlayerTroopPos() {
  // @@protoc_insertion_point(destructor:gateproto.PGPlayerTroopPos)
  SharedDtor();
}

void PGPlayerTroopPos::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PGPlayerTroopPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PGPlayerTroopPos::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PGPlayerTroopPos_descriptor_;
}

const PGPlayerTroopPos& PGPlayerTroopPos::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gate_2eproto();
  return *default_instance_;
}

PGPlayerTroopPos* PGPlayerTroopPos::default_instance_ = NULL;

PGPlayerTroopPos* PGPlayerTroopPos::New(::google::protobuf::Arena* arena) const {
  PGPlayerTroopPos* n = new PGPlayerTroopPos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PGPlayerTroopPos::Clear() {
// @@protoc_insertion_point(message_clear_start:gateproto.PGPlayerTroopPos)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PGPlayerTroopPos, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PGPlayerTroopPos*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(troop_id_, pos_y_);

#undef ZR_HELPER_
#undef ZR_

}

bool PGPlayerTroopPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gateproto.PGPlayerTroopPos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 troop_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &troop_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_pos_x;
        break;
      }

      // optional float pos_x = 2;
      case 2: {
        if (tag == 21) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pos_x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_pos_y;
        break;
      }

      // optional float pos_y = 3;
      case 3: {
        if (tag == 29) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pos_y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gateproto.PGPlayerTroopPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gateproto.PGPlayerTroopPos)
  return false;
#undef DO_
}

void PGPlayerTroopPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gateproto.PGPlayerTroopPos)
  // optional uint64 troop_id = 1;
  if (this->troop_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->troop_id(), output);
  }

  // optional float pos_x = 2;
  if (this->pos_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->pos_x(), output);
  }

  // optional float pos_y = 3;
  if (this->pos_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->pos_y(), output);
  }

  // @@protoc_insertion_point(serialize_end:gateproto.PGPlayerTroopPos)
}

::google::protobuf::uint8* PGPlayerTroopPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateproto.PGPlayerTroopPos)
  // optional uint64 troop_id = 1;
  if (this->troop_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->troop_id(), target);
  }

  // optional float pos_x = 2;
  if (this->pos_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->pos_x(), target);
  }

  // optional float pos_y = 3;
  if (this->pos_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->pos_y(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gateproto.PGPlayerTroopPos)
  return target;
}

int PGPlayerTroopPos::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gateproto.PGPlayerTroopPos)
  int total_size = 0;

  // optional uint64 troop_id = 1;
  if (this->troop_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->troop_id());
  }

  // optional float pos_x = 2;
  if (this->pos_x() != 0) {
    total_size += 1 + 4;
  }

  // optional float pos_y = 3;
  if (this->pos_y() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PGPlayerTroopPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gateproto.PGPlayerTroopPos)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PGPlayerTroopPos* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PGPlayerTroopPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gateproto.PGPlayerTroopPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gateproto.PGPlayerTroopPos)
    MergeFrom(*source);
  }
}

void PGPlayerTroopPos::MergeFrom(const PGPlayerTroopPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gateproto.PGPlayerTroopPos)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.troop_id() != 0) {
    set_troop_id(from.troop_id());
  }
  if (from.pos_x() != 0) {
    set_pos_x(from.pos_x());
  }
  if (from.pos_y() != 0) {
    set_pos_y(from.pos_y());
  }
}

void PGPlayerTroopPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gateproto.PGPlayerTroopPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PGPlayerTroopPos::CopyFrom(const PGPlayerTroopPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateproto.PGPlayerTroopPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PGPlayerTroopPos::IsInitialized() const {

  return true;
}

void PGPlayerTroopPos::Swap(PGPlayerTroopPos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PGPlayerTroopPos::InternalSwap(PGPlayerTroopPos* other) {
  std::swap(troop_id_, other->troop_id_);
  std::swap(pos_x_, other->pos_x_);
  std::swap(pos_y_, other->pos_y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PGPlayerTroopPos::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PGPlayerTroopPos_descriptor_;
  metadata.reflection = PGPlayerTroopPos_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PGPlayerTroopPos

// optional uint64 troop_id = 1;
void PGPlayerTroopPos::clear_troop_id() {
  troop_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PGPlayerTroopPos::troop_id() const {
  // @@protoc_insertion_point(field_get:gateproto.PGPlayerTroopPos.troop_id)
  return troop_id_;
}
 void PGPlayerTroopPos::set_troop_id(::google::protobuf::uint64 value) {
  
  troop_id_ = value;
  // @@protoc_insertion_point(field_set:gateproto.PGPlayerTroopPos.troop_id)
}

// optional float pos_x = 2;
void PGPlayerTroopPos::clear_pos_x() {
  pos_x_ = 0;
}
 float PGPlayerTroopPos::pos_x() const {
  // @@protoc_insertion_point(field_get:gateproto.PGPlayerTroopPos.pos_x)
  return pos_x_;
}
 void PGPlayerTroopPos::set_pos_x(float value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:gateproto.PGPlayerTroopPos.pos_x)
}

// optional float pos_y = 3;
void PGPlayerTroopPos::clear_pos_y() {
  pos_y_ = 0;
}
 float PGPlayerTroopPos::pos_y() const {
  // @@protoc_insertion_point(field_get:gateproto.PGPlayerTroopPos.pos_y)
  return pos_y_;
}
 void PGPlayerTroopPos::set_pos_y(float value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:gateproto.PGPlayerTroopPos.pos_y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace gateproto

// @@protoc_insertion_point(global_scope)
