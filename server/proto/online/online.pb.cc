// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: online.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "online.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace onlineproto {

namespace {

const ::google::protobuf::Descriptor* MessageType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageType_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MessageType_Cmd_descriptor_ = NULL;
const ::google::protobuf::Descriptor* COEnterGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  COEnterGame_reflection_ = NULL;
const ::google::protobuf::Descriptor* OCEnterGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OCEnterGame_reflection_ = NULL;
const ::google::protobuf::Descriptor* COTroopDispatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  COTroopDispatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* OCTroopDispatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OCTroopDispatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* COTroopAttack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  COTroopAttack_reflection_ = NULL;
const ::google::protobuf::Descriptor* OCTroopAttack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OCTroopAttack_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_online_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_online_2eproto() {
  protobuf_AddDesc_online_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "online.proto");
  GOOGLE_CHECK(file != NULL);
  MessageType_descriptor_ = file->message_type(0);
  static const int MessageType_offsets_[1] = {
  };
  MessageType_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageType_descriptor_,
      MessageType::default_instance_,
      MessageType_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageType),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageType, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageType, _is_default_instance_));
  MessageType_Cmd_descriptor_ = MessageType_descriptor_->enum_type(0);
  COEnterGame_descriptor_ = file->message_type(1);
  static const int COEnterGame_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COEnterGame, id_),
  };
  COEnterGame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      COEnterGame_descriptor_,
      COEnterGame::default_instance_,
      COEnterGame_offsets_,
      -1,
      -1,
      -1,
      sizeof(COEnterGame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COEnterGame, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COEnterGame, _is_default_instance_));
  OCEnterGame_descriptor_ = file->message_type(2);
  static const int OCEnterGame_offsets_[1] = {
  };
  OCEnterGame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OCEnterGame_descriptor_,
      OCEnterGame::default_instance_,
      OCEnterGame_offsets_,
      -1,
      -1,
      -1,
      sizeof(OCEnterGame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OCEnterGame, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OCEnterGame, _is_default_instance_));
  COTroopDispatch_descriptor_ = file->message_type(3);
  static const int COTroopDispatch_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COTroopDispatch, troop_),
  };
  COTroopDispatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      COTroopDispatch_descriptor_,
      COTroopDispatch::default_instance_,
      COTroopDispatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(COTroopDispatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COTroopDispatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COTroopDispatch, _is_default_instance_));
  OCTroopDispatch_descriptor_ = file->message_type(4);
  static const int OCTroopDispatch_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OCTroopDispatch, troop_),
  };
  OCTroopDispatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OCTroopDispatch_descriptor_,
      OCTroopDispatch::default_instance_,
      OCTroopDispatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(OCTroopDispatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OCTroopDispatch, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OCTroopDispatch, _is_default_instance_));
  COTroopAttack_descriptor_ = file->message_type(5);
  static const int COTroopAttack_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COTroopAttack, info_),
  };
  COTroopAttack_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      COTroopAttack_descriptor_,
      COTroopAttack::default_instance_,
      COTroopAttack_offsets_,
      -1,
      -1,
      -1,
      sizeof(COTroopAttack),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COTroopAttack, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(COTroopAttack, _is_default_instance_));
  OCTroopAttack_descriptor_ = file->message_type(6);
  static const int OCTroopAttack_offsets_[1] = {
  };
  OCTroopAttack_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OCTroopAttack_descriptor_,
      OCTroopAttack::default_instance_,
      OCTroopAttack_offsets_,
      -1,
      -1,
      -1,
      sizeof(OCTroopAttack),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OCTroopAttack, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OCTroopAttack, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_online_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageType_descriptor_, &MessageType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      COEnterGame_descriptor_, &COEnterGame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OCEnterGame_descriptor_, &OCEnterGame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      COTroopDispatch_descriptor_, &COTroopDispatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OCTroopDispatch_descriptor_, &OCTroopDispatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      COTroopAttack_descriptor_, &COTroopAttack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OCTroopAttack_descriptor_, &OCTroopAttack::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_online_2eproto() {
  delete MessageType::default_instance_;
  delete MessageType_reflection_;
  delete COEnterGame::default_instance_;
  delete COEnterGame_reflection_;
  delete OCEnterGame::default_instance_;
  delete OCEnterGame_reflection_;
  delete COTroopDispatch::default_instance_;
  delete COTroopDispatch_reflection_;
  delete OCTroopDispatch::default_instance_;
  delete OCTroopDispatch_reflection_;
  delete COTroopAttack::default_instance_;
  delete COTroopAttack_reflection_;
  delete OCTroopAttack::default_instance_;
  delete OCTroopAttack_reflection_;
}

void protobuf_AddDesc_online_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_online_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::shareproto::protobuf_AddDesc_share_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014online.proto\022\013onlineproto\032\013share.proto"
    "\"\221\001\n\013MessageType\"\201\001\n\003Cmd\022\014\n\010StartCmd\020\000\022\017"
    "\n\nCOStartCmd\020\3306\022\020\n\013COEnterGame\020\3316\022\017\n\nOnK"
    "eepLive\020\3326\022\024\n\017COTroopDispatch\020\3336\022\022\n\rCOTr"
    "oopAttack\020\3346\022\016\n\tCOSEndCmd\020\277>\"\031\n\013COEnterG"
    "ame\022\n\n\002id\030\001 \001(\r\"\r\n\013OCEnterGame\"=\n\017COTroo"
    "pDispatch\022*\n\005troop\030\001 \003(\0132\033.shareproto.Pl"
    "ayerTroopInfo\"=\n\017OCTroopDispatch\022*\n\005troo"
    "p\030\001 \003(\0132\033.shareproto.PlayerTroopInfo\":\n\r"
    "COTroopAttack\022)\n\004info\030\001 \001(\0132\033.shareproto"
    ".TroopAttackInfo\"\017\n\rOCTroopAttackb\006proto"
    "3", 441);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "online.proto", &protobuf_RegisterTypes);
  MessageType::default_instance_ = new MessageType();
  COEnterGame::default_instance_ = new COEnterGame();
  OCEnterGame::default_instance_ = new OCEnterGame();
  COTroopDispatch::default_instance_ = new COTroopDispatch();
  OCTroopDispatch::default_instance_ = new OCTroopDispatch();
  COTroopAttack::default_instance_ = new COTroopAttack();
  OCTroopAttack::default_instance_ = new OCTroopAttack();
  MessageType::default_instance_->InitAsDefaultInstance();
  COEnterGame::default_instance_->InitAsDefaultInstance();
  OCEnterGame::default_instance_->InitAsDefaultInstance();
  COTroopDispatch::default_instance_->InitAsDefaultInstance();
  OCTroopDispatch::default_instance_->InitAsDefaultInstance();
  COTroopAttack::default_instance_->InitAsDefaultInstance();
  OCTroopAttack::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_online_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_online_2eproto {
  StaticDescriptorInitializer_online_2eproto() {
    protobuf_AddDesc_online_2eproto();
  }
} static_descriptor_initializer_online_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* MessageType_Cmd_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_Cmd_descriptor_;
}
bool MessageType_Cmd_IsValid(int value) {
  switch(value) {
    case 0:
    case 7000:
    case 7001:
    case 7002:
    case 7003:
    case 7004:
    case 7999:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MessageType_Cmd MessageType::StartCmd;
const MessageType_Cmd MessageType::COStartCmd;
const MessageType_Cmd MessageType::COEnterGame;
const MessageType_Cmd MessageType::OnKeepLive;
const MessageType_Cmd MessageType::COTroopDispatch;
const MessageType_Cmd MessageType::COTroopAttack;
const MessageType_Cmd MessageType::COSEndCmd;
const MessageType_Cmd MessageType::Cmd_MIN;
const MessageType_Cmd MessageType::Cmd_MAX;
const int MessageType::Cmd_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageType::MessageType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onlineproto.MessageType)
}

void MessageType::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageType::MessageType(const MessageType& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onlineproto.MessageType)
}

void MessageType::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MessageType::~MessageType() {
  // @@protoc_insertion_point(destructor:onlineproto.MessageType)
  SharedDtor();
}

void MessageType::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_descriptor_;
}

const MessageType& MessageType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_online_2eproto();
  return *default_instance_;
}

MessageType* MessageType::default_instance_ = NULL;

MessageType* MessageType::New(::google::protobuf::Arena* arena) const {
  MessageType* n = new MessageType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageType::Clear() {
// @@protoc_insertion_point(message_clear_start:onlineproto.MessageType)
}

bool MessageType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onlineproto.MessageType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:onlineproto.MessageType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onlineproto.MessageType)
  return false;
#undef DO_
}

void MessageType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onlineproto.MessageType)
  // @@protoc_insertion_point(serialize_end:onlineproto.MessageType)
}

::google::protobuf::uint8* MessageType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onlineproto.MessageType)
  // @@protoc_insertion_point(serialize_to_array_end:onlineproto.MessageType)
  return target;
}

int MessageType::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:onlineproto.MessageType)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onlineproto.MessageType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageType* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onlineproto.MessageType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onlineproto.MessageType)
    MergeFrom(*source);
  }
}

void MessageType::MergeFrom(const MessageType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onlineproto.MessageType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void MessageType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onlineproto.MessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageType::CopyFrom(const MessageType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onlineproto.MessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageType::IsInitialized() const {

  return true;
}

void MessageType::Swap(MessageType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageType::InternalSwap(MessageType* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageType_descriptor_;
  metadata.reflection = MessageType_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageType

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int COEnterGame::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

COEnterGame::COEnterGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onlineproto.COEnterGame)
}

void COEnterGame::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

COEnterGame::COEnterGame(const COEnterGame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onlineproto.COEnterGame)
}

void COEnterGame::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0u;
}

COEnterGame::~COEnterGame() {
  // @@protoc_insertion_point(destructor:onlineproto.COEnterGame)
  SharedDtor();
}

void COEnterGame::SharedDtor() {
  if (this != default_instance_) {
  }
}

void COEnterGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* COEnterGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return COEnterGame_descriptor_;
}

const COEnterGame& COEnterGame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_online_2eproto();
  return *default_instance_;
}

COEnterGame* COEnterGame::default_instance_ = NULL;

COEnterGame* COEnterGame::New(::google::protobuf::Arena* arena) const {
  COEnterGame* n = new COEnterGame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void COEnterGame::Clear() {
// @@protoc_insertion_point(message_clear_start:onlineproto.COEnterGame)
  id_ = 0u;
}

bool COEnterGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onlineproto.COEnterGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onlineproto.COEnterGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onlineproto.COEnterGame)
  return false;
#undef DO_
}

void COEnterGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onlineproto.COEnterGame)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:onlineproto.COEnterGame)
}

::google::protobuf::uint8* COEnterGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onlineproto.COEnterGame)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:onlineproto.COEnterGame)
  return target;
}

int COEnterGame::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:onlineproto.COEnterGame)
  int total_size = 0;

  // optional uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void COEnterGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onlineproto.COEnterGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const COEnterGame* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const COEnterGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onlineproto.COEnterGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onlineproto.COEnterGame)
    MergeFrom(*source);
  }
}

void COEnterGame::MergeFrom(const COEnterGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onlineproto.COEnterGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void COEnterGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onlineproto.COEnterGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void COEnterGame::CopyFrom(const COEnterGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onlineproto.COEnterGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COEnterGame::IsInitialized() const {

  return true;
}

void COEnterGame::Swap(COEnterGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void COEnterGame::InternalSwap(COEnterGame* other) {
  std::swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata COEnterGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = COEnterGame_descriptor_;
  metadata.reflection = COEnterGame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// COEnterGame

// optional uint32 id = 1;
void COEnterGame::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 COEnterGame::id() const {
  // @@protoc_insertion_point(field_get:onlineproto.COEnterGame.id)
  return id_;
}
 void COEnterGame::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:onlineproto.COEnterGame.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OCEnterGame::OCEnterGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onlineproto.OCEnterGame)
}

void OCEnterGame::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OCEnterGame::OCEnterGame(const OCEnterGame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onlineproto.OCEnterGame)
}

void OCEnterGame::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

OCEnterGame::~OCEnterGame() {
  // @@protoc_insertion_point(destructor:onlineproto.OCEnterGame)
  SharedDtor();
}

void OCEnterGame::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OCEnterGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OCEnterGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OCEnterGame_descriptor_;
}

const OCEnterGame& OCEnterGame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_online_2eproto();
  return *default_instance_;
}

OCEnterGame* OCEnterGame::default_instance_ = NULL;

OCEnterGame* OCEnterGame::New(::google::protobuf::Arena* arena) const {
  OCEnterGame* n = new OCEnterGame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OCEnterGame::Clear() {
// @@protoc_insertion_point(message_clear_start:onlineproto.OCEnterGame)
}

bool OCEnterGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onlineproto.OCEnterGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:onlineproto.OCEnterGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onlineproto.OCEnterGame)
  return false;
#undef DO_
}

void OCEnterGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onlineproto.OCEnterGame)
  // @@protoc_insertion_point(serialize_end:onlineproto.OCEnterGame)
}

::google::protobuf::uint8* OCEnterGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onlineproto.OCEnterGame)
  // @@protoc_insertion_point(serialize_to_array_end:onlineproto.OCEnterGame)
  return target;
}

int OCEnterGame::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:onlineproto.OCEnterGame)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OCEnterGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onlineproto.OCEnterGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OCEnterGame* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OCEnterGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onlineproto.OCEnterGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onlineproto.OCEnterGame)
    MergeFrom(*source);
  }
}

void OCEnterGame::MergeFrom(const OCEnterGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onlineproto.OCEnterGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void OCEnterGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onlineproto.OCEnterGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OCEnterGame::CopyFrom(const OCEnterGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onlineproto.OCEnterGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OCEnterGame::IsInitialized() const {

  return true;
}

void OCEnterGame::Swap(OCEnterGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OCEnterGame::InternalSwap(OCEnterGame* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OCEnterGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OCEnterGame_descriptor_;
  metadata.reflection = OCEnterGame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OCEnterGame

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int COTroopDispatch::kTroopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

COTroopDispatch::COTroopDispatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onlineproto.COTroopDispatch)
}

void COTroopDispatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

COTroopDispatch::COTroopDispatch(const COTroopDispatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onlineproto.COTroopDispatch)
}

void COTroopDispatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

COTroopDispatch::~COTroopDispatch() {
  // @@protoc_insertion_point(destructor:onlineproto.COTroopDispatch)
  SharedDtor();
}

void COTroopDispatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void COTroopDispatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* COTroopDispatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return COTroopDispatch_descriptor_;
}

const COTroopDispatch& COTroopDispatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_online_2eproto();
  return *default_instance_;
}

COTroopDispatch* COTroopDispatch::default_instance_ = NULL;

COTroopDispatch* COTroopDispatch::New(::google::protobuf::Arena* arena) const {
  COTroopDispatch* n = new COTroopDispatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void COTroopDispatch::Clear() {
// @@protoc_insertion_point(message_clear_start:onlineproto.COTroopDispatch)
  troop_.Clear();
}

bool COTroopDispatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onlineproto.COTroopDispatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shareproto.PlayerTroopInfo troop = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_troop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_troop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_troop;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onlineproto.COTroopDispatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onlineproto.COTroopDispatch)
  return false;
#undef DO_
}

void COTroopDispatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onlineproto.COTroopDispatch)
  // repeated .shareproto.PlayerTroopInfo troop = 1;
  for (unsigned int i = 0, n = this->troop_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->troop(i), output);
  }

  // @@protoc_insertion_point(serialize_end:onlineproto.COTroopDispatch)
}

::google::protobuf::uint8* COTroopDispatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onlineproto.COTroopDispatch)
  // repeated .shareproto.PlayerTroopInfo troop = 1;
  for (unsigned int i = 0, n = this->troop_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->troop(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:onlineproto.COTroopDispatch)
  return target;
}

int COTroopDispatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:onlineproto.COTroopDispatch)
  int total_size = 0;

  // repeated .shareproto.PlayerTroopInfo troop = 1;
  total_size += 1 * this->troop_size();
  for (int i = 0; i < this->troop_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->troop(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void COTroopDispatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onlineproto.COTroopDispatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const COTroopDispatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const COTroopDispatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onlineproto.COTroopDispatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onlineproto.COTroopDispatch)
    MergeFrom(*source);
  }
}

void COTroopDispatch::MergeFrom(const COTroopDispatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onlineproto.COTroopDispatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  troop_.MergeFrom(from.troop_);
}

void COTroopDispatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onlineproto.COTroopDispatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void COTroopDispatch::CopyFrom(const COTroopDispatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onlineproto.COTroopDispatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COTroopDispatch::IsInitialized() const {

  return true;
}

void COTroopDispatch::Swap(COTroopDispatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void COTroopDispatch::InternalSwap(COTroopDispatch* other) {
  troop_.UnsafeArenaSwap(&other->troop_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata COTroopDispatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = COTroopDispatch_descriptor_;
  metadata.reflection = COTroopDispatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// COTroopDispatch

// repeated .shareproto.PlayerTroopInfo troop = 1;
int COTroopDispatch::troop_size() const {
  return troop_.size();
}
void COTroopDispatch::clear_troop() {
  troop_.Clear();
}
const ::shareproto::PlayerTroopInfo& COTroopDispatch::troop(int index) const {
  // @@protoc_insertion_point(field_get:onlineproto.COTroopDispatch.troop)
  return troop_.Get(index);
}
::shareproto::PlayerTroopInfo* COTroopDispatch::mutable_troop(int index) {
  // @@protoc_insertion_point(field_mutable:onlineproto.COTroopDispatch.troop)
  return troop_.Mutable(index);
}
::shareproto::PlayerTroopInfo* COTroopDispatch::add_troop() {
  // @@protoc_insertion_point(field_add:onlineproto.COTroopDispatch.troop)
  return troop_.Add();
}
::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >*
COTroopDispatch::mutable_troop() {
  // @@protoc_insertion_point(field_mutable_list:onlineproto.COTroopDispatch.troop)
  return &troop_;
}
const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >&
COTroopDispatch::troop() const {
  // @@protoc_insertion_point(field_list:onlineproto.COTroopDispatch.troop)
  return troop_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OCTroopDispatch::kTroopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OCTroopDispatch::OCTroopDispatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onlineproto.OCTroopDispatch)
}

void OCTroopDispatch::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OCTroopDispatch::OCTroopDispatch(const OCTroopDispatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onlineproto.OCTroopDispatch)
}

void OCTroopDispatch::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

OCTroopDispatch::~OCTroopDispatch() {
  // @@protoc_insertion_point(destructor:onlineproto.OCTroopDispatch)
  SharedDtor();
}

void OCTroopDispatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OCTroopDispatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OCTroopDispatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OCTroopDispatch_descriptor_;
}

const OCTroopDispatch& OCTroopDispatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_online_2eproto();
  return *default_instance_;
}

OCTroopDispatch* OCTroopDispatch::default_instance_ = NULL;

OCTroopDispatch* OCTroopDispatch::New(::google::protobuf::Arena* arena) const {
  OCTroopDispatch* n = new OCTroopDispatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OCTroopDispatch::Clear() {
// @@protoc_insertion_point(message_clear_start:onlineproto.OCTroopDispatch)
  troop_.Clear();
}

bool OCTroopDispatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onlineproto.OCTroopDispatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shareproto.PlayerTroopInfo troop = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_troop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_troop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_troop;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onlineproto.OCTroopDispatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onlineproto.OCTroopDispatch)
  return false;
#undef DO_
}

void OCTroopDispatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onlineproto.OCTroopDispatch)
  // repeated .shareproto.PlayerTroopInfo troop = 1;
  for (unsigned int i = 0, n = this->troop_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->troop(i), output);
  }

  // @@protoc_insertion_point(serialize_end:onlineproto.OCTroopDispatch)
}

::google::protobuf::uint8* OCTroopDispatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onlineproto.OCTroopDispatch)
  // repeated .shareproto.PlayerTroopInfo troop = 1;
  for (unsigned int i = 0, n = this->troop_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->troop(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:onlineproto.OCTroopDispatch)
  return target;
}

int OCTroopDispatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:onlineproto.OCTroopDispatch)
  int total_size = 0;

  // repeated .shareproto.PlayerTroopInfo troop = 1;
  total_size += 1 * this->troop_size();
  for (int i = 0; i < this->troop_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->troop(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OCTroopDispatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onlineproto.OCTroopDispatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OCTroopDispatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OCTroopDispatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onlineproto.OCTroopDispatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onlineproto.OCTroopDispatch)
    MergeFrom(*source);
  }
}

void OCTroopDispatch::MergeFrom(const OCTroopDispatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onlineproto.OCTroopDispatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  troop_.MergeFrom(from.troop_);
}

void OCTroopDispatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onlineproto.OCTroopDispatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OCTroopDispatch::CopyFrom(const OCTroopDispatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onlineproto.OCTroopDispatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OCTroopDispatch::IsInitialized() const {

  return true;
}

void OCTroopDispatch::Swap(OCTroopDispatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OCTroopDispatch::InternalSwap(OCTroopDispatch* other) {
  troop_.UnsafeArenaSwap(&other->troop_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OCTroopDispatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OCTroopDispatch_descriptor_;
  metadata.reflection = OCTroopDispatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OCTroopDispatch

// repeated .shareproto.PlayerTroopInfo troop = 1;
int OCTroopDispatch::troop_size() const {
  return troop_.size();
}
void OCTroopDispatch::clear_troop() {
  troop_.Clear();
}
const ::shareproto::PlayerTroopInfo& OCTroopDispatch::troop(int index) const {
  // @@protoc_insertion_point(field_get:onlineproto.OCTroopDispatch.troop)
  return troop_.Get(index);
}
::shareproto::PlayerTroopInfo* OCTroopDispatch::mutable_troop(int index) {
  // @@protoc_insertion_point(field_mutable:onlineproto.OCTroopDispatch.troop)
  return troop_.Mutable(index);
}
::shareproto::PlayerTroopInfo* OCTroopDispatch::add_troop() {
  // @@protoc_insertion_point(field_add:onlineproto.OCTroopDispatch.troop)
  return troop_.Add();
}
::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >*
OCTroopDispatch::mutable_troop() {
  // @@protoc_insertion_point(field_mutable_list:onlineproto.OCTroopDispatch.troop)
  return &troop_;
}
const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >&
OCTroopDispatch::troop() const {
  // @@protoc_insertion_point(field_list:onlineproto.OCTroopDispatch.troop)
  return troop_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int COTroopAttack::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

COTroopAttack::COTroopAttack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onlineproto.COTroopAttack)
}

void COTroopAttack::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  info_ = const_cast< ::shareproto::TroopAttackInfo*>(&::shareproto::TroopAttackInfo::default_instance());
}

COTroopAttack::COTroopAttack(const COTroopAttack& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onlineproto.COTroopAttack)
}

void COTroopAttack::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  info_ = NULL;
}

COTroopAttack::~COTroopAttack() {
  // @@protoc_insertion_point(destructor:onlineproto.COTroopAttack)
  SharedDtor();
}

void COTroopAttack::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void COTroopAttack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* COTroopAttack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return COTroopAttack_descriptor_;
}

const COTroopAttack& COTroopAttack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_online_2eproto();
  return *default_instance_;
}

COTroopAttack* COTroopAttack::default_instance_ = NULL;

COTroopAttack* COTroopAttack::New(::google::protobuf::Arena* arena) const {
  COTroopAttack* n = new COTroopAttack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void COTroopAttack::Clear() {
// @@protoc_insertion_point(message_clear_start:onlineproto.COTroopAttack)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}

bool COTroopAttack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onlineproto.COTroopAttack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .shareproto.TroopAttackInfo info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onlineproto.COTroopAttack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onlineproto.COTroopAttack)
  return false;
#undef DO_
}

void COTroopAttack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onlineproto.COTroopAttack)
  // optional .shareproto.TroopAttackInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:onlineproto.COTroopAttack)
}

::google::protobuf::uint8* COTroopAttack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onlineproto.COTroopAttack)
  // optional .shareproto.TroopAttackInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:onlineproto.COTroopAttack)
  return target;
}

int COTroopAttack::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:onlineproto.COTroopAttack)
  int total_size = 0;

  // optional .shareproto.TroopAttackInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void COTroopAttack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onlineproto.COTroopAttack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const COTroopAttack* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const COTroopAttack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onlineproto.COTroopAttack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onlineproto.COTroopAttack)
    MergeFrom(*source);
  }
}

void COTroopAttack::MergeFrom(const COTroopAttack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onlineproto.COTroopAttack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_info()) {
    mutable_info()->::shareproto::TroopAttackInfo::MergeFrom(from.info());
  }
}

void COTroopAttack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onlineproto.COTroopAttack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void COTroopAttack::CopyFrom(const COTroopAttack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onlineproto.COTroopAttack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COTroopAttack::IsInitialized() const {

  return true;
}

void COTroopAttack::Swap(COTroopAttack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void COTroopAttack::InternalSwap(COTroopAttack* other) {
  std::swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata COTroopAttack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = COTroopAttack_descriptor_;
  metadata.reflection = COTroopAttack_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// COTroopAttack

// optional .shareproto.TroopAttackInfo info = 1;
bool COTroopAttack::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
void COTroopAttack::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::shareproto::TroopAttackInfo& COTroopAttack::info() const {
  // @@protoc_insertion_point(field_get:onlineproto.COTroopAttack.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::shareproto::TroopAttackInfo* COTroopAttack::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::shareproto::TroopAttackInfo;
  }
  // @@protoc_insertion_point(field_mutable:onlineproto.COTroopAttack.info)
  return info_;
}
::shareproto::TroopAttackInfo* COTroopAttack::release_info() {
  // @@protoc_insertion_point(field_release:onlineproto.COTroopAttack.info)
  
  ::shareproto::TroopAttackInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void COTroopAttack::set_allocated_info(::shareproto::TroopAttackInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:onlineproto.COTroopAttack.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OCTroopAttack::OCTroopAttack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:onlineproto.OCTroopAttack)
}

void OCTroopAttack::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OCTroopAttack::OCTroopAttack(const OCTroopAttack& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onlineproto.OCTroopAttack)
}

void OCTroopAttack::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

OCTroopAttack::~OCTroopAttack() {
  // @@protoc_insertion_point(destructor:onlineproto.OCTroopAttack)
  SharedDtor();
}

void OCTroopAttack::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OCTroopAttack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OCTroopAttack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OCTroopAttack_descriptor_;
}

const OCTroopAttack& OCTroopAttack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_online_2eproto();
  return *default_instance_;
}

OCTroopAttack* OCTroopAttack::default_instance_ = NULL;

OCTroopAttack* OCTroopAttack::New(::google::protobuf::Arena* arena) const {
  OCTroopAttack* n = new OCTroopAttack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OCTroopAttack::Clear() {
// @@protoc_insertion_point(message_clear_start:onlineproto.OCTroopAttack)
}

bool OCTroopAttack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onlineproto.OCTroopAttack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:onlineproto.OCTroopAttack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onlineproto.OCTroopAttack)
  return false;
#undef DO_
}

void OCTroopAttack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onlineproto.OCTroopAttack)
  // @@protoc_insertion_point(serialize_end:onlineproto.OCTroopAttack)
}

::google::protobuf::uint8* OCTroopAttack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:onlineproto.OCTroopAttack)
  // @@protoc_insertion_point(serialize_to_array_end:onlineproto.OCTroopAttack)
  return target;
}

int OCTroopAttack::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:onlineproto.OCTroopAttack)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OCTroopAttack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onlineproto.OCTroopAttack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OCTroopAttack* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OCTroopAttack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onlineproto.OCTroopAttack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onlineproto.OCTroopAttack)
    MergeFrom(*source);
  }
}

void OCTroopAttack::MergeFrom(const OCTroopAttack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onlineproto.OCTroopAttack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void OCTroopAttack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onlineproto.OCTroopAttack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OCTroopAttack::CopyFrom(const OCTroopAttack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onlineproto.OCTroopAttack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OCTroopAttack::IsInitialized() const {

  return true;
}

void OCTroopAttack::Swap(OCTroopAttack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OCTroopAttack::InternalSwap(OCTroopAttack* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OCTroopAttack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OCTroopAttack_descriptor_;
  metadata.reflection = OCTroopAttack_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OCTroopAttack

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace onlineproto

// @@protoc_insertion_point(global_scope)
