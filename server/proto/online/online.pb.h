// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: online.proto

#ifndef PROTOBUF_online_2eproto__INCLUDED
#define PROTOBUF_online_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "share.pb.h"
// @@protoc_insertion_point(includes)

namespace onlineproto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_online_2eproto();
void protobuf_AssignDesc_online_2eproto();
void protobuf_ShutdownFile_online_2eproto();

class COEnterGame;
class COTroopAttack;
class COTroopDispatch;
class MessageType;
class OCEnterGame;
class OCTroopAttack;
class OCTroopDispatch;

enum MessageType_Cmd {
  MessageType_Cmd_StartCmd = 0,
  MessageType_Cmd_COStartCmd = 7000,
  MessageType_Cmd_COEnterGame = 7001,
  MessageType_Cmd_OnKeepLive = 7002,
  MessageType_Cmd_COTroopDispatch = 7003,
  MessageType_Cmd_COTroopAttack = 7004,
  MessageType_Cmd_COSEndCmd = 7999,
  MessageType_Cmd_MessageType_Cmd_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageType_Cmd_MessageType_Cmd_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageType_Cmd_IsValid(int value);
const MessageType_Cmd MessageType_Cmd_Cmd_MIN = MessageType_Cmd_StartCmd;
const MessageType_Cmd MessageType_Cmd_Cmd_MAX = MessageType_Cmd_COSEndCmd;
const int MessageType_Cmd_Cmd_ARRAYSIZE = MessageType_Cmd_Cmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_Cmd_descriptor();
inline const ::std::string& MessageType_Cmd_Name(MessageType_Cmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_Cmd_descriptor(), value);
}
inline bool MessageType_Cmd_Parse(
    const ::std::string& name, MessageType_Cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType_Cmd>(
    MessageType_Cmd_descriptor(), name, value);
}
// ===================================================================

class MessageType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:onlineproto.MessageType) */ {
 public:
  MessageType();
  virtual ~MessageType();

  MessageType(const MessageType& from);

  inline MessageType& operator=(const MessageType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageType& default_instance();

  void Swap(MessageType* other);

  // implements Message ----------------------------------------------

  inline MessageType* New() const { return New(NULL); }

  MessageType* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageType& from);
  void MergeFrom(const MessageType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MessageType_Cmd Cmd;
  static const Cmd StartCmd =
    MessageType_Cmd_StartCmd;
  static const Cmd COStartCmd =
    MessageType_Cmd_COStartCmd;
  static const Cmd COEnterGame =
    MessageType_Cmd_COEnterGame;
  static const Cmd OnKeepLive =
    MessageType_Cmd_OnKeepLive;
  static const Cmd COTroopDispatch =
    MessageType_Cmd_COTroopDispatch;
  static const Cmd COTroopAttack =
    MessageType_Cmd_COTroopAttack;
  static const Cmd COSEndCmd =
    MessageType_Cmd_COSEndCmd;
  static inline bool Cmd_IsValid(int value) {
    return MessageType_Cmd_IsValid(value);
  }
  static const Cmd Cmd_MIN =
    MessageType_Cmd_Cmd_MIN;
  static const Cmd Cmd_MAX =
    MessageType_Cmd_Cmd_MAX;
  static const int Cmd_ARRAYSIZE =
    MessageType_Cmd_Cmd_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Cmd_descriptor() {
    return MessageType_Cmd_descriptor();
  }
  static inline const ::std::string& Cmd_Name(Cmd value) {
    return MessageType_Cmd_Name(value);
  }
  static inline bool Cmd_Parse(const ::std::string& name,
      Cmd* value) {
    return MessageType_Cmd_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:onlineproto.MessageType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_online_2eproto();
  friend void protobuf_AssignDesc_online_2eproto();
  friend void protobuf_ShutdownFile_online_2eproto();

  void InitAsDefaultInstance();
  static MessageType* default_instance_;
};
// -------------------------------------------------------------------

class COEnterGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:onlineproto.COEnterGame) */ {
 public:
  COEnterGame();
  virtual ~COEnterGame();

  COEnterGame(const COEnterGame& from);

  inline COEnterGame& operator=(const COEnterGame& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const COEnterGame& default_instance();

  void Swap(COEnterGame* other);

  // implements Message ----------------------------------------------

  inline COEnterGame* New() const { return New(NULL); }

  COEnterGame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const COEnterGame& from);
  void MergeFrom(const COEnterGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(COEnterGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:onlineproto.COEnterGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_online_2eproto();
  friend void protobuf_AssignDesc_online_2eproto();
  friend void protobuf_ShutdownFile_online_2eproto();

  void InitAsDefaultInstance();
  static COEnterGame* default_instance_;
};
// -------------------------------------------------------------------

class OCEnterGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:onlineproto.OCEnterGame) */ {
 public:
  OCEnterGame();
  virtual ~OCEnterGame();

  OCEnterGame(const OCEnterGame& from);

  inline OCEnterGame& operator=(const OCEnterGame& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OCEnterGame& default_instance();

  void Swap(OCEnterGame* other);

  // implements Message ----------------------------------------------

  inline OCEnterGame* New() const { return New(NULL); }

  OCEnterGame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OCEnterGame& from);
  void MergeFrom(const OCEnterGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OCEnterGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:onlineproto.OCEnterGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_online_2eproto();
  friend void protobuf_AssignDesc_online_2eproto();
  friend void protobuf_ShutdownFile_online_2eproto();

  void InitAsDefaultInstance();
  static OCEnterGame* default_instance_;
};
// -------------------------------------------------------------------

class COTroopDispatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:onlineproto.COTroopDispatch) */ {
 public:
  COTroopDispatch();
  virtual ~COTroopDispatch();

  COTroopDispatch(const COTroopDispatch& from);

  inline COTroopDispatch& operator=(const COTroopDispatch& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const COTroopDispatch& default_instance();

  void Swap(COTroopDispatch* other);

  // implements Message ----------------------------------------------

  inline COTroopDispatch* New() const { return New(NULL); }

  COTroopDispatch* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const COTroopDispatch& from);
  void MergeFrom(const COTroopDispatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(COTroopDispatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shareproto.PlayerTroopInfo troop = 1;
  int troop_size() const;
  void clear_troop();
  static const int kTroopFieldNumber = 1;
  const ::shareproto::PlayerTroopInfo& troop(int index) const;
  ::shareproto::PlayerTroopInfo* mutable_troop(int index);
  ::shareproto::PlayerTroopInfo* add_troop();
  ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >*
      mutable_troop();
  const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >&
      troop() const;

  // @@protoc_insertion_point(class_scope:onlineproto.COTroopDispatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo > troop_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_online_2eproto();
  friend void protobuf_AssignDesc_online_2eproto();
  friend void protobuf_ShutdownFile_online_2eproto();

  void InitAsDefaultInstance();
  static COTroopDispatch* default_instance_;
};
// -------------------------------------------------------------------

class OCTroopDispatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:onlineproto.OCTroopDispatch) */ {
 public:
  OCTroopDispatch();
  virtual ~OCTroopDispatch();

  OCTroopDispatch(const OCTroopDispatch& from);

  inline OCTroopDispatch& operator=(const OCTroopDispatch& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OCTroopDispatch& default_instance();

  void Swap(OCTroopDispatch* other);

  // implements Message ----------------------------------------------

  inline OCTroopDispatch* New() const { return New(NULL); }

  OCTroopDispatch* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OCTroopDispatch& from);
  void MergeFrom(const OCTroopDispatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OCTroopDispatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shareproto.PlayerTroopInfo troop = 1;
  int troop_size() const;
  void clear_troop();
  static const int kTroopFieldNumber = 1;
  const ::shareproto::PlayerTroopInfo& troop(int index) const;
  ::shareproto::PlayerTroopInfo* mutable_troop(int index);
  ::shareproto::PlayerTroopInfo* add_troop();
  ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >*
      mutable_troop();
  const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >&
      troop() const;

  // @@protoc_insertion_point(class_scope:onlineproto.OCTroopDispatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo > troop_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_online_2eproto();
  friend void protobuf_AssignDesc_online_2eproto();
  friend void protobuf_ShutdownFile_online_2eproto();

  void InitAsDefaultInstance();
  static OCTroopDispatch* default_instance_;
};
// -------------------------------------------------------------------

class COTroopAttack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:onlineproto.COTroopAttack) */ {
 public:
  COTroopAttack();
  virtual ~COTroopAttack();

  COTroopAttack(const COTroopAttack& from);

  inline COTroopAttack& operator=(const COTroopAttack& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const COTroopAttack& default_instance();

  void Swap(COTroopAttack* other);

  // implements Message ----------------------------------------------

  inline COTroopAttack* New() const { return New(NULL); }

  COTroopAttack* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const COTroopAttack& from);
  void MergeFrom(const COTroopAttack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(COTroopAttack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .shareproto.TroopAttackInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::shareproto::TroopAttackInfo& info() const;
  ::shareproto::TroopAttackInfo* mutable_info();
  ::shareproto::TroopAttackInfo* release_info();
  void set_allocated_info(::shareproto::TroopAttackInfo* info);

  // @@protoc_insertion_point(class_scope:onlineproto.COTroopAttack)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::shareproto::TroopAttackInfo* info_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_online_2eproto();
  friend void protobuf_AssignDesc_online_2eproto();
  friend void protobuf_ShutdownFile_online_2eproto();

  void InitAsDefaultInstance();
  static COTroopAttack* default_instance_;
};
// -------------------------------------------------------------------

class OCTroopAttack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:onlineproto.OCTroopAttack) */ {
 public:
  OCTroopAttack();
  virtual ~OCTroopAttack();

  OCTroopAttack(const OCTroopAttack& from);

  inline OCTroopAttack& operator=(const OCTroopAttack& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OCTroopAttack& default_instance();

  void Swap(OCTroopAttack* other);

  // implements Message ----------------------------------------------

  inline OCTroopAttack* New() const { return New(NULL); }

  OCTroopAttack* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OCTroopAttack& from);
  void MergeFrom(const OCTroopAttack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OCTroopAttack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:onlineproto.OCTroopAttack)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_online_2eproto();
  friend void protobuf_AssignDesc_online_2eproto();
  friend void protobuf_ShutdownFile_online_2eproto();

  void InitAsDefaultInstance();
  static OCTroopAttack* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageType

// -------------------------------------------------------------------

// COEnterGame

// optional uint32 id = 1;
inline void COEnterGame::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 COEnterGame::id() const {
  // @@protoc_insertion_point(field_get:onlineproto.COEnterGame.id)
  return id_;
}
inline void COEnterGame::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:onlineproto.COEnterGame.id)
}

// -------------------------------------------------------------------

// OCEnterGame

// -------------------------------------------------------------------

// COTroopDispatch

// repeated .shareproto.PlayerTroopInfo troop = 1;
inline int COTroopDispatch::troop_size() const {
  return troop_.size();
}
inline void COTroopDispatch::clear_troop() {
  troop_.Clear();
}
inline const ::shareproto::PlayerTroopInfo& COTroopDispatch::troop(int index) const {
  // @@protoc_insertion_point(field_get:onlineproto.COTroopDispatch.troop)
  return troop_.Get(index);
}
inline ::shareproto::PlayerTroopInfo* COTroopDispatch::mutable_troop(int index) {
  // @@protoc_insertion_point(field_mutable:onlineproto.COTroopDispatch.troop)
  return troop_.Mutable(index);
}
inline ::shareproto::PlayerTroopInfo* COTroopDispatch::add_troop() {
  // @@protoc_insertion_point(field_add:onlineproto.COTroopDispatch.troop)
  return troop_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >*
COTroopDispatch::mutable_troop() {
  // @@protoc_insertion_point(field_mutable_list:onlineproto.COTroopDispatch.troop)
  return &troop_;
}
inline const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >&
COTroopDispatch::troop() const {
  // @@protoc_insertion_point(field_list:onlineproto.COTroopDispatch.troop)
  return troop_;
}

// -------------------------------------------------------------------

// OCTroopDispatch

// repeated .shareproto.PlayerTroopInfo troop = 1;
inline int OCTroopDispatch::troop_size() const {
  return troop_.size();
}
inline void OCTroopDispatch::clear_troop() {
  troop_.Clear();
}
inline const ::shareproto::PlayerTroopInfo& OCTroopDispatch::troop(int index) const {
  // @@protoc_insertion_point(field_get:onlineproto.OCTroopDispatch.troop)
  return troop_.Get(index);
}
inline ::shareproto::PlayerTroopInfo* OCTroopDispatch::mutable_troop(int index) {
  // @@protoc_insertion_point(field_mutable:onlineproto.OCTroopDispatch.troop)
  return troop_.Mutable(index);
}
inline ::shareproto::PlayerTroopInfo* OCTroopDispatch::add_troop() {
  // @@protoc_insertion_point(field_add:onlineproto.OCTroopDispatch.troop)
  return troop_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >*
OCTroopDispatch::mutable_troop() {
  // @@protoc_insertion_point(field_mutable_list:onlineproto.OCTroopDispatch.troop)
  return &troop_;
}
inline const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerTroopInfo >&
OCTroopDispatch::troop() const {
  // @@protoc_insertion_point(field_list:onlineproto.OCTroopDispatch.troop)
  return troop_;
}

// -------------------------------------------------------------------

// COTroopAttack

// optional .shareproto.TroopAttackInfo info = 1;
inline bool COTroopAttack::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
inline void COTroopAttack::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::shareproto::TroopAttackInfo& COTroopAttack::info() const {
  // @@protoc_insertion_point(field_get:onlineproto.COTroopAttack.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::shareproto::TroopAttackInfo* COTroopAttack::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::shareproto::TroopAttackInfo;
  }
  // @@protoc_insertion_point(field_mutable:onlineproto.COTroopAttack.info)
  return info_;
}
inline ::shareproto::TroopAttackInfo* COTroopAttack::release_info() {
  // @@protoc_insertion_point(field_release:onlineproto.COTroopAttack.info)
  
  ::shareproto::TroopAttackInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void COTroopAttack::set_allocated_info(::shareproto::TroopAttackInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:onlineproto.COTroopAttack.info)
}

// -------------------------------------------------------------------

// OCTroopAttack

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace onlineproto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::onlineproto::MessageType_Cmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::onlineproto::MessageType_Cmd>() {
  return ::onlineproto::MessageType_Cmd_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_online_2eproto__INCLUDED
