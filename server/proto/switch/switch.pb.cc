// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: switch.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "switch.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace switchproto {

namespace {

const ::google::protobuf::Descriptor* MessageType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageType_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MessageType_Cmd_descriptor_ = NULL;
const ::google::protobuf::Descriptor* OSOnlineRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OSOnlineRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* SOOnlineRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SOOnlineRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* OSPlayerRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OSPlayerRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* GSGateRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GSGateRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* SGGateRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SGGateRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* GSPlayerRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GSPlayerRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* LSGetServerList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LSGetServerList_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLGetServerList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLGetServerList_reflection_ = NULL;
const ::google::protobuf::Descriptor* OnlineInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OnlineInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* LSGetOnlineList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LSGetOnlineList_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLGetOnlineList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLGetOnlineList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_switch_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_switch_2eproto() {
  protobuf_AddDesc_switch_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "switch.proto");
  GOOGLE_CHECK(file != NULL);
  MessageType_descriptor_ = file->message_type(0);
  static const int MessageType_offsets_[1] = {
  };
  MessageType_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageType_descriptor_,
      MessageType::default_instance_,
      MessageType_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageType),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageType, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageType, _is_default_instance_));
  MessageType_Cmd_descriptor_ = MessageType_descriptor_->enum_type(0);
  OSOnlineRegister_descriptor_ = file->message_type(1);
  static const int OSOnlineRegister_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OSOnlineRegister, online_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OSOnlineRegister, online_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OSOnlineRegister, online_port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OSOnlineRegister, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OSOnlineRegister, server_id_),
  };
  OSOnlineRegister_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OSOnlineRegister_descriptor_,
      OSOnlineRegister::default_instance_,
      OSOnlineRegister_offsets_,
      -1,
      -1,
      -1,
      sizeof(OSOnlineRegister),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OSOnlineRegister, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OSOnlineRegister, _is_default_instance_));
  SOOnlineRegister_descriptor_ = file->message_type(2);
  static const int SOOnlineRegister_offsets_[1] = {
  };
  SOOnlineRegister_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SOOnlineRegister_descriptor_,
      SOOnlineRegister::default_instance_,
      SOOnlineRegister_offsets_,
      -1,
      -1,
      -1,
      sizeof(SOOnlineRegister),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SOOnlineRegister, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SOOnlineRegister, _is_default_instance_));
  OSPlayerRegister_descriptor_ = file->message_type(3);
  static const int OSPlayerRegister_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OSPlayerRegister, player_),
  };
  OSPlayerRegister_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OSPlayerRegister_descriptor_,
      OSPlayerRegister::default_instance_,
      OSPlayerRegister_offsets_,
      -1,
      -1,
      -1,
      sizeof(OSPlayerRegister),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OSPlayerRegister, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OSPlayerRegister, _is_default_instance_));
  GSGateRegister_descriptor_ = file->message_type(4);
  static const int GSGateRegister_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GSGateRegister, gate_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GSGateRegister, gate_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GSGateRegister, gate_port_),
  };
  GSGateRegister_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GSGateRegister_descriptor_,
      GSGateRegister::default_instance_,
      GSGateRegister_offsets_,
      -1,
      -1,
      -1,
      sizeof(GSGateRegister),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GSGateRegister, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GSGateRegister, _is_default_instance_));
  SGGateRegister_descriptor_ = file->message_type(5);
  static const int SGGateRegister_offsets_[1] = {
  };
  SGGateRegister_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SGGateRegister_descriptor_,
      SGGateRegister::default_instance_,
      SGGateRegister_offsets_,
      -1,
      -1,
      -1,
      sizeof(SGGateRegister),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SGGateRegister, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SGGateRegister, _is_default_instance_));
  GSPlayerRegister_descriptor_ = file->message_type(6);
  static const int GSPlayerRegister_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GSPlayerRegister, player_),
  };
  GSPlayerRegister_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GSPlayerRegister_descriptor_,
      GSPlayerRegister::default_instance_,
      GSPlayerRegister_offsets_,
      -1,
      -1,
      -1,
      sizeof(GSPlayerRegister),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GSPlayerRegister, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GSPlayerRegister, _is_default_instance_));
  LSGetServerList_descriptor_ = file->message_type(7);
  static const int LSGetServerList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSGetServerList, source_),
  };
  LSGetServerList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LSGetServerList_descriptor_,
      LSGetServerList::default_instance_,
      LSGetServerList_offsets_,
      -1,
      -1,
      -1,
      sizeof(LSGetServerList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSGetServerList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSGetServerList, _is_default_instance_));
  SLGetServerList_descriptor_ = file->message_type(8);
  static const int SLGetServerList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGetServerList, server_list_),
  };
  SLGetServerList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLGetServerList_descriptor_,
      SLGetServerList::default_instance_,
      SLGetServerList_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLGetServerList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGetServerList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGetServerList, _is_default_instance_));
  OnlineInfo_descriptor_ = file->message_type(9);
  static const int OnlineInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineInfo, onlineid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineInfo, onlineip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineInfo, onlineport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineInfo, player_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineInfo, domain_),
  };
  OnlineInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OnlineInfo_descriptor_,
      OnlineInfo::default_instance_,
      OnlineInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(OnlineInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineInfo, _is_default_instance_));
  LSGetOnlineList_descriptor_ = file->message_type(10);
  static const int LSGetOnlineList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSGetOnlineList, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSGetOnlineList, server_id_),
  };
  LSGetOnlineList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LSGetOnlineList_descriptor_,
      LSGetOnlineList::default_instance_,
      LSGetOnlineList_offsets_,
      -1,
      -1,
      -1,
      sizeof(LSGetOnlineList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSGetOnlineList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSGetOnlineList, _is_default_instance_));
  SLGetOnlineList_descriptor_ = file->message_type(11);
  static const int SLGetOnlineList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGetOnlineList, online_list_),
  };
  SLGetOnlineList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLGetOnlineList_descriptor_,
      SLGetOnlineList::default_instance_,
      SLGetOnlineList_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLGetOnlineList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGetOnlineList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGetOnlineList, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_switch_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageType_descriptor_, &MessageType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OSOnlineRegister_descriptor_, &OSOnlineRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SOOnlineRegister_descriptor_, &SOOnlineRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OSPlayerRegister_descriptor_, &OSPlayerRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GSGateRegister_descriptor_, &GSGateRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SGGateRegister_descriptor_, &SGGateRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GSPlayerRegister_descriptor_, &GSPlayerRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LSGetServerList_descriptor_, &LSGetServerList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLGetServerList_descriptor_, &SLGetServerList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OnlineInfo_descriptor_, &OnlineInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LSGetOnlineList_descriptor_, &LSGetOnlineList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLGetOnlineList_descriptor_, &SLGetOnlineList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_switch_2eproto() {
  delete MessageType::default_instance_;
  delete MessageType_reflection_;
  delete OSOnlineRegister::default_instance_;
  delete OSOnlineRegister_reflection_;
  delete SOOnlineRegister::default_instance_;
  delete SOOnlineRegister_reflection_;
  delete OSPlayerRegister::default_instance_;
  delete OSPlayerRegister_reflection_;
  delete GSGateRegister::default_instance_;
  delete GSGateRegister_reflection_;
  delete SGGateRegister::default_instance_;
  delete SGGateRegister_reflection_;
  delete GSPlayerRegister::default_instance_;
  delete GSPlayerRegister_reflection_;
  delete LSGetServerList::default_instance_;
  delete LSGetServerList_reflection_;
  delete SLGetServerList::default_instance_;
  delete SLGetServerList_reflection_;
  delete OnlineInfo::default_instance_;
  delete OnlineInfo_reflection_;
  delete LSGetOnlineList::default_instance_;
  delete LSGetOnlineList_reflection_;
  delete SLGetOnlineList::default_instance_;
  delete SLGetOnlineList_reflection_;
}

void protobuf_AddDesc_switch_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_switch_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::shareproto::protobuf_AddDesc_share_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014switch.proto\022\013switchproto\032\013share.proto"
    "\"\356\001\n\013MessageType\"\336\001\n\003Cmd\022\014\n\010StartCmd\020\000\022\017"
    "\n\nOSStartCmd\020\240\037\022\025\n\020OSOnlineRegister\020\241\037\022\025"
    "\n\020OSPlayerRegister\020\242\037\022\023\n\016GSGateRegister\020"
    "\243\037\022\025\n\020GSPlayerRegister\020\244\037\022\017\n\nSwKeepLive\020"
    "\245\037\022\021\n\014OSKickPlayer\020\246\037\022\024\n\017LSGetServerList"
    "\020\247\037\022\024\n\017LSGetOnlineList\020\250\037\022\016\n\tOSSEndCmd\020\207"
    "\'\"p\n\020OSOnlineRegister\022\021\n\tonline_id\030\001 \001(\r"
    "\022\021\n\tonline_ip\030\002 \001(\014\022\023\n\013online_port\030\003 \001(\r"
    "\022\016\n\006source\030\004 \001(\r\022\021\n\tserver_id\030\005 \001(\r\"\022\n\020S"
    "OOnlineRegister\"B\n\020OSPlayerRegister\022.\n\006p"
    "layer\030\001 \003(\0132\036.shareproto.PlayerRegisterI"
    "nfo\"E\n\016GSGateRegister\022\017\n\007gate_id\030\001 \001(\r\022\017"
    "\n\007gate_ip\030\002 \001(\014\022\021\n\tgate_port\030\003 \001(\r\"\020\n\016SG"
    "GateRegister\"B\n\020GSPlayerRegister\022.\n\006play"
    "er\030\001 \003(\0132\036.shareproto.PlayerRegisterInfo"
    "\"!\n\017LSGetServerList\022\016\n\006source\030\001 \001(\r\">\n\017S"
    "LGetServerList\022+\n\013server_list\030\001 \003(\0132\026.sh"
    "areproto.ServerInfo\"h\n\nOnlineInfo\022\020\n\010onl"
    "ineid\030\001 \001(\r\022\020\n\010onlineip\030\002 \001(\t\022\022\n\nonlinep"
    "ort\030\003 \001(\r\022\022\n\nplayer_num\030\004 \001(\r\022\016\n\006domain\030"
    "\005 \001(\r\"4\n\017LSGetOnlineList\022\016\n\006source\030\001 \001(\r"
    "\022\021\n\tserver_id\030\002 \001(\r\"\?\n\017SLGetOnlineList\022,"
    "\n\013online_list\030\001 \003(\0132\027.switchproto.Online"
    "Infob\006proto3", 972);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "switch.proto", &protobuf_RegisterTypes);
  MessageType::default_instance_ = new MessageType();
  OSOnlineRegister::default_instance_ = new OSOnlineRegister();
  SOOnlineRegister::default_instance_ = new SOOnlineRegister();
  OSPlayerRegister::default_instance_ = new OSPlayerRegister();
  GSGateRegister::default_instance_ = new GSGateRegister();
  SGGateRegister::default_instance_ = new SGGateRegister();
  GSPlayerRegister::default_instance_ = new GSPlayerRegister();
  LSGetServerList::default_instance_ = new LSGetServerList();
  SLGetServerList::default_instance_ = new SLGetServerList();
  OnlineInfo::default_instance_ = new OnlineInfo();
  LSGetOnlineList::default_instance_ = new LSGetOnlineList();
  SLGetOnlineList::default_instance_ = new SLGetOnlineList();
  MessageType::default_instance_->InitAsDefaultInstance();
  OSOnlineRegister::default_instance_->InitAsDefaultInstance();
  SOOnlineRegister::default_instance_->InitAsDefaultInstance();
  OSPlayerRegister::default_instance_->InitAsDefaultInstance();
  GSGateRegister::default_instance_->InitAsDefaultInstance();
  SGGateRegister::default_instance_->InitAsDefaultInstance();
  GSPlayerRegister::default_instance_->InitAsDefaultInstance();
  LSGetServerList::default_instance_->InitAsDefaultInstance();
  SLGetServerList::default_instance_->InitAsDefaultInstance();
  OnlineInfo::default_instance_->InitAsDefaultInstance();
  LSGetOnlineList::default_instance_->InitAsDefaultInstance();
  SLGetOnlineList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_switch_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_switch_2eproto {
  StaticDescriptorInitializer_switch_2eproto() {
    protobuf_AddDesc_switch_2eproto();
  }
} static_descriptor_initializer_switch_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* MessageType_Cmd_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_Cmd_descriptor_;
}
bool MessageType_Cmd_IsValid(int value) {
  switch(value) {
    case 0:
    case 4000:
    case 4001:
    case 4002:
    case 4003:
    case 4004:
    case 4005:
    case 4006:
    case 4007:
    case 4008:
    case 4999:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MessageType_Cmd MessageType::StartCmd;
const MessageType_Cmd MessageType::OSStartCmd;
const MessageType_Cmd MessageType::OSOnlineRegister;
const MessageType_Cmd MessageType::OSPlayerRegister;
const MessageType_Cmd MessageType::GSGateRegister;
const MessageType_Cmd MessageType::GSPlayerRegister;
const MessageType_Cmd MessageType::SwKeepLive;
const MessageType_Cmd MessageType::OSKickPlayer;
const MessageType_Cmd MessageType::LSGetServerList;
const MessageType_Cmd MessageType::LSGetOnlineList;
const MessageType_Cmd MessageType::OSSEndCmd;
const MessageType_Cmd MessageType::Cmd_MIN;
const MessageType_Cmd MessageType::Cmd_MAX;
const int MessageType::Cmd_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageType::MessageType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:switchproto.MessageType)
}

void MessageType::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageType::MessageType(const MessageType& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:switchproto.MessageType)
}

void MessageType::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MessageType::~MessageType() {
  // @@protoc_insertion_point(destructor:switchproto.MessageType)
  SharedDtor();
}

void MessageType::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_descriptor_;
}

const MessageType& MessageType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_switch_2eproto();
  return *default_instance_;
}

MessageType* MessageType::default_instance_ = NULL;

MessageType* MessageType::New(::google::protobuf::Arena* arena) const {
  MessageType* n = new MessageType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageType::Clear() {
// @@protoc_insertion_point(message_clear_start:switchproto.MessageType)
}

bool MessageType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:switchproto.MessageType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:switchproto.MessageType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:switchproto.MessageType)
  return false;
#undef DO_
}

void MessageType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:switchproto.MessageType)
  // @@protoc_insertion_point(serialize_end:switchproto.MessageType)
}

::google::protobuf::uint8* MessageType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:switchproto.MessageType)
  // @@protoc_insertion_point(serialize_to_array_end:switchproto.MessageType)
  return target;
}

int MessageType::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:switchproto.MessageType)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:switchproto.MessageType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageType* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:switchproto.MessageType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:switchproto.MessageType)
    MergeFrom(*source);
  }
}

void MessageType::MergeFrom(const MessageType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:switchproto.MessageType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void MessageType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:switchproto.MessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageType::CopyFrom(const MessageType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchproto.MessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageType::IsInitialized() const {

  return true;
}

void MessageType::Swap(MessageType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageType::InternalSwap(MessageType* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageType_descriptor_;
  metadata.reflection = MessageType_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageType

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OSOnlineRegister::kOnlineIdFieldNumber;
const int OSOnlineRegister::kOnlineIpFieldNumber;
const int OSOnlineRegister::kOnlinePortFieldNumber;
const int OSOnlineRegister::kSourceFieldNumber;
const int OSOnlineRegister::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OSOnlineRegister::OSOnlineRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:switchproto.OSOnlineRegister)
}

void OSOnlineRegister::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OSOnlineRegister::OSOnlineRegister(const OSOnlineRegister& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:switchproto.OSOnlineRegister)
}

void OSOnlineRegister::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  online_id_ = 0u;
  online_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_port_ = 0u;
  source_ = 0u;
  server_id_ = 0u;
}

OSOnlineRegister::~OSOnlineRegister() {
  // @@protoc_insertion_point(destructor:switchproto.OSOnlineRegister)
  SharedDtor();
}

void OSOnlineRegister::SharedDtor() {
  online_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void OSOnlineRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OSOnlineRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OSOnlineRegister_descriptor_;
}

const OSOnlineRegister& OSOnlineRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_switch_2eproto();
  return *default_instance_;
}

OSOnlineRegister* OSOnlineRegister::default_instance_ = NULL;

OSOnlineRegister* OSOnlineRegister::New(::google::protobuf::Arena* arena) const {
  OSOnlineRegister* n = new OSOnlineRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OSOnlineRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:switchproto.OSOnlineRegister)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OSOnlineRegister, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OSOnlineRegister*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(online_id_, server_id_);
  online_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool OSOnlineRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:switchproto.OSOnlineRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 online_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &online_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_online_ip;
        break;
      }

      // optional bytes online_ip = 2;
      case 2: {
        if (tag == 18) {
         parse_online_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_online_ip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_online_port;
        break;
      }

      // optional uint32 online_port = 3;
      case 3: {
        if (tag == 24) {
         parse_online_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &online_port_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_source;
        break;
      }

      // optional uint32 source = 4;
      case 4: {
        if (tag == 32) {
         parse_source:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_server_id;
        break;
      }

      // optional uint32 server_id = 5;
      case 5: {
        if (tag == 40) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:switchproto.OSOnlineRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:switchproto.OSOnlineRegister)
  return false;
#undef DO_
}

void OSOnlineRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:switchproto.OSOnlineRegister)
  // optional uint32 online_id = 1;
  if (this->online_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->online_id(), output);
  }

  // optional bytes online_ip = 2;
  if (this->online_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->online_ip(), output);
  }

  // optional uint32 online_port = 3;
  if (this->online_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->online_port(), output);
  }

  // optional uint32 source = 4;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->source(), output);
  }

  // optional uint32 server_id = 5;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->server_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:switchproto.OSOnlineRegister)
}

::google::protobuf::uint8* OSOnlineRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:switchproto.OSOnlineRegister)
  // optional uint32 online_id = 1;
  if (this->online_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->online_id(), target);
  }

  // optional bytes online_ip = 2;
  if (this->online_ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->online_ip(), target);
  }

  // optional uint32 online_port = 3;
  if (this->online_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->online_port(), target);
  }

  // optional uint32 source = 4;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->source(), target);
  }

  // optional uint32 server_id = 5;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->server_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:switchproto.OSOnlineRegister)
  return target;
}

int OSOnlineRegister::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:switchproto.OSOnlineRegister)
  int total_size = 0;

  // optional uint32 online_id = 1;
  if (this->online_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->online_id());
  }

  // optional bytes online_ip = 2;
  if (this->online_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->online_ip());
  }

  // optional uint32 online_port = 3;
  if (this->online_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->online_port());
  }

  // optional uint32 source = 4;
  if (this->source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source());
  }

  // optional uint32 server_id = 5;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OSOnlineRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:switchproto.OSOnlineRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OSOnlineRegister* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OSOnlineRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:switchproto.OSOnlineRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:switchproto.OSOnlineRegister)
    MergeFrom(*source);
  }
}

void OSOnlineRegister::MergeFrom(const OSOnlineRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:switchproto.OSOnlineRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.online_id() != 0) {
    set_online_id(from.online_id());
  }
  if (from.online_ip().size() > 0) {

    online_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_ip_);
  }
  if (from.online_port() != 0) {
    set_online_port(from.online_port());
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
}

void OSOnlineRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:switchproto.OSOnlineRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OSOnlineRegister::CopyFrom(const OSOnlineRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchproto.OSOnlineRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OSOnlineRegister::IsInitialized() const {

  return true;
}

void OSOnlineRegister::Swap(OSOnlineRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OSOnlineRegister::InternalSwap(OSOnlineRegister* other) {
  std::swap(online_id_, other->online_id_);
  online_ip_.Swap(&other->online_ip_);
  std::swap(online_port_, other->online_port_);
  std::swap(source_, other->source_);
  std::swap(server_id_, other->server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OSOnlineRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OSOnlineRegister_descriptor_;
  metadata.reflection = OSOnlineRegister_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OSOnlineRegister

// optional uint32 online_id = 1;
void OSOnlineRegister::clear_online_id() {
  online_id_ = 0u;
}
 ::google::protobuf::uint32 OSOnlineRegister::online_id() const {
  // @@protoc_insertion_point(field_get:switchproto.OSOnlineRegister.online_id)
  return online_id_;
}
 void OSOnlineRegister::set_online_id(::google::protobuf::uint32 value) {
  
  online_id_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OSOnlineRegister.online_id)
}

// optional bytes online_ip = 2;
void OSOnlineRegister::clear_online_ip() {
  online_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OSOnlineRegister::online_ip() const {
  // @@protoc_insertion_point(field_get:switchproto.OSOnlineRegister.online_ip)
  return online_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OSOnlineRegister::set_online_ip(const ::std::string& value) {
  
  online_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:switchproto.OSOnlineRegister.online_ip)
}
 void OSOnlineRegister::set_online_ip(const char* value) {
  
  online_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:switchproto.OSOnlineRegister.online_ip)
}
 void OSOnlineRegister::set_online_ip(const void* value, size_t size) {
  
  online_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:switchproto.OSOnlineRegister.online_ip)
}
 ::std::string* OSOnlineRegister::mutable_online_ip() {
  
  // @@protoc_insertion_point(field_mutable:switchproto.OSOnlineRegister.online_ip)
  return online_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OSOnlineRegister::release_online_ip() {
  // @@protoc_insertion_point(field_release:switchproto.OSOnlineRegister.online_ip)
  
  return online_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OSOnlineRegister::set_allocated_online_ip(::std::string* online_ip) {
  if (online_ip != NULL) {
    
  } else {
    
  }
  online_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_ip);
  // @@protoc_insertion_point(field_set_allocated:switchproto.OSOnlineRegister.online_ip)
}

// optional uint32 online_port = 3;
void OSOnlineRegister::clear_online_port() {
  online_port_ = 0u;
}
 ::google::protobuf::uint32 OSOnlineRegister::online_port() const {
  // @@protoc_insertion_point(field_get:switchproto.OSOnlineRegister.online_port)
  return online_port_;
}
 void OSOnlineRegister::set_online_port(::google::protobuf::uint32 value) {
  
  online_port_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OSOnlineRegister.online_port)
}

// optional uint32 source = 4;
void OSOnlineRegister::clear_source() {
  source_ = 0u;
}
 ::google::protobuf::uint32 OSOnlineRegister::source() const {
  // @@protoc_insertion_point(field_get:switchproto.OSOnlineRegister.source)
  return source_;
}
 void OSOnlineRegister::set_source(::google::protobuf::uint32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OSOnlineRegister.source)
}

// optional uint32 server_id = 5;
void OSOnlineRegister::clear_server_id() {
  server_id_ = 0u;
}
 ::google::protobuf::uint32 OSOnlineRegister::server_id() const {
  // @@protoc_insertion_point(field_get:switchproto.OSOnlineRegister.server_id)
  return server_id_;
}
 void OSOnlineRegister::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OSOnlineRegister.server_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SOOnlineRegister::SOOnlineRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:switchproto.SOOnlineRegister)
}

void SOOnlineRegister::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SOOnlineRegister::SOOnlineRegister(const SOOnlineRegister& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:switchproto.SOOnlineRegister)
}

void SOOnlineRegister::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

SOOnlineRegister::~SOOnlineRegister() {
  // @@protoc_insertion_point(destructor:switchproto.SOOnlineRegister)
  SharedDtor();
}

void SOOnlineRegister::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SOOnlineRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SOOnlineRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SOOnlineRegister_descriptor_;
}

const SOOnlineRegister& SOOnlineRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_switch_2eproto();
  return *default_instance_;
}

SOOnlineRegister* SOOnlineRegister::default_instance_ = NULL;

SOOnlineRegister* SOOnlineRegister::New(::google::protobuf::Arena* arena) const {
  SOOnlineRegister* n = new SOOnlineRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SOOnlineRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:switchproto.SOOnlineRegister)
}

bool SOOnlineRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:switchproto.SOOnlineRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:switchproto.SOOnlineRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:switchproto.SOOnlineRegister)
  return false;
#undef DO_
}

void SOOnlineRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:switchproto.SOOnlineRegister)
  // @@protoc_insertion_point(serialize_end:switchproto.SOOnlineRegister)
}

::google::protobuf::uint8* SOOnlineRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:switchproto.SOOnlineRegister)
  // @@protoc_insertion_point(serialize_to_array_end:switchproto.SOOnlineRegister)
  return target;
}

int SOOnlineRegister::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:switchproto.SOOnlineRegister)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SOOnlineRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:switchproto.SOOnlineRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SOOnlineRegister* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SOOnlineRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:switchproto.SOOnlineRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:switchproto.SOOnlineRegister)
    MergeFrom(*source);
  }
}

void SOOnlineRegister::MergeFrom(const SOOnlineRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:switchproto.SOOnlineRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void SOOnlineRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:switchproto.SOOnlineRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SOOnlineRegister::CopyFrom(const SOOnlineRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchproto.SOOnlineRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SOOnlineRegister::IsInitialized() const {

  return true;
}

void SOOnlineRegister::Swap(SOOnlineRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SOOnlineRegister::InternalSwap(SOOnlineRegister* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SOOnlineRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SOOnlineRegister_descriptor_;
  metadata.reflection = SOOnlineRegister_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SOOnlineRegister

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OSPlayerRegister::kPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OSPlayerRegister::OSPlayerRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:switchproto.OSPlayerRegister)
}

void OSPlayerRegister::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OSPlayerRegister::OSPlayerRegister(const OSPlayerRegister& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:switchproto.OSPlayerRegister)
}

void OSPlayerRegister::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

OSPlayerRegister::~OSPlayerRegister() {
  // @@protoc_insertion_point(destructor:switchproto.OSPlayerRegister)
  SharedDtor();
}

void OSPlayerRegister::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OSPlayerRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OSPlayerRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OSPlayerRegister_descriptor_;
}

const OSPlayerRegister& OSPlayerRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_switch_2eproto();
  return *default_instance_;
}

OSPlayerRegister* OSPlayerRegister::default_instance_ = NULL;

OSPlayerRegister* OSPlayerRegister::New(::google::protobuf::Arena* arena) const {
  OSPlayerRegister* n = new OSPlayerRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OSPlayerRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:switchproto.OSPlayerRegister)
  player_.Clear();
}

bool OSPlayerRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:switchproto.OSPlayerRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shareproto.PlayerRegisterInfo player = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_player:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_player()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_player;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:switchproto.OSPlayerRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:switchproto.OSPlayerRegister)
  return false;
#undef DO_
}

void OSPlayerRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:switchproto.OSPlayerRegister)
  // repeated .shareproto.PlayerRegisterInfo player = 1;
  for (unsigned int i = 0, n = this->player_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player(i), output);
  }

  // @@protoc_insertion_point(serialize_end:switchproto.OSPlayerRegister)
}

::google::protobuf::uint8* OSPlayerRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:switchproto.OSPlayerRegister)
  // repeated .shareproto.PlayerRegisterInfo player = 1;
  for (unsigned int i = 0, n = this->player_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->player(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:switchproto.OSPlayerRegister)
  return target;
}

int OSPlayerRegister::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:switchproto.OSPlayerRegister)
  int total_size = 0;

  // repeated .shareproto.PlayerRegisterInfo player = 1;
  total_size += 1 * this->player_size();
  for (int i = 0; i < this->player_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->player(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OSPlayerRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:switchproto.OSPlayerRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OSPlayerRegister* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OSPlayerRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:switchproto.OSPlayerRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:switchproto.OSPlayerRegister)
    MergeFrom(*source);
  }
}

void OSPlayerRegister::MergeFrom(const OSPlayerRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:switchproto.OSPlayerRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  player_.MergeFrom(from.player_);
}

void OSPlayerRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:switchproto.OSPlayerRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OSPlayerRegister::CopyFrom(const OSPlayerRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchproto.OSPlayerRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OSPlayerRegister::IsInitialized() const {

  return true;
}

void OSPlayerRegister::Swap(OSPlayerRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OSPlayerRegister::InternalSwap(OSPlayerRegister* other) {
  player_.UnsafeArenaSwap(&other->player_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OSPlayerRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OSPlayerRegister_descriptor_;
  metadata.reflection = OSPlayerRegister_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OSPlayerRegister

// repeated .shareproto.PlayerRegisterInfo player = 1;
int OSPlayerRegister::player_size() const {
  return player_.size();
}
void OSPlayerRegister::clear_player() {
  player_.Clear();
}
const ::shareproto::PlayerRegisterInfo& OSPlayerRegister::player(int index) const {
  // @@protoc_insertion_point(field_get:switchproto.OSPlayerRegister.player)
  return player_.Get(index);
}
::shareproto::PlayerRegisterInfo* OSPlayerRegister::mutable_player(int index) {
  // @@protoc_insertion_point(field_mutable:switchproto.OSPlayerRegister.player)
  return player_.Mutable(index);
}
::shareproto::PlayerRegisterInfo* OSPlayerRegister::add_player() {
  // @@protoc_insertion_point(field_add:switchproto.OSPlayerRegister.player)
  return player_.Add();
}
::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >*
OSPlayerRegister::mutable_player() {
  // @@protoc_insertion_point(field_mutable_list:switchproto.OSPlayerRegister.player)
  return &player_;
}
const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >&
OSPlayerRegister::player() const {
  // @@protoc_insertion_point(field_list:switchproto.OSPlayerRegister.player)
  return player_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GSGateRegister::kGateIdFieldNumber;
const int GSGateRegister::kGateIpFieldNumber;
const int GSGateRegister::kGatePortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GSGateRegister::GSGateRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:switchproto.GSGateRegister)
}

void GSGateRegister::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GSGateRegister::GSGateRegister(const GSGateRegister& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:switchproto.GSGateRegister)
}

void GSGateRegister::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gate_id_ = 0u;
  gate_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gate_port_ = 0u;
}

GSGateRegister::~GSGateRegister() {
  // @@protoc_insertion_point(destructor:switchproto.GSGateRegister)
  SharedDtor();
}

void GSGateRegister::SharedDtor() {
  gate_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GSGateRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GSGateRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GSGateRegister_descriptor_;
}

const GSGateRegister& GSGateRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_switch_2eproto();
  return *default_instance_;
}

GSGateRegister* GSGateRegister::default_instance_ = NULL;

GSGateRegister* GSGateRegister::New(::google::protobuf::Arena* arena) const {
  GSGateRegister* n = new GSGateRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GSGateRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:switchproto.GSGateRegister)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GSGateRegister, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GSGateRegister*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(gate_id_, gate_port_);
  gate_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GSGateRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:switchproto.GSGateRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 gate_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gate_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gate_ip;
        break;
      }

      // optional bytes gate_ip = 2;
      case 2: {
        if (tag == 18) {
         parse_gate_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gate_ip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gate_port;
        break;
      }

      // optional uint32 gate_port = 3;
      case 3: {
        if (tag == 24) {
         parse_gate_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gate_port_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:switchproto.GSGateRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:switchproto.GSGateRegister)
  return false;
#undef DO_
}

void GSGateRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:switchproto.GSGateRegister)
  // optional uint32 gate_id = 1;
  if (this->gate_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gate_id(), output);
  }

  // optional bytes gate_ip = 2;
  if (this->gate_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->gate_ip(), output);
  }

  // optional uint32 gate_port = 3;
  if (this->gate_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gate_port(), output);
  }

  // @@protoc_insertion_point(serialize_end:switchproto.GSGateRegister)
}

::google::protobuf::uint8* GSGateRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:switchproto.GSGateRegister)
  // optional uint32 gate_id = 1;
  if (this->gate_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gate_id(), target);
  }

  // optional bytes gate_ip = 2;
  if (this->gate_ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->gate_ip(), target);
  }

  // optional uint32 gate_port = 3;
  if (this->gate_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gate_port(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:switchproto.GSGateRegister)
  return target;
}

int GSGateRegister::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:switchproto.GSGateRegister)
  int total_size = 0;

  // optional uint32 gate_id = 1;
  if (this->gate_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gate_id());
  }

  // optional bytes gate_ip = 2;
  if (this->gate_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gate_ip());
  }

  // optional uint32 gate_port = 3;
  if (this->gate_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gate_port());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GSGateRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:switchproto.GSGateRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GSGateRegister* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GSGateRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:switchproto.GSGateRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:switchproto.GSGateRegister)
    MergeFrom(*source);
  }
}

void GSGateRegister::MergeFrom(const GSGateRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:switchproto.GSGateRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.gate_id() != 0) {
    set_gate_id(from.gate_id());
  }
  if (from.gate_ip().size() > 0) {

    gate_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gate_ip_);
  }
  if (from.gate_port() != 0) {
    set_gate_port(from.gate_port());
  }
}

void GSGateRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:switchproto.GSGateRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GSGateRegister::CopyFrom(const GSGateRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchproto.GSGateRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GSGateRegister::IsInitialized() const {

  return true;
}

void GSGateRegister::Swap(GSGateRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GSGateRegister::InternalSwap(GSGateRegister* other) {
  std::swap(gate_id_, other->gate_id_);
  gate_ip_.Swap(&other->gate_ip_);
  std::swap(gate_port_, other->gate_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GSGateRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GSGateRegister_descriptor_;
  metadata.reflection = GSGateRegister_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GSGateRegister

// optional uint32 gate_id = 1;
void GSGateRegister::clear_gate_id() {
  gate_id_ = 0u;
}
 ::google::protobuf::uint32 GSGateRegister::gate_id() const {
  // @@protoc_insertion_point(field_get:switchproto.GSGateRegister.gate_id)
  return gate_id_;
}
 void GSGateRegister::set_gate_id(::google::protobuf::uint32 value) {
  
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:switchproto.GSGateRegister.gate_id)
}

// optional bytes gate_ip = 2;
void GSGateRegister::clear_gate_ip() {
  gate_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GSGateRegister::gate_ip() const {
  // @@protoc_insertion_point(field_get:switchproto.GSGateRegister.gate_ip)
  return gate_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GSGateRegister::set_gate_ip(const ::std::string& value) {
  
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:switchproto.GSGateRegister.gate_ip)
}
 void GSGateRegister::set_gate_ip(const char* value) {
  
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:switchproto.GSGateRegister.gate_ip)
}
 void GSGateRegister::set_gate_ip(const void* value, size_t size) {
  
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:switchproto.GSGateRegister.gate_ip)
}
 ::std::string* GSGateRegister::mutable_gate_ip() {
  
  // @@protoc_insertion_point(field_mutable:switchproto.GSGateRegister.gate_ip)
  return gate_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GSGateRegister::release_gate_ip() {
  // @@protoc_insertion_point(field_release:switchproto.GSGateRegister.gate_ip)
  
  return gate_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GSGateRegister::set_allocated_gate_ip(::std::string* gate_ip) {
  if (gate_ip != NULL) {
    
  } else {
    
  }
  gate_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gate_ip);
  // @@protoc_insertion_point(field_set_allocated:switchproto.GSGateRegister.gate_ip)
}

// optional uint32 gate_port = 3;
void GSGateRegister::clear_gate_port() {
  gate_port_ = 0u;
}
 ::google::protobuf::uint32 GSGateRegister::gate_port() const {
  // @@protoc_insertion_point(field_get:switchproto.GSGateRegister.gate_port)
  return gate_port_;
}
 void GSGateRegister::set_gate_port(::google::protobuf::uint32 value) {
  
  gate_port_ = value;
  // @@protoc_insertion_point(field_set:switchproto.GSGateRegister.gate_port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SGGateRegister::SGGateRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:switchproto.SGGateRegister)
}

void SGGateRegister::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SGGateRegister::SGGateRegister(const SGGateRegister& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:switchproto.SGGateRegister)
}

void SGGateRegister::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

SGGateRegister::~SGGateRegister() {
  // @@protoc_insertion_point(destructor:switchproto.SGGateRegister)
  SharedDtor();
}

void SGGateRegister::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SGGateRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SGGateRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SGGateRegister_descriptor_;
}

const SGGateRegister& SGGateRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_switch_2eproto();
  return *default_instance_;
}

SGGateRegister* SGGateRegister::default_instance_ = NULL;

SGGateRegister* SGGateRegister::New(::google::protobuf::Arena* arena) const {
  SGGateRegister* n = new SGGateRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SGGateRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:switchproto.SGGateRegister)
}

bool SGGateRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:switchproto.SGGateRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:switchproto.SGGateRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:switchproto.SGGateRegister)
  return false;
#undef DO_
}

void SGGateRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:switchproto.SGGateRegister)
  // @@protoc_insertion_point(serialize_end:switchproto.SGGateRegister)
}

::google::protobuf::uint8* SGGateRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:switchproto.SGGateRegister)
  // @@protoc_insertion_point(serialize_to_array_end:switchproto.SGGateRegister)
  return target;
}

int SGGateRegister::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:switchproto.SGGateRegister)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SGGateRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:switchproto.SGGateRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SGGateRegister* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SGGateRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:switchproto.SGGateRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:switchproto.SGGateRegister)
    MergeFrom(*source);
  }
}

void SGGateRegister::MergeFrom(const SGGateRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:switchproto.SGGateRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void SGGateRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:switchproto.SGGateRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SGGateRegister::CopyFrom(const SGGateRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchproto.SGGateRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SGGateRegister::IsInitialized() const {

  return true;
}

void SGGateRegister::Swap(SGGateRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SGGateRegister::InternalSwap(SGGateRegister* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SGGateRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SGGateRegister_descriptor_;
  metadata.reflection = SGGateRegister_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SGGateRegister

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GSPlayerRegister::kPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GSPlayerRegister::GSPlayerRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:switchproto.GSPlayerRegister)
}

void GSPlayerRegister::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GSPlayerRegister::GSPlayerRegister(const GSPlayerRegister& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:switchproto.GSPlayerRegister)
}

void GSPlayerRegister::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

GSPlayerRegister::~GSPlayerRegister() {
  // @@protoc_insertion_point(destructor:switchproto.GSPlayerRegister)
  SharedDtor();
}

void GSPlayerRegister::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GSPlayerRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GSPlayerRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GSPlayerRegister_descriptor_;
}

const GSPlayerRegister& GSPlayerRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_switch_2eproto();
  return *default_instance_;
}

GSPlayerRegister* GSPlayerRegister::default_instance_ = NULL;

GSPlayerRegister* GSPlayerRegister::New(::google::protobuf::Arena* arena) const {
  GSPlayerRegister* n = new GSPlayerRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GSPlayerRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:switchproto.GSPlayerRegister)
  player_.Clear();
}

bool GSPlayerRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:switchproto.GSPlayerRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shareproto.PlayerRegisterInfo player = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_player:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_player()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_player;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:switchproto.GSPlayerRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:switchproto.GSPlayerRegister)
  return false;
#undef DO_
}

void GSPlayerRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:switchproto.GSPlayerRegister)
  // repeated .shareproto.PlayerRegisterInfo player = 1;
  for (unsigned int i = 0, n = this->player_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player(i), output);
  }

  // @@protoc_insertion_point(serialize_end:switchproto.GSPlayerRegister)
}

::google::protobuf::uint8* GSPlayerRegister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:switchproto.GSPlayerRegister)
  // repeated .shareproto.PlayerRegisterInfo player = 1;
  for (unsigned int i = 0, n = this->player_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->player(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:switchproto.GSPlayerRegister)
  return target;
}

int GSPlayerRegister::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:switchproto.GSPlayerRegister)
  int total_size = 0;

  // repeated .shareproto.PlayerRegisterInfo player = 1;
  total_size += 1 * this->player_size();
  for (int i = 0; i < this->player_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->player(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GSPlayerRegister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:switchproto.GSPlayerRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GSPlayerRegister* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GSPlayerRegister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:switchproto.GSPlayerRegister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:switchproto.GSPlayerRegister)
    MergeFrom(*source);
  }
}

void GSPlayerRegister::MergeFrom(const GSPlayerRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:switchproto.GSPlayerRegister)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  player_.MergeFrom(from.player_);
}

void GSPlayerRegister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:switchproto.GSPlayerRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GSPlayerRegister::CopyFrom(const GSPlayerRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchproto.GSPlayerRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GSPlayerRegister::IsInitialized() const {

  return true;
}

void GSPlayerRegister::Swap(GSPlayerRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GSPlayerRegister::InternalSwap(GSPlayerRegister* other) {
  player_.UnsafeArenaSwap(&other->player_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GSPlayerRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GSPlayerRegister_descriptor_;
  metadata.reflection = GSPlayerRegister_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GSPlayerRegister

// repeated .shareproto.PlayerRegisterInfo player = 1;
int GSPlayerRegister::player_size() const {
  return player_.size();
}
void GSPlayerRegister::clear_player() {
  player_.Clear();
}
const ::shareproto::PlayerRegisterInfo& GSPlayerRegister::player(int index) const {
  // @@protoc_insertion_point(field_get:switchproto.GSPlayerRegister.player)
  return player_.Get(index);
}
::shareproto::PlayerRegisterInfo* GSPlayerRegister::mutable_player(int index) {
  // @@protoc_insertion_point(field_mutable:switchproto.GSPlayerRegister.player)
  return player_.Mutable(index);
}
::shareproto::PlayerRegisterInfo* GSPlayerRegister::add_player() {
  // @@protoc_insertion_point(field_add:switchproto.GSPlayerRegister.player)
  return player_.Add();
}
::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >*
GSPlayerRegister::mutable_player() {
  // @@protoc_insertion_point(field_mutable_list:switchproto.GSPlayerRegister.player)
  return &player_;
}
const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >&
GSPlayerRegister::player() const {
  // @@protoc_insertion_point(field_list:switchproto.GSPlayerRegister.player)
  return player_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LSGetServerList::kSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LSGetServerList::LSGetServerList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:switchproto.LSGetServerList)
}

void LSGetServerList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LSGetServerList::LSGetServerList(const LSGetServerList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:switchproto.LSGetServerList)
}

void LSGetServerList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  source_ = 0u;
}

LSGetServerList::~LSGetServerList() {
  // @@protoc_insertion_point(destructor:switchproto.LSGetServerList)
  SharedDtor();
}

void LSGetServerList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LSGetServerList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LSGetServerList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LSGetServerList_descriptor_;
}

const LSGetServerList& LSGetServerList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_switch_2eproto();
  return *default_instance_;
}

LSGetServerList* LSGetServerList::default_instance_ = NULL;

LSGetServerList* LSGetServerList::New(::google::protobuf::Arena* arena) const {
  LSGetServerList* n = new LSGetServerList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LSGetServerList::Clear() {
// @@protoc_insertion_point(message_clear_start:switchproto.LSGetServerList)
  source_ = 0u;
}

bool LSGetServerList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:switchproto.LSGetServerList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 source = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:switchproto.LSGetServerList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:switchproto.LSGetServerList)
  return false;
#undef DO_
}

void LSGetServerList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:switchproto.LSGetServerList)
  // optional uint32 source = 1;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->source(), output);
  }

  // @@protoc_insertion_point(serialize_end:switchproto.LSGetServerList)
}

::google::protobuf::uint8* LSGetServerList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:switchproto.LSGetServerList)
  // optional uint32 source = 1;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->source(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:switchproto.LSGetServerList)
  return target;
}

int LSGetServerList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:switchproto.LSGetServerList)
  int total_size = 0;

  // optional uint32 source = 1;
  if (this->source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LSGetServerList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:switchproto.LSGetServerList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LSGetServerList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LSGetServerList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:switchproto.LSGetServerList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:switchproto.LSGetServerList)
    MergeFrom(*source);
  }
}

void LSGetServerList::MergeFrom(const LSGetServerList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:switchproto.LSGetServerList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
}

void LSGetServerList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:switchproto.LSGetServerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSGetServerList::CopyFrom(const LSGetServerList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchproto.LSGetServerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSGetServerList::IsInitialized() const {

  return true;
}

void LSGetServerList::Swap(LSGetServerList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LSGetServerList::InternalSwap(LSGetServerList* other) {
  std::swap(source_, other->source_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LSGetServerList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LSGetServerList_descriptor_;
  metadata.reflection = LSGetServerList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LSGetServerList

// optional uint32 source = 1;
void LSGetServerList::clear_source() {
  source_ = 0u;
}
 ::google::protobuf::uint32 LSGetServerList::source() const {
  // @@protoc_insertion_point(field_get:switchproto.LSGetServerList.source)
  return source_;
}
 void LSGetServerList::set_source(::google::protobuf::uint32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:switchproto.LSGetServerList.source)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLGetServerList::kServerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLGetServerList::SLGetServerList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:switchproto.SLGetServerList)
}

void SLGetServerList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SLGetServerList::SLGetServerList(const SLGetServerList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:switchproto.SLGetServerList)
}

void SLGetServerList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

SLGetServerList::~SLGetServerList() {
  // @@protoc_insertion_point(destructor:switchproto.SLGetServerList)
  SharedDtor();
}

void SLGetServerList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SLGetServerList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLGetServerList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLGetServerList_descriptor_;
}

const SLGetServerList& SLGetServerList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_switch_2eproto();
  return *default_instance_;
}

SLGetServerList* SLGetServerList::default_instance_ = NULL;

SLGetServerList* SLGetServerList::New(::google::protobuf::Arena* arena) const {
  SLGetServerList* n = new SLGetServerList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLGetServerList::Clear() {
// @@protoc_insertion_point(message_clear_start:switchproto.SLGetServerList)
  server_list_.Clear();
}

bool SLGetServerList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:switchproto.SLGetServerList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shareproto.ServerInfo server_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_server_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_server_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_server_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:switchproto.SLGetServerList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:switchproto.SLGetServerList)
  return false;
#undef DO_
}

void SLGetServerList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:switchproto.SLGetServerList)
  // repeated .shareproto.ServerInfo server_list = 1;
  for (unsigned int i = 0, n = this->server_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->server_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:switchproto.SLGetServerList)
}

::google::protobuf::uint8* SLGetServerList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:switchproto.SLGetServerList)
  // repeated .shareproto.ServerInfo server_list = 1;
  for (unsigned int i = 0, n = this->server_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->server_list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:switchproto.SLGetServerList)
  return target;
}

int SLGetServerList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:switchproto.SLGetServerList)
  int total_size = 0;

  // repeated .shareproto.ServerInfo server_list = 1;
  total_size += 1 * this->server_list_size();
  for (int i = 0; i < this->server_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->server_list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLGetServerList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:switchproto.SLGetServerList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SLGetServerList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLGetServerList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:switchproto.SLGetServerList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:switchproto.SLGetServerList)
    MergeFrom(*source);
  }
}

void SLGetServerList::MergeFrom(const SLGetServerList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:switchproto.SLGetServerList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  server_list_.MergeFrom(from.server_list_);
}

void SLGetServerList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:switchproto.SLGetServerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLGetServerList::CopyFrom(const SLGetServerList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchproto.SLGetServerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLGetServerList::IsInitialized() const {

  return true;
}

void SLGetServerList::Swap(SLGetServerList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLGetServerList::InternalSwap(SLGetServerList* other) {
  server_list_.UnsafeArenaSwap(&other->server_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLGetServerList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLGetServerList_descriptor_;
  metadata.reflection = SLGetServerList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLGetServerList

// repeated .shareproto.ServerInfo server_list = 1;
int SLGetServerList::server_list_size() const {
  return server_list_.size();
}
void SLGetServerList::clear_server_list() {
  server_list_.Clear();
}
const ::shareproto::ServerInfo& SLGetServerList::server_list(int index) const {
  // @@protoc_insertion_point(field_get:switchproto.SLGetServerList.server_list)
  return server_list_.Get(index);
}
::shareproto::ServerInfo* SLGetServerList::mutable_server_list(int index) {
  // @@protoc_insertion_point(field_mutable:switchproto.SLGetServerList.server_list)
  return server_list_.Mutable(index);
}
::shareproto::ServerInfo* SLGetServerList::add_server_list() {
  // @@protoc_insertion_point(field_add:switchproto.SLGetServerList.server_list)
  return server_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::shareproto::ServerInfo >*
SLGetServerList::mutable_server_list() {
  // @@protoc_insertion_point(field_mutable_list:switchproto.SLGetServerList.server_list)
  return &server_list_;
}
const ::google::protobuf::RepeatedPtrField< ::shareproto::ServerInfo >&
SLGetServerList::server_list() const {
  // @@protoc_insertion_point(field_list:switchproto.SLGetServerList.server_list)
  return server_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnlineInfo::kOnlineidFieldNumber;
const int OnlineInfo::kOnlineipFieldNumber;
const int OnlineInfo::kOnlineportFieldNumber;
const int OnlineInfo::kPlayerNumFieldNumber;
const int OnlineInfo::kDomainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlineInfo::OnlineInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:switchproto.OnlineInfo)
}

void OnlineInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OnlineInfo::OnlineInfo(const OnlineInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:switchproto.OnlineInfo)
}

void OnlineInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  onlineid_ = 0u;
  onlineip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  onlineport_ = 0u;
  player_num_ = 0u;
  domain_ = 0u;
}

OnlineInfo::~OnlineInfo() {
  // @@protoc_insertion_point(destructor:switchproto.OnlineInfo)
  SharedDtor();
}

void OnlineInfo::SharedDtor() {
  onlineip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void OnlineInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnlineInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OnlineInfo_descriptor_;
}

const OnlineInfo& OnlineInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_switch_2eproto();
  return *default_instance_;
}

OnlineInfo* OnlineInfo::default_instance_ = NULL;

OnlineInfo* OnlineInfo::New(::google::protobuf::Arena* arena) const {
  OnlineInfo* n = new OnlineInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnlineInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:switchproto.OnlineInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OnlineInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OnlineInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(onlineid_, domain_);
  onlineip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool OnlineInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:switchproto.OnlineInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 onlineid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &onlineid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_onlineip;
        break;
      }

      // optional string onlineip = 2;
      case 2: {
        if (tag == 18) {
         parse_onlineip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_onlineip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->onlineip().data(), this->onlineip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "switchproto.OnlineInfo.onlineip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_onlineport;
        break;
      }

      // optional uint32 onlineport = 3;
      case 3: {
        if (tag == 24) {
         parse_onlineport:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &onlineport_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_player_num;
        break;
      }

      // optional uint32 player_num = 4;
      case 4: {
        if (tag == 32) {
         parse_player_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_num_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_domain;
        break;
      }

      // optional uint32 domain = 5;
      case 5: {
        if (tag == 40) {
         parse_domain:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &domain_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:switchproto.OnlineInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:switchproto.OnlineInfo)
  return false;
#undef DO_
}

void OnlineInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:switchproto.OnlineInfo)
  // optional uint32 onlineid = 1;
  if (this->onlineid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->onlineid(), output);
  }

  // optional string onlineip = 2;
  if (this->onlineip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->onlineip().data(), this->onlineip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "switchproto.OnlineInfo.onlineip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->onlineip(), output);
  }

  // optional uint32 onlineport = 3;
  if (this->onlineport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->onlineport(), output);
  }

  // optional uint32 player_num = 4;
  if (this->player_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->player_num(), output);
  }

  // optional uint32 domain = 5;
  if (this->domain() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->domain(), output);
  }

  // @@protoc_insertion_point(serialize_end:switchproto.OnlineInfo)
}

::google::protobuf::uint8* OnlineInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:switchproto.OnlineInfo)
  // optional uint32 onlineid = 1;
  if (this->onlineid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->onlineid(), target);
  }

  // optional string onlineip = 2;
  if (this->onlineip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->onlineip().data(), this->onlineip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "switchproto.OnlineInfo.onlineip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->onlineip(), target);
  }

  // optional uint32 onlineport = 3;
  if (this->onlineport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->onlineport(), target);
  }

  // optional uint32 player_num = 4;
  if (this->player_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->player_num(), target);
  }

  // optional uint32 domain = 5;
  if (this->domain() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->domain(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:switchproto.OnlineInfo)
  return target;
}

int OnlineInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:switchproto.OnlineInfo)
  int total_size = 0;

  // optional uint32 onlineid = 1;
  if (this->onlineid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->onlineid());
  }

  // optional string onlineip = 2;
  if (this->onlineip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->onlineip());
  }

  // optional uint32 onlineport = 3;
  if (this->onlineport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->onlineport());
  }

  // optional uint32 player_num = 4;
  if (this->player_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_num());
  }

  // optional uint32 domain = 5;
  if (this->domain() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->domain());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnlineInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:switchproto.OnlineInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OnlineInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OnlineInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:switchproto.OnlineInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:switchproto.OnlineInfo)
    MergeFrom(*source);
  }
}

void OnlineInfo::MergeFrom(const OnlineInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:switchproto.OnlineInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.onlineid() != 0) {
    set_onlineid(from.onlineid());
  }
  if (from.onlineip().size() > 0) {

    onlineip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.onlineip_);
  }
  if (from.onlineport() != 0) {
    set_onlineport(from.onlineport());
  }
  if (from.player_num() != 0) {
    set_player_num(from.player_num());
  }
  if (from.domain() != 0) {
    set_domain(from.domain());
  }
}

void OnlineInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:switchproto.OnlineInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlineInfo::CopyFrom(const OnlineInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchproto.OnlineInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlineInfo::IsInitialized() const {

  return true;
}

void OnlineInfo::Swap(OnlineInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlineInfo::InternalSwap(OnlineInfo* other) {
  std::swap(onlineid_, other->onlineid_);
  onlineip_.Swap(&other->onlineip_);
  std::swap(onlineport_, other->onlineport_);
  std::swap(player_num_, other->player_num_);
  std::swap(domain_, other->domain_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnlineInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OnlineInfo_descriptor_;
  metadata.reflection = OnlineInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OnlineInfo

// optional uint32 onlineid = 1;
void OnlineInfo::clear_onlineid() {
  onlineid_ = 0u;
}
 ::google::protobuf::uint32 OnlineInfo::onlineid() const {
  // @@protoc_insertion_point(field_get:switchproto.OnlineInfo.onlineid)
  return onlineid_;
}
 void OnlineInfo::set_onlineid(::google::protobuf::uint32 value) {
  
  onlineid_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OnlineInfo.onlineid)
}

// optional string onlineip = 2;
void OnlineInfo::clear_onlineip() {
  onlineip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OnlineInfo::onlineip() const {
  // @@protoc_insertion_point(field_get:switchproto.OnlineInfo.onlineip)
  return onlineip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OnlineInfo::set_onlineip(const ::std::string& value) {
  
  onlineip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:switchproto.OnlineInfo.onlineip)
}
 void OnlineInfo::set_onlineip(const char* value) {
  
  onlineip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:switchproto.OnlineInfo.onlineip)
}
 void OnlineInfo::set_onlineip(const char* value, size_t size) {
  
  onlineip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:switchproto.OnlineInfo.onlineip)
}
 ::std::string* OnlineInfo::mutable_onlineip() {
  
  // @@protoc_insertion_point(field_mutable:switchproto.OnlineInfo.onlineip)
  return onlineip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OnlineInfo::release_onlineip() {
  // @@protoc_insertion_point(field_release:switchproto.OnlineInfo.onlineip)
  
  return onlineip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OnlineInfo::set_allocated_onlineip(::std::string* onlineip) {
  if (onlineip != NULL) {
    
  } else {
    
  }
  onlineip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), onlineip);
  // @@protoc_insertion_point(field_set_allocated:switchproto.OnlineInfo.onlineip)
}

// optional uint32 onlineport = 3;
void OnlineInfo::clear_onlineport() {
  onlineport_ = 0u;
}
 ::google::protobuf::uint32 OnlineInfo::onlineport() const {
  // @@protoc_insertion_point(field_get:switchproto.OnlineInfo.onlineport)
  return onlineport_;
}
 void OnlineInfo::set_onlineport(::google::protobuf::uint32 value) {
  
  onlineport_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OnlineInfo.onlineport)
}

// optional uint32 player_num = 4;
void OnlineInfo::clear_player_num() {
  player_num_ = 0u;
}
 ::google::protobuf::uint32 OnlineInfo::player_num() const {
  // @@protoc_insertion_point(field_get:switchproto.OnlineInfo.player_num)
  return player_num_;
}
 void OnlineInfo::set_player_num(::google::protobuf::uint32 value) {
  
  player_num_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OnlineInfo.player_num)
}

// optional uint32 domain = 5;
void OnlineInfo::clear_domain() {
  domain_ = 0u;
}
 ::google::protobuf::uint32 OnlineInfo::domain() const {
  // @@protoc_insertion_point(field_get:switchproto.OnlineInfo.domain)
  return domain_;
}
 void OnlineInfo::set_domain(::google::protobuf::uint32 value) {
  
  domain_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OnlineInfo.domain)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LSGetOnlineList::kSourceFieldNumber;
const int LSGetOnlineList::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LSGetOnlineList::LSGetOnlineList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:switchproto.LSGetOnlineList)
}

void LSGetOnlineList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LSGetOnlineList::LSGetOnlineList(const LSGetOnlineList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:switchproto.LSGetOnlineList)
}

void LSGetOnlineList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  source_ = 0u;
  server_id_ = 0u;
}

LSGetOnlineList::~LSGetOnlineList() {
  // @@protoc_insertion_point(destructor:switchproto.LSGetOnlineList)
  SharedDtor();
}

void LSGetOnlineList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LSGetOnlineList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LSGetOnlineList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LSGetOnlineList_descriptor_;
}

const LSGetOnlineList& LSGetOnlineList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_switch_2eproto();
  return *default_instance_;
}

LSGetOnlineList* LSGetOnlineList::default_instance_ = NULL;

LSGetOnlineList* LSGetOnlineList::New(::google::protobuf::Arena* arena) const {
  LSGetOnlineList* n = new LSGetOnlineList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LSGetOnlineList::Clear() {
// @@protoc_insertion_point(message_clear_start:switchproto.LSGetOnlineList)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LSGetOnlineList, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LSGetOnlineList*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(source_, server_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool LSGetOnlineList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:switchproto.LSGetOnlineList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 source = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_server_id;
        break;
      }

      // optional uint32 server_id = 2;
      case 2: {
        if (tag == 16) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:switchproto.LSGetOnlineList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:switchproto.LSGetOnlineList)
  return false;
#undef DO_
}

void LSGetOnlineList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:switchproto.LSGetOnlineList)
  // optional uint32 source = 1;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->source(), output);
  }

  // optional uint32 server_id = 2;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:switchproto.LSGetOnlineList)
}

::google::protobuf::uint8* LSGetOnlineList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:switchproto.LSGetOnlineList)
  // optional uint32 source = 1;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->source(), target);
  }

  // optional uint32 server_id = 2;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:switchproto.LSGetOnlineList)
  return target;
}

int LSGetOnlineList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:switchproto.LSGetOnlineList)
  int total_size = 0;

  // optional uint32 source = 1;
  if (this->source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source());
  }

  // optional uint32 server_id = 2;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LSGetOnlineList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:switchproto.LSGetOnlineList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LSGetOnlineList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LSGetOnlineList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:switchproto.LSGetOnlineList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:switchproto.LSGetOnlineList)
    MergeFrom(*source);
  }
}

void LSGetOnlineList::MergeFrom(const LSGetOnlineList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:switchproto.LSGetOnlineList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
}

void LSGetOnlineList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:switchproto.LSGetOnlineList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSGetOnlineList::CopyFrom(const LSGetOnlineList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchproto.LSGetOnlineList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSGetOnlineList::IsInitialized() const {

  return true;
}

void LSGetOnlineList::Swap(LSGetOnlineList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LSGetOnlineList::InternalSwap(LSGetOnlineList* other) {
  std::swap(source_, other->source_);
  std::swap(server_id_, other->server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LSGetOnlineList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LSGetOnlineList_descriptor_;
  metadata.reflection = LSGetOnlineList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LSGetOnlineList

// optional uint32 source = 1;
void LSGetOnlineList::clear_source() {
  source_ = 0u;
}
 ::google::protobuf::uint32 LSGetOnlineList::source() const {
  // @@protoc_insertion_point(field_get:switchproto.LSGetOnlineList.source)
  return source_;
}
 void LSGetOnlineList::set_source(::google::protobuf::uint32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:switchproto.LSGetOnlineList.source)
}

// optional uint32 server_id = 2;
void LSGetOnlineList::clear_server_id() {
  server_id_ = 0u;
}
 ::google::protobuf::uint32 LSGetOnlineList::server_id() const {
  // @@protoc_insertion_point(field_get:switchproto.LSGetOnlineList.server_id)
  return server_id_;
}
 void LSGetOnlineList::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:switchproto.LSGetOnlineList.server_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLGetOnlineList::kOnlineListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLGetOnlineList::SLGetOnlineList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:switchproto.SLGetOnlineList)
}

void SLGetOnlineList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SLGetOnlineList::SLGetOnlineList(const SLGetOnlineList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:switchproto.SLGetOnlineList)
}

void SLGetOnlineList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

SLGetOnlineList::~SLGetOnlineList() {
  // @@protoc_insertion_point(destructor:switchproto.SLGetOnlineList)
  SharedDtor();
}

void SLGetOnlineList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SLGetOnlineList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLGetOnlineList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLGetOnlineList_descriptor_;
}

const SLGetOnlineList& SLGetOnlineList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_switch_2eproto();
  return *default_instance_;
}

SLGetOnlineList* SLGetOnlineList::default_instance_ = NULL;

SLGetOnlineList* SLGetOnlineList::New(::google::protobuf::Arena* arena) const {
  SLGetOnlineList* n = new SLGetOnlineList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLGetOnlineList::Clear() {
// @@protoc_insertion_point(message_clear_start:switchproto.SLGetOnlineList)
  online_list_.Clear();
}

bool SLGetOnlineList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:switchproto.SLGetOnlineList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .switchproto.OnlineInfo online_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_online_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_online_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_online_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:switchproto.SLGetOnlineList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:switchproto.SLGetOnlineList)
  return false;
#undef DO_
}

void SLGetOnlineList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:switchproto.SLGetOnlineList)
  // repeated .switchproto.OnlineInfo online_list = 1;
  for (unsigned int i = 0, n = this->online_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->online_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:switchproto.SLGetOnlineList)
}

::google::protobuf::uint8* SLGetOnlineList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:switchproto.SLGetOnlineList)
  // repeated .switchproto.OnlineInfo online_list = 1;
  for (unsigned int i = 0, n = this->online_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->online_list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:switchproto.SLGetOnlineList)
  return target;
}

int SLGetOnlineList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:switchproto.SLGetOnlineList)
  int total_size = 0;

  // repeated .switchproto.OnlineInfo online_list = 1;
  total_size += 1 * this->online_list_size();
  for (int i = 0; i < this->online_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->online_list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLGetOnlineList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:switchproto.SLGetOnlineList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SLGetOnlineList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLGetOnlineList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:switchproto.SLGetOnlineList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:switchproto.SLGetOnlineList)
    MergeFrom(*source);
  }
}

void SLGetOnlineList::MergeFrom(const SLGetOnlineList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:switchproto.SLGetOnlineList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  online_list_.MergeFrom(from.online_list_);
}

void SLGetOnlineList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:switchproto.SLGetOnlineList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLGetOnlineList::CopyFrom(const SLGetOnlineList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchproto.SLGetOnlineList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLGetOnlineList::IsInitialized() const {

  return true;
}

void SLGetOnlineList::Swap(SLGetOnlineList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLGetOnlineList::InternalSwap(SLGetOnlineList* other) {
  online_list_.UnsafeArenaSwap(&other->online_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLGetOnlineList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLGetOnlineList_descriptor_;
  metadata.reflection = SLGetOnlineList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLGetOnlineList

// repeated .switchproto.OnlineInfo online_list = 1;
int SLGetOnlineList::online_list_size() const {
  return online_list_.size();
}
void SLGetOnlineList::clear_online_list() {
  online_list_.Clear();
}
const ::switchproto::OnlineInfo& SLGetOnlineList::online_list(int index) const {
  // @@protoc_insertion_point(field_get:switchproto.SLGetOnlineList.online_list)
  return online_list_.Get(index);
}
::switchproto::OnlineInfo* SLGetOnlineList::mutable_online_list(int index) {
  // @@protoc_insertion_point(field_mutable:switchproto.SLGetOnlineList.online_list)
  return online_list_.Mutable(index);
}
::switchproto::OnlineInfo* SLGetOnlineList::add_online_list() {
  // @@protoc_insertion_point(field_add:switchproto.SLGetOnlineList.online_list)
  return online_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::switchproto::OnlineInfo >*
SLGetOnlineList::mutable_online_list() {
  // @@protoc_insertion_point(field_mutable_list:switchproto.SLGetOnlineList.online_list)
  return &online_list_;
}
const ::google::protobuf::RepeatedPtrField< ::switchproto::OnlineInfo >&
SLGetOnlineList::online_list() const {
  // @@protoc_insertion_point(field_list:switchproto.SLGetOnlineList.online_list)
  return online_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace switchproto

// @@protoc_insertion_point(global_scope)
