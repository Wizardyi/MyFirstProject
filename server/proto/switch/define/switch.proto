syntax="proto3";
package switchproto;
import "share.proto";

// 编码规范
// 该服务处理的协议定义在对应服务的 proto 文件中，该协议在多个服务中使用就应该定义在 share.proto 中
// 该文件分成2部分：
// 第一部分为 MessageType 定义协议号(协议编号范围：switch 4000-4999)；
// 第二部分为协议体定义。
// 定义规则：协议号和协议体定义相同的字符串，第一个字母为协议来方（例如：Client）的简写大写，
//     第二个字母为协议去方（例如：Oline）的简写大写，接下来为协议含义（例如：EnterGame）
//     协议号和协议体定义完成以后，均需要加上清晰明了的注释。协议参数统一使用小写字母和下划线定义。
// 注：字符串类型统一使用 bytes 定义，而不是 string
// 1000-1999 db 及 dbproxy 处理的协议
// 2000-2999 cache 处理的协议
// 3000-3999 position 处理的协议
// 4000-4999 switch 处理的协议
// 5000-5999 world 处理的协议
// 6000-6999 login 处理的协议
// 7000-7999 online 处理的协议
// 8000-8999 gate 处理的协议
// 9000-9999 battle 处理的协议
// 10000-10999 share 多个服务共同处理的协议
// 11000-11999 pathfind 处理的协议

message MessageType
{
	enum Cmd {
		StartCmd			= 0;	// 不使用
		OSStartCmd			= 4000;	// 协议号从该值开始
		OSOnlineRegister	= 4001;	// online 服务注册到 switch 
		OSPlayerRegister	= 4002; // online 上的 player 玩家注册到 switch
		GSGateRegister		= 4003; // gate 服务注册到 switch
		GSPlayerRegister	= 4004; // gate 上的 player 玩家注册到 switch 
		SwKeepLive			= 4005; // switch 发送给其他 svr 的保活协议
		OSKickPlayer		= 4006; // online 发送给 switch 踢人
		LSGetServerList		= 4007; // 获取区包含的服信息
		LSGetOnlineList		= 4008; // 获取某个区服的 ip、端口配置信息

		OSSEndCmd			= 4999;	// 协议号至此值结束
	}
}

message OSOnlineRegister
{
	uint32 online_id		= 1; // onlineID
	bytes  online_ip		= 2; // onlineIP
	uint32 online_port		= 3; // 端口
	uint32 source			= 4; // 所在区 ID
    uint32 server_id		= 5; // 所在服 ID
}

message SOOnlineRegister
{

}

message OSPlayerRegister
{
	repeated shareproto.PlayerRegisterInfo player				= 1; // 需要注册的玩家信息
}

message GSGateRegister
{
	uint32 gate_id		= 1; // gate ID
	bytes  gate_ip		= 2; // gate IP
	uint32 gate_port	= 3; // 端口
}

message SGGateRegister
{

}

message GSPlayerRegister
{
	repeated shareproto.PlayerRegisterInfo player				= 1; // 需要注册的玩家信息
}

message LSGetServerList
{
	uint32 source	= 1;	// 区号
}

message SLGetServerList
{
	repeated shareproto.ServerInfo server_list	= 1;	// 返回区包含的服信息，包括每个服的在线玩家数
}

message OnlineInfo {
	uint32 onlineid = 1;
	string onlineip = 2;
	uint32 onlineport = 3;
	uint32 player_num = 4;	//用户数
	uint32 domain = 5;	//电信 网通
}

message LSGetOnlineList {
    uint32 source									= 1; // 渠道号
	uint32 server_id								= 2; // 区号
}

message SLGetOnlineList {
	repeated OnlineInfo online_list				= 1; // 区对应的 online 信息 
}

