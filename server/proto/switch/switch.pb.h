// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: switch.proto

#ifndef PROTOBUF_switch_2eproto__INCLUDED
#define PROTOBUF_switch_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "share.pb.h"
// @@protoc_insertion_point(includes)

namespace switchproto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_switch_2eproto();
void protobuf_AssignDesc_switch_2eproto();
void protobuf_ShutdownFile_switch_2eproto();

class GSGateRegister;
class GSPlayerRegister;
class LSGetOnlineList;
class LSGetServerList;
class MessageType;
class OSOnlineRegister;
class OSPlayerRegister;
class OnlineInfo;
class SGGateRegister;
class SLGetOnlineList;
class SLGetServerList;
class SOOnlineRegister;

enum MessageType_Cmd {
  MessageType_Cmd_StartCmd = 0,
  MessageType_Cmd_OSStartCmd = 4000,
  MessageType_Cmd_OSOnlineRegister = 4001,
  MessageType_Cmd_OSPlayerRegister = 4002,
  MessageType_Cmd_GSGateRegister = 4003,
  MessageType_Cmd_GSPlayerRegister = 4004,
  MessageType_Cmd_SwKeepLive = 4005,
  MessageType_Cmd_OSKickPlayer = 4006,
  MessageType_Cmd_LSGetServerList = 4007,
  MessageType_Cmd_LSGetOnlineList = 4008,
  MessageType_Cmd_OSSEndCmd = 4999,
  MessageType_Cmd_MessageType_Cmd_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageType_Cmd_MessageType_Cmd_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageType_Cmd_IsValid(int value);
const MessageType_Cmd MessageType_Cmd_Cmd_MIN = MessageType_Cmd_StartCmd;
const MessageType_Cmd MessageType_Cmd_Cmd_MAX = MessageType_Cmd_OSSEndCmd;
const int MessageType_Cmd_Cmd_ARRAYSIZE = MessageType_Cmd_Cmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_Cmd_descriptor();
inline const ::std::string& MessageType_Cmd_Name(MessageType_Cmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_Cmd_descriptor(), value);
}
inline bool MessageType_Cmd_Parse(
    const ::std::string& name, MessageType_Cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType_Cmd>(
    MessageType_Cmd_descriptor(), name, value);
}
// ===================================================================

class MessageType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:switchproto.MessageType) */ {
 public:
  MessageType();
  virtual ~MessageType();

  MessageType(const MessageType& from);

  inline MessageType& operator=(const MessageType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageType& default_instance();

  void Swap(MessageType* other);

  // implements Message ----------------------------------------------

  inline MessageType* New() const { return New(NULL); }

  MessageType* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageType& from);
  void MergeFrom(const MessageType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MessageType_Cmd Cmd;
  static const Cmd StartCmd =
    MessageType_Cmd_StartCmd;
  static const Cmd OSStartCmd =
    MessageType_Cmd_OSStartCmd;
  static const Cmd OSOnlineRegister =
    MessageType_Cmd_OSOnlineRegister;
  static const Cmd OSPlayerRegister =
    MessageType_Cmd_OSPlayerRegister;
  static const Cmd GSGateRegister =
    MessageType_Cmd_GSGateRegister;
  static const Cmd GSPlayerRegister =
    MessageType_Cmd_GSPlayerRegister;
  static const Cmd SwKeepLive =
    MessageType_Cmd_SwKeepLive;
  static const Cmd OSKickPlayer =
    MessageType_Cmd_OSKickPlayer;
  static const Cmd LSGetServerList =
    MessageType_Cmd_LSGetServerList;
  static const Cmd LSGetOnlineList =
    MessageType_Cmd_LSGetOnlineList;
  static const Cmd OSSEndCmd =
    MessageType_Cmd_OSSEndCmd;
  static inline bool Cmd_IsValid(int value) {
    return MessageType_Cmd_IsValid(value);
  }
  static const Cmd Cmd_MIN =
    MessageType_Cmd_Cmd_MIN;
  static const Cmd Cmd_MAX =
    MessageType_Cmd_Cmd_MAX;
  static const int Cmd_ARRAYSIZE =
    MessageType_Cmd_Cmd_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Cmd_descriptor() {
    return MessageType_Cmd_descriptor();
  }
  static inline const ::std::string& Cmd_Name(Cmd value) {
    return MessageType_Cmd_Name(value);
  }
  static inline bool Cmd_Parse(const ::std::string& name,
      Cmd* value) {
    return MessageType_Cmd_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:switchproto.MessageType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_switch_2eproto();
  friend void protobuf_AssignDesc_switch_2eproto();
  friend void protobuf_ShutdownFile_switch_2eproto();

  void InitAsDefaultInstance();
  static MessageType* default_instance_;
};
// -------------------------------------------------------------------

class OSOnlineRegister : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:switchproto.OSOnlineRegister) */ {
 public:
  OSOnlineRegister();
  virtual ~OSOnlineRegister();

  OSOnlineRegister(const OSOnlineRegister& from);

  inline OSOnlineRegister& operator=(const OSOnlineRegister& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OSOnlineRegister& default_instance();

  void Swap(OSOnlineRegister* other);

  // implements Message ----------------------------------------------

  inline OSOnlineRegister* New() const { return New(NULL); }

  OSOnlineRegister* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OSOnlineRegister& from);
  void MergeFrom(const OSOnlineRegister& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OSOnlineRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 online_id = 1;
  void clear_online_id();
  static const int kOnlineIdFieldNumber = 1;
  ::google::protobuf::uint32 online_id() const;
  void set_online_id(::google::protobuf::uint32 value);

  // optional bytes online_ip = 2;
  void clear_online_ip();
  static const int kOnlineIpFieldNumber = 2;
  const ::std::string& online_ip() const;
  void set_online_ip(const ::std::string& value);
  void set_online_ip(const char* value);
  void set_online_ip(const void* value, size_t size);
  ::std::string* mutable_online_ip();
  ::std::string* release_online_ip();
  void set_allocated_online_ip(::std::string* online_ip);

  // optional uint32 online_port = 3;
  void clear_online_port();
  static const int kOnlinePortFieldNumber = 3;
  ::google::protobuf::uint32 online_port() const;
  void set_online_port(::google::protobuf::uint32 value);

  // optional uint32 source = 4;
  void clear_source();
  static const int kSourceFieldNumber = 4;
  ::google::protobuf::uint32 source() const;
  void set_source(::google::protobuf::uint32 value);

  // optional uint32 server_id = 5;
  void clear_server_id();
  static const int kServerIdFieldNumber = 5;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:switchproto.OSOnlineRegister)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr online_ip_;
  ::google::protobuf::uint32 online_id_;
  ::google::protobuf::uint32 online_port_;
  ::google::protobuf::uint32 source_;
  ::google::protobuf::uint32 server_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_switch_2eproto();
  friend void protobuf_AssignDesc_switch_2eproto();
  friend void protobuf_ShutdownFile_switch_2eproto();

  void InitAsDefaultInstance();
  static OSOnlineRegister* default_instance_;
};
// -------------------------------------------------------------------

class SOOnlineRegister : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:switchproto.SOOnlineRegister) */ {
 public:
  SOOnlineRegister();
  virtual ~SOOnlineRegister();

  SOOnlineRegister(const SOOnlineRegister& from);

  inline SOOnlineRegister& operator=(const SOOnlineRegister& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SOOnlineRegister& default_instance();

  void Swap(SOOnlineRegister* other);

  // implements Message ----------------------------------------------

  inline SOOnlineRegister* New() const { return New(NULL); }

  SOOnlineRegister* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SOOnlineRegister& from);
  void MergeFrom(const SOOnlineRegister& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SOOnlineRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:switchproto.SOOnlineRegister)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_switch_2eproto();
  friend void protobuf_AssignDesc_switch_2eproto();
  friend void protobuf_ShutdownFile_switch_2eproto();

  void InitAsDefaultInstance();
  static SOOnlineRegister* default_instance_;
};
// -------------------------------------------------------------------

class OSPlayerRegister : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:switchproto.OSPlayerRegister) */ {
 public:
  OSPlayerRegister();
  virtual ~OSPlayerRegister();

  OSPlayerRegister(const OSPlayerRegister& from);

  inline OSPlayerRegister& operator=(const OSPlayerRegister& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OSPlayerRegister& default_instance();

  void Swap(OSPlayerRegister* other);

  // implements Message ----------------------------------------------

  inline OSPlayerRegister* New() const { return New(NULL); }

  OSPlayerRegister* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OSPlayerRegister& from);
  void MergeFrom(const OSPlayerRegister& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OSPlayerRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shareproto.PlayerRegisterInfo player = 1;
  int player_size() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  const ::shareproto::PlayerRegisterInfo& player(int index) const;
  ::shareproto::PlayerRegisterInfo* mutable_player(int index);
  ::shareproto::PlayerRegisterInfo* add_player();
  ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >*
      mutable_player();
  const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >&
      player() const;

  // @@protoc_insertion_point(class_scope:switchproto.OSPlayerRegister)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo > player_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_switch_2eproto();
  friend void protobuf_AssignDesc_switch_2eproto();
  friend void protobuf_ShutdownFile_switch_2eproto();

  void InitAsDefaultInstance();
  static OSPlayerRegister* default_instance_;
};
// -------------------------------------------------------------------

class GSGateRegister : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:switchproto.GSGateRegister) */ {
 public:
  GSGateRegister();
  virtual ~GSGateRegister();

  GSGateRegister(const GSGateRegister& from);

  inline GSGateRegister& operator=(const GSGateRegister& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GSGateRegister& default_instance();

  void Swap(GSGateRegister* other);

  // implements Message ----------------------------------------------

  inline GSGateRegister* New() const { return New(NULL); }

  GSGateRegister* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GSGateRegister& from);
  void MergeFrom(const GSGateRegister& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GSGateRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gate_id = 1;
  void clear_gate_id();
  static const int kGateIdFieldNumber = 1;
  ::google::protobuf::uint32 gate_id() const;
  void set_gate_id(::google::protobuf::uint32 value);

  // optional bytes gate_ip = 2;
  void clear_gate_ip();
  static const int kGateIpFieldNumber = 2;
  const ::std::string& gate_ip() const;
  void set_gate_ip(const ::std::string& value);
  void set_gate_ip(const char* value);
  void set_gate_ip(const void* value, size_t size);
  ::std::string* mutable_gate_ip();
  ::std::string* release_gate_ip();
  void set_allocated_gate_ip(::std::string* gate_ip);

  // optional uint32 gate_port = 3;
  void clear_gate_port();
  static const int kGatePortFieldNumber = 3;
  ::google::protobuf::uint32 gate_port() const;
  void set_gate_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:switchproto.GSGateRegister)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr gate_ip_;
  ::google::protobuf::uint32 gate_id_;
  ::google::protobuf::uint32 gate_port_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_switch_2eproto();
  friend void protobuf_AssignDesc_switch_2eproto();
  friend void protobuf_ShutdownFile_switch_2eproto();

  void InitAsDefaultInstance();
  static GSGateRegister* default_instance_;
};
// -------------------------------------------------------------------

class SGGateRegister : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:switchproto.SGGateRegister) */ {
 public:
  SGGateRegister();
  virtual ~SGGateRegister();

  SGGateRegister(const SGGateRegister& from);

  inline SGGateRegister& operator=(const SGGateRegister& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SGGateRegister& default_instance();

  void Swap(SGGateRegister* other);

  // implements Message ----------------------------------------------

  inline SGGateRegister* New() const { return New(NULL); }

  SGGateRegister* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SGGateRegister& from);
  void MergeFrom(const SGGateRegister& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SGGateRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:switchproto.SGGateRegister)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_switch_2eproto();
  friend void protobuf_AssignDesc_switch_2eproto();
  friend void protobuf_ShutdownFile_switch_2eproto();

  void InitAsDefaultInstance();
  static SGGateRegister* default_instance_;
};
// -------------------------------------------------------------------

class GSPlayerRegister : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:switchproto.GSPlayerRegister) */ {
 public:
  GSPlayerRegister();
  virtual ~GSPlayerRegister();

  GSPlayerRegister(const GSPlayerRegister& from);

  inline GSPlayerRegister& operator=(const GSPlayerRegister& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GSPlayerRegister& default_instance();

  void Swap(GSPlayerRegister* other);

  // implements Message ----------------------------------------------

  inline GSPlayerRegister* New() const { return New(NULL); }

  GSPlayerRegister* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GSPlayerRegister& from);
  void MergeFrom(const GSPlayerRegister& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GSPlayerRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shareproto.PlayerRegisterInfo player = 1;
  int player_size() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  const ::shareproto::PlayerRegisterInfo& player(int index) const;
  ::shareproto::PlayerRegisterInfo* mutable_player(int index);
  ::shareproto::PlayerRegisterInfo* add_player();
  ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >*
      mutable_player();
  const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >&
      player() const;

  // @@protoc_insertion_point(class_scope:switchproto.GSPlayerRegister)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo > player_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_switch_2eproto();
  friend void protobuf_AssignDesc_switch_2eproto();
  friend void protobuf_ShutdownFile_switch_2eproto();

  void InitAsDefaultInstance();
  static GSPlayerRegister* default_instance_;
};
// -------------------------------------------------------------------

class LSGetServerList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:switchproto.LSGetServerList) */ {
 public:
  LSGetServerList();
  virtual ~LSGetServerList();

  LSGetServerList(const LSGetServerList& from);

  inline LSGetServerList& operator=(const LSGetServerList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LSGetServerList& default_instance();

  void Swap(LSGetServerList* other);

  // implements Message ----------------------------------------------

  inline LSGetServerList* New() const { return New(NULL); }

  LSGetServerList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LSGetServerList& from);
  void MergeFrom(const LSGetServerList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LSGetServerList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 source = 1;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  ::google::protobuf::uint32 source() const;
  void set_source(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:switchproto.LSGetServerList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 source_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_switch_2eproto();
  friend void protobuf_AssignDesc_switch_2eproto();
  friend void protobuf_ShutdownFile_switch_2eproto();

  void InitAsDefaultInstance();
  static LSGetServerList* default_instance_;
};
// -------------------------------------------------------------------

class SLGetServerList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:switchproto.SLGetServerList) */ {
 public:
  SLGetServerList();
  virtual ~SLGetServerList();

  SLGetServerList(const SLGetServerList& from);

  inline SLGetServerList& operator=(const SLGetServerList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLGetServerList& default_instance();

  void Swap(SLGetServerList* other);

  // implements Message ----------------------------------------------

  inline SLGetServerList* New() const { return New(NULL); }

  SLGetServerList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLGetServerList& from);
  void MergeFrom(const SLGetServerList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLGetServerList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shareproto.ServerInfo server_list = 1;
  int server_list_size() const;
  void clear_server_list();
  static const int kServerListFieldNumber = 1;
  const ::shareproto::ServerInfo& server_list(int index) const;
  ::shareproto::ServerInfo* mutable_server_list(int index);
  ::shareproto::ServerInfo* add_server_list();
  ::google::protobuf::RepeatedPtrField< ::shareproto::ServerInfo >*
      mutable_server_list();
  const ::google::protobuf::RepeatedPtrField< ::shareproto::ServerInfo >&
      server_list() const;

  // @@protoc_insertion_point(class_scope:switchproto.SLGetServerList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::shareproto::ServerInfo > server_list_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_switch_2eproto();
  friend void protobuf_AssignDesc_switch_2eproto();
  friend void protobuf_ShutdownFile_switch_2eproto();

  void InitAsDefaultInstance();
  static SLGetServerList* default_instance_;
};
// -------------------------------------------------------------------

class OnlineInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:switchproto.OnlineInfo) */ {
 public:
  OnlineInfo();
  virtual ~OnlineInfo();

  OnlineInfo(const OnlineInfo& from);

  inline OnlineInfo& operator=(const OnlineInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlineInfo& default_instance();

  void Swap(OnlineInfo* other);

  // implements Message ----------------------------------------------

  inline OnlineInfo* New() const { return New(NULL); }

  OnlineInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnlineInfo& from);
  void MergeFrom(const OnlineInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OnlineInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 onlineid = 1;
  void clear_onlineid();
  static const int kOnlineidFieldNumber = 1;
  ::google::protobuf::uint32 onlineid() const;
  void set_onlineid(::google::protobuf::uint32 value);

  // optional string onlineip = 2;
  void clear_onlineip();
  static const int kOnlineipFieldNumber = 2;
  const ::std::string& onlineip() const;
  void set_onlineip(const ::std::string& value);
  void set_onlineip(const char* value);
  void set_onlineip(const char* value, size_t size);
  ::std::string* mutable_onlineip();
  ::std::string* release_onlineip();
  void set_allocated_onlineip(::std::string* onlineip);

  // optional uint32 onlineport = 3;
  void clear_onlineport();
  static const int kOnlineportFieldNumber = 3;
  ::google::protobuf::uint32 onlineport() const;
  void set_onlineport(::google::protobuf::uint32 value);

  // optional uint32 player_num = 4;
  void clear_player_num();
  static const int kPlayerNumFieldNumber = 4;
  ::google::protobuf::uint32 player_num() const;
  void set_player_num(::google::protobuf::uint32 value);

  // optional uint32 domain = 5;
  void clear_domain();
  static const int kDomainFieldNumber = 5;
  ::google::protobuf::uint32 domain() const;
  void set_domain(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:switchproto.OnlineInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr onlineip_;
  ::google::protobuf::uint32 onlineid_;
  ::google::protobuf::uint32 onlineport_;
  ::google::protobuf::uint32 player_num_;
  ::google::protobuf::uint32 domain_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_switch_2eproto();
  friend void protobuf_AssignDesc_switch_2eproto();
  friend void protobuf_ShutdownFile_switch_2eproto();

  void InitAsDefaultInstance();
  static OnlineInfo* default_instance_;
};
// -------------------------------------------------------------------

class LSGetOnlineList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:switchproto.LSGetOnlineList) */ {
 public:
  LSGetOnlineList();
  virtual ~LSGetOnlineList();

  LSGetOnlineList(const LSGetOnlineList& from);

  inline LSGetOnlineList& operator=(const LSGetOnlineList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LSGetOnlineList& default_instance();

  void Swap(LSGetOnlineList* other);

  // implements Message ----------------------------------------------

  inline LSGetOnlineList* New() const { return New(NULL); }

  LSGetOnlineList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LSGetOnlineList& from);
  void MergeFrom(const LSGetOnlineList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LSGetOnlineList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 source = 1;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  ::google::protobuf::uint32 source() const;
  void set_source(::google::protobuf::uint32 value);

  // optional uint32 server_id = 2;
  void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:switchproto.LSGetOnlineList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 source_;
  ::google::protobuf::uint32 server_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_switch_2eproto();
  friend void protobuf_AssignDesc_switch_2eproto();
  friend void protobuf_ShutdownFile_switch_2eproto();

  void InitAsDefaultInstance();
  static LSGetOnlineList* default_instance_;
};
// -------------------------------------------------------------------

class SLGetOnlineList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:switchproto.SLGetOnlineList) */ {
 public:
  SLGetOnlineList();
  virtual ~SLGetOnlineList();

  SLGetOnlineList(const SLGetOnlineList& from);

  inline SLGetOnlineList& operator=(const SLGetOnlineList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLGetOnlineList& default_instance();

  void Swap(SLGetOnlineList* other);

  // implements Message ----------------------------------------------

  inline SLGetOnlineList* New() const { return New(NULL); }

  SLGetOnlineList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLGetOnlineList& from);
  void MergeFrom(const SLGetOnlineList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLGetOnlineList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .switchproto.OnlineInfo online_list = 1;
  int online_list_size() const;
  void clear_online_list();
  static const int kOnlineListFieldNumber = 1;
  const ::switchproto::OnlineInfo& online_list(int index) const;
  ::switchproto::OnlineInfo* mutable_online_list(int index);
  ::switchproto::OnlineInfo* add_online_list();
  ::google::protobuf::RepeatedPtrField< ::switchproto::OnlineInfo >*
      mutable_online_list();
  const ::google::protobuf::RepeatedPtrField< ::switchproto::OnlineInfo >&
      online_list() const;

  // @@protoc_insertion_point(class_scope:switchproto.SLGetOnlineList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::switchproto::OnlineInfo > online_list_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_switch_2eproto();
  friend void protobuf_AssignDesc_switch_2eproto();
  friend void protobuf_ShutdownFile_switch_2eproto();

  void InitAsDefaultInstance();
  static SLGetOnlineList* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageType

// -------------------------------------------------------------------

// OSOnlineRegister

// optional uint32 online_id = 1;
inline void OSOnlineRegister::clear_online_id() {
  online_id_ = 0u;
}
inline ::google::protobuf::uint32 OSOnlineRegister::online_id() const {
  // @@protoc_insertion_point(field_get:switchproto.OSOnlineRegister.online_id)
  return online_id_;
}
inline void OSOnlineRegister::set_online_id(::google::protobuf::uint32 value) {
  
  online_id_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OSOnlineRegister.online_id)
}

// optional bytes online_ip = 2;
inline void OSOnlineRegister::clear_online_ip() {
  online_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OSOnlineRegister::online_ip() const {
  // @@protoc_insertion_point(field_get:switchproto.OSOnlineRegister.online_ip)
  return online_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OSOnlineRegister::set_online_ip(const ::std::string& value) {
  
  online_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:switchproto.OSOnlineRegister.online_ip)
}
inline void OSOnlineRegister::set_online_ip(const char* value) {
  
  online_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:switchproto.OSOnlineRegister.online_ip)
}
inline void OSOnlineRegister::set_online_ip(const void* value, size_t size) {
  
  online_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:switchproto.OSOnlineRegister.online_ip)
}
inline ::std::string* OSOnlineRegister::mutable_online_ip() {
  
  // @@protoc_insertion_point(field_mutable:switchproto.OSOnlineRegister.online_ip)
  return online_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OSOnlineRegister::release_online_ip() {
  // @@protoc_insertion_point(field_release:switchproto.OSOnlineRegister.online_ip)
  
  return online_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OSOnlineRegister::set_allocated_online_ip(::std::string* online_ip) {
  if (online_ip != NULL) {
    
  } else {
    
  }
  online_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_ip);
  // @@protoc_insertion_point(field_set_allocated:switchproto.OSOnlineRegister.online_ip)
}

// optional uint32 online_port = 3;
inline void OSOnlineRegister::clear_online_port() {
  online_port_ = 0u;
}
inline ::google::protobuf::uint32 OSOnlineRegister::online_port() const {
  // @@protoc_insertion_point(field_get:switchproto.OSOnlineRegister.online_port)
  return online_port_;
}
inline void OSOnlineRegister::set_online_port(::google::protobuf::uint32 value) {
  
  online_port_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OSOnlineRegister.online_port)
}

// optional uint32 source = 4;
inline void OSOnlineRegister::clear_source() {
  source_ = 0u;
}
inline ::google::protobuf::uint32 OSOnlineRegister::source() const {
  // @@protoc_insertion_point(field_get:switchproto.OSOnlineRegister.source)
  return source_;
}
inline void OSOnlineRegister::set_source(::google::protobuf::uint32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OSOnlineRegister.source)
}

// optional uint32 server_id = 5;
inline void OSOnlineRegister::clear_server_id() {
  server_id_ = 0u;
}
inline ::google::protobuf::uint32 OSOnlineRegister::server_id() const {
  // @@protoc_insertion_point(field_get:switchproto.OSOnlineRegister.server_id)
  return server_id_;
}
inline void OSOnlineRegister::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OSOnlineRegister.server_id)
}

// -------------------------------------------------------------------

// SOOnlineRegister

// -------------------------------------------------------------------

// OSPlayerRegister

// repeated .shareproto.PlayerRegisterInfo player = 1;
inline int OSPlayerRegister::player_size() const {
  return player_.size();
}
inline void OSPlayerRegister::clear_player() {
  player_.Clear();
}
inline const ::shareproto::PlayerRegisterInfo& OSPlayerRegister::player(int index) const {
  // @@protoc_insertion_point(field_get:switchproto.OSPlayerRegister.player)
  return player_.Get(index);
}
inline ::shareproto::PlayerRegisterInfo* OSPlayerRegister::mutable_player(int index) {
  // @@protoc_insertion_point(field_mutable:switchproto.OSPlayerRegister.player)
  return player_.Mutable(index);
}
inline ::shareproto::PlayerRegisterInfo* OSPlayerRegister::add_player() {
  // @@protoc_insertion_point(field_add:switchproto.OSPlayerRegister.player)
  return player_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >*
OSPlayerRegister::mutable_player() {
  // @@protoc_insertion_point(field_mutable_list:switchproto.OSPlayerRegister.player)
  return &player_;
}
inline const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >&
OSPlayerRegister::player() const {
  // @@protoc_insertion_point(field_list:switchproto.OSPlayerRegister.player)
  return player_;
}

// -------------------------------------------------------------------

// GSGateRegister

// optional uint32 gate_id = 1;
inline void GSGateRegister::clear_gate_id() {
  gate_id_ = 0u;
}
inline ::google::protobuf::uint32 GSGateRegister::gate_id() const {
  // @@protoc_insertion_point(field_get:switchproto.GSGateRegister.gate_id)
  return gate_id_;
}
inline void GSGateRegister::set_gate_id(::google::protobuf::uint32 value) {
  
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:switchproto.GSGateRegister.gate_id)
}

// optional bytes gate_ip = 2;
inline void GSGateRegister::clear_gate_ip() {
  gate_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GSGateRegister::gate_ip() const {
  // @@protoc_insertion_point(field_get:switchproto.GSGateRegister.gate_ip)
  return gate_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GSGateRegister::set_gate_ip(const ::std::string& value) {
  
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:switchproto.GSGateRegister.gate_ip)
}
inline void GSGateRegister::set_gate_ip(const char* value) {
  
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:switchproto.GSGateRegister.gate_ip)
}
inline void GSGateRegister::set_gate_ip(const void* value, size_t size) {
  
  gate_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:switchproto.GSGateRegister.gate_ip)
}
inline ::std::string* GSGateRegister::mutable_gate_ip() {
  
  // @@protoc_insertion_point(field_mutable:switchproto.GSGateRegister.gate_ip)
  return gate_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GSGateRegister::release_gate_ip() {
  // @@protoc_insertion_point(field_release:switchproto.GSGateRegister.gate_ip)
  
  return gate_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GSGateRegister::set_allocated_gate_ip(::std::string* gate_ip) {
  if (gate_ip != NULL) {
    
  } else {
    
  }
  gate_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gate_ip);
  // @@protoc_insertion_point(field_set_allocated:switchproto.GSGateRegister.gate_ip)
}

// optional uint32 gate_port = 3;
inline void GSGateRegister::clear_gate_port() {
  gate_port_ = 0u;
}
inline ::google::protobuf::uint32 GSGateRegister::gate_port() const {
  // @@protoc_insertion_point(field_get:switchproto.GSGateRegister.gate_port)
  return gate_port_;
}
inline void GSGateRegister::set_gate_port(::google::protobuf::uint32 value) {
  
  gate_port_ = value;
  // @@protoc_insertion_point(field_set:switchproto.GSGateRegister.gate_port)
}

// -------------------------------------------------------------------

// SGGateRegister

// -------------------------------------------------------------------

// GSPlayerRegister

// repeated .shareproto.PlayerRegisterInfo player = 1;
inline int GSPlayerRegister::player_size() const {
  return player_.size();
}
inline void GSPlayerRegister::clear_player() {
  player_.Clear();
}
inline const ::shareproto::PlayerRegisterInfo& GSPlayerRegister::player(int index) const {
  // @@protoc_insertion_point(field_get:switchproto.GSPlayerRegister.player)
  return player_.Get(index);
}
inline ::shareproto::PlayerRegisterInfo* GSPlayerRegister::mutable_player(int index) {
  // @@protoc_insertion_point(field_mutable:switchproto.GSPlayerRegister.player)
  return player_.Mutable(index);
}
inline ::shareproto::PlayerRegisterInfo* GSPlayerRegister::add_player() {
  // @@protoc_insertion_point(field_add:switchproto.GSPlayerRegister.player)
  return player_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >*
GSPlayerRegister::mutable_player() {
  // @@protoc_insertion_point(field_mutable_list:switchproto.GSPlayerRegister.player)
  return &player_;
}
inline const ::google::protobuf::RepeatedPtrField< ::shareproto::PlayerRegisterInfo >&
GSPlayerRegister::player() const {
  // @@protoc_insertion_point(field_list:switchproto.GSPlayerRegister.player)
  return player_;
}

// -------------------------------------------------------------------

// LSGetServerList

// optional uint32 source = 1;
inline void LSGetServerList::clear_source() {
  source_ = 0u;
}
inline ::google::protobuf::uint32 LSGetServerList::source() const {
  // @@protoc_insertion_point(field_get:switchproto.LSGetServerList.source)
  return source_;
}
inline void LSGetServerList::set_source(::google::protobuf::uint32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:switchproto.LSGetServerList.source)
}

// -------------------------------------------------------------------

// SLGetServerList

// repeated .shareproto.ServerInfo server_list = 1;
inline int SLGetServerList::server_list_size() const {
  return server_list_.size();
}
inline void SLGetServerList::clear_server_list() {
  server_list_.Clear();
}
inline const ::shareproto::ServerInfo& SLGetServerList::server_list(int index) const {
  // @@protoc_insertion_point(field_get:switchproto.SLGetServerList.server_list)
  return server_list_.Get(index);
}
inline ::shareproto::ServerInfo* SLGetServerList::mutable_server_list(int index) {
  // @@protoc_insertion_point(field_mutable:switchproto.SLGetServerList.server_list)
  return server_list_.Mutable(index);
}
inline ::shareproto::ServerInfo* SLGetServerList::add_server_list() {
  // @@protoc_insertion_point(field_add:switchproto.SLGetServerList.server_list)
  return server_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::shareproto::ServerInfo >*
SLGetServerList::mutable_server_list() {
  // @@protoc_insertion_point(field_mutable_list:switchproto.SLGetServerList.server_list)
  return &server_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::shareproto::ServerInfo >&
SLGetServerList::server_list() const {
  // @@protoc_insertion_point(field_list:switchproto.SLGetServerList.server_list)
  return server_list_;
}

// -------------------------------------------------------------------

// OnlineInfo

// optional uint32 onlineid = 1;
inline void OnlineInfo::clear_onlineid() {
  onlineid_ = 0u;
}
inline ::google::protobuf::uint32 OnlineInfo::onlineid() const {
  // @@protoc_insertion_point(field_get:switchproto.OnlineInfo.onlineid)
  return onlineid_;
}
inline void OnlineInfo::set_onlineid(::google::protobuf::uint32 value) {
  
  onlineid_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OnlineInfo.onlineid)
}

// optional string onlineip = 2;
inline void OnlineInfo::clear_onlineip() {
  onlineip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnlineInfo::onlineip() const {
  // @@protoc_insertion_point(field_get:switchproto.OnlineInfo.onlineip)
  return onlineip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnlineInfo::set_onlineip(const ::std::string& value) {
  
  onlineip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:switchproto.OnlineInfo.onlineip)
}
inline void OnlineInfo::set_onlineip(const char* value) {
  
  onlineip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:switchproto.OnlineInfo.onlineip)
}
inline void OnlineInfo::set_onlineip(const char* value, size_t size) {
  
  onlineip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:switchproto.OnlineInfo.onlineip)
}
inline ::std::string* OnlineInfo::mutable_onlineip() {
  
  // @@protoc_insertion_point(field_mutable:switchproto.OnlineInfo.onlineip)
  return onlineip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnlineInfo::release_onlineip() {
  // @@protoc_insertion_point(field_release:switchproto.OnlineInfo.onlineip)
  
  return onlineip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnlineInfo::set_allocated_onlineip(::std::string* onlineip) {
  if (onlineip != NULL) {
    
  } else {
    
  }
  onlineip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), onlineip);
  // @@protoc_insertion_point(field_set_allocated:switchproto.OnlineInfo.onlineip)
}

// optional uint32 onlineport = 3;
inline void OnlineInfo::clear_onlineport() {
  onlineport_ = 0u;
}
inline ::google::protobuf::uint32 OnlineInfo::onlineport() const {
  // @@protoc_insertion_point(field_get:switchproto.OnlineInfo.onlineport)
  return onlineport_;
}
inline void OnlineInfo::set_onlineport(::google::protobuf::uint32 value) {
  
  onlineport_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OnlineInfo.onlineport)
}

// optional uint32 player_num = 4;
inline void OnlineInfo::clear_player_num() {
  player_num_ = 0u;
}
inline ::google::protobuf::uint32 OnlineInfo::player_num() const {
  // @@protoc_insertion_point(field_get:switchproto.OnlineInfo.player_num)
  return player_num_;
}
inline void OnlineInfo::set_player_num(::google::protobuf::uint32 value) {
  
  player_num_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OnlineInfo.player_num)
}

// optional uint32 domain = 5;
inline void OnlineInfo::clear_domain() {
  domain_ = 0u;
}
inline ::google::protobuf::uint32 OnlineInfo::domain() const {
  // @@protoc_insertion_point(field_get:switchproto.OnlineInfo.domain)
  return domain_;
}
inline void OnlineInfo::set_domain(::google::protobuf::uint32 value) {
  
  domain_ = value;
  // @@protoc_insertion_point(field_set:switchproto.OnlineInfo.domain)
}

// -------------------------------------------------------------------

// LSGetOnlineList

// optional uint32 source = 1;
inline void LSGetOnlineList::clear_source() {
  source_ = 0u;
}
inline ::google::protobuf::uint32 LSGetOnlineList::source() const {
  // @@protoc_insertion_point(field_get:switchproto.LSGetOnlineList.source)
  return source_;
}
inline void LSGetOnlineList::set_source(::google::protobuf::uint32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:switchproto.LSGetOnlineList.source)
}

// optional uint32 server_id = 2;
inline void LSGetOnlineList::clear_server_id() {
  server_id_ = 0u;
}
inline ::google::protobuf::uint32 LSGetOnlineList::server_id() const {
  // @@protoc_insertion_point(field_get:switchproto.LSGetOnlineList.server_id)
  return server_id_;
}
inline void LSGetOnlineList::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:switchproto.LSGetOnlineList.server_id)
}

// -------------------------------------------------------------------

// SLGetOnlineList

// repeated .switchproto.OnlineInfo online_list = 1;
inline int SLGetOnlineList::online_list_size() const {
  return online_list_.size();
}
inline void SLGetOnlineList::clear_online_list() {
  online_list_.Clear();
}
inline const ::switchproto::OnlineInfo& SLGetOnlineList::online_list(int index) const {
  // @@protoc_insertion_point(field_get:switchproto.SLGetOnlineList.online_list)
  return online_list_.Get(index);
}
inline ::switchproto::OnlineInfo* SLGetOnlineList::mutable_online_list(int index) {
  // @@protoc_insertion_point(field_mutable:switchproto.SLGetOnlineList.online_list)
  return online_list_.Mutable(index);
}
inline ::switchproto::OnlineInfo* SLGetOnlineList::add_online_list() {
  // @@protoc_insertion_point(field_add:switchproto.SLGetOnlineList.online_list)
  return online_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::switchproto::OnlineInfo >*
SLGetOnlineList::mutable_online_list() {
  // @@protoc_insertion_point(field_mutable_list:switchproto.SLGetOnlineList.online_list)
  return &online_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::switchproto::OnlineInfo >&
SLGetOnlineList::online_list() const {
  // @@protoc_insertion_point(field_list:switchproto.SLGetOnlineList.online_list)
  return online_list_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace switchproto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::switchproto::MessageType_Cmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::switchproto::MessageType_Cmd>() {
  return ::switchproto::MessageType_Cmd_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_switch_2eproto__INCLUDED
