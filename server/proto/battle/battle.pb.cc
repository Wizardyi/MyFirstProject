// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: battle.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "battle.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace battleproto {

namespace {

const ::google::protobuf::Descriptor* MessageType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageType_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MessageType_Cmd_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BattleOp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BattleOp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBOpBattle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBOpBattle_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBDelTroop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBDelTroop_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BattleOpType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_battle_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_battle_2eproto() {
  protobuf_AddDesc_battle_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "battle.proto");
  GOOGLE_CHECK(file != NULL);
  MessageType_descriptor_ = file->message_type(0);
  static const int MessageType_offsets_[1] = {
  };
  MessageType_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageType_descriptor_,
      MessageType::default_instance_,
      MessageType_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageType),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageType, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageType, _is_default_instance_));
  MessageType_Cmd_descriptor_ = MessageType_descriptor_->enum_type(0);
  BattleOp_descriptor_ = file->message_type(1);
  static const int BattleOp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleOp, op_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleOp, troop_a_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleOp, troop_b_id_),
  };
  BattleOp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BattleOp_descriptor_,
      BattleOp::default_instance_,
      BattleOp_offsets_,
      -1,
      -1,
      -1,
      sizeof(BattleOp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleOp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleOp, _is_default_instance_));
  PBOpBattle_descriptor_ = file->message_type(2);
  static const int PBOpBattle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOpBattle, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOpBattle, troop_info_),
  };
  PBOpBattle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBOpBattle_descriptor_,
      PBOpBattle::default_instance_,
      PBOpBattle_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBOpBattle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOpBattle, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOpBattle, _is_default_instance_));
  PBDelTroop_descriptor_ = file->message_type(3);
  static const int PBDelTroop_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDelTroop, troop_id_),
  };
  PBDelTroop_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBDelTroop_descriptor_,
      PBDelTroop::default_instance_,
      PBDelTroop_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBDelTroop),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDelTroop, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDelTroop, _is_default_instance_));
  BattleOpType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_battle_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageType_descriptor_, &MessageType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BattleOp_descriptor_, &BattleOp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBOpBattle_descriptor_, &PBOpBattle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBDelTroop_descriptor_, &PBDelTroop::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_battle_2eproto() {
  delete MessageType::default_instance_;
  delete MessageType_reflection_;
  delete BattleOp::default_instance_;
  delete BattleOp_reflection_;
  delete PBOpBattle::default_instance_;
  delete PBOpBattle_reflection_;
  delete PBDelTroop::default_instance_;
  delete PBDelTroop_reflection_;
}

void protobuf_AddDesc_battle_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_battle_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::shareproto::protobuf_AddDesc_share_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014battle.proto\022\013battleproto\032\013share.proto"
    "\"d\n\013MessageType\"U\n\003Cmd\022\014\n\010StartCmd\020\000\022\017\n\n"
    "PBStartCmd\020\250F\022\017\n\nPBOpBattle\020\251F\022\017\n\nPBDelT"
    "roop\020\252F\022\r\n\010PBEndCmd\020\217N\"^\n\010BattleOp\022*\n\007op"
    "_type\030\001 \001(\0162\031.battleproto.BattleOpType\022\022"
    "\n\ntroop_a_id\030\002 \001(\004\022\022\n\ntroop_b_id\030\003 \001(\004\"`"
    "\n\nPBOpBattle\022!\n\002op\030\001 \003(\0132\025.battleproto.B"
    "attleOp\022/\n\ntroop_info\030\002 \003(\0132\033.shareproto"
    ".TroopDetailInfo\"\036\n\nPBDelTroop\022\020\n\010troop_"
    "id\030\001 \003(\004*0\n\014BattleOpType\022\010\n\004NULL\020\000\022\n\n\006At"
    "tack\020\001\022\n\n\006Escape\020\002b\006proto3", 426);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "battle.proto", &protobuf_RegisterTypes);
  MessageType::default_instance_ = new MessageType();
  BattleOp::default_instance_ = new BattleOp();
  PBOpBattle::default_instance_ = new PBOpBattle();
  PBDelTroop::default_instance_ = new PBDelTroop();
  MessageType::default_instance_->InitAsDefaultInstance();
  BattleOp::default_instance_->InitAsDefaultInstance();
  PBOpBattle::default_instance_->InitAsDefaultInstance();
  PBDelTroop::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_battle_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_battle_2eproto {
  StaticDescriptorInitializer_battle_2eproto() {
    protobuf_AddDesc_battle_2eproto();
  }
} static_descriptor_initializer_battle_2eproto_;
const ::google::protobuf::EnumDescriptor* BattleOpType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleOpType_descriptor_;
}
bool BattleOpType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MessageType_Cmd_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_Cmd_descriptor_;
}
bool MessageType_Cmd_IsValid(int value) {
  switch(value) {
    case 0:
    case 9000:
    case 9001:
    case 9002:
    case 9999:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MessageType_Cmd MessageType::StartCmd;
const MessageType_Cmd MessageType::PBStartCmd;
const MessageType_Cmd MessageType::PBOpBattle;
const MessageType_Cmd MessageType::PBDelTroop;
const MessageType_Cmd MessageType::PBEndCmd;
const MessageType_Cmd MessageType::Cmd_MIN;
const MessageType_Cmd MessageType::Cmd_MAX;
const int MessageType::Cmd_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageType::MessageType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:battleproto.MessageType)
}

void MessageType::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageType::MessageType(const MessageType& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:battleproto.MessageType)
}

void MessageType::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MessageType::~MessageType() {
  // @@protoc_insertion_point(destructor:battleproto.MessageType)
  SharedDtor();
}

void MessageType::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_descriptor_;
}

const MessageType& MessageType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_battle_2eproto();
  return *default_instance_;
}

MessageType* MessageType::default_instance_ = NULL;

MessageType* MessageType::New(::google::protobuf::Arena* arena) const {
  MessageType* n = new MessageType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageType::Clear() {
// @@protoc_insertion_point(message_clear_start:battleproto.MessageType)
}

bool MessageType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:battleproto.MessageType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:battleproto.MessageType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:battleproto.MessageType)
  return false;
#undef DO_
}

void MessageType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:battleproto.MessageType)
  // @@protoc_insertion_point(serialize_end:battleproto.MessageType)
}

::google::protobuf::uint8* MessageType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:battleproto.MessageType)
  // @@protoc_insertion_point(serialize_to_array_end:battleproto.MessageType)
  return target;
}

int MessageType::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:battleproto.MessageType)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:battleproto.MessageType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageType* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:battleproto.MessageType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:battleproto.MessageType)
    MergeFrom(*source);
  }
}

void MessageType::MergeFrom(const MessageType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:battleproto.MessageType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void MessageType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:battleproto.MessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageType::CopyFrom(const MessageType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battleproto.MessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageType::IsInitialized() const {

  return true;
}

void MessageType::Swap(MessageType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageType::InternalSwap(MessageType* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageType_descriptor_;
  metadata.reflection = MessageType_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageType

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BattleOp::kOpTypeFieldNumber;
const int BattleOp::kTroopAIdFieldNumber;
const int BattleOp::kTroopBIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BattleOp::BattleOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:battleproto.BattleOp)
}

void BattleOp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BattleOp::BattleOp(const BattleOp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:battleproto.BattleOp)
}

void BattleOp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  op_type_ = 0;
  troop_a_id_ = GOOGLE_ULONGLONG(0);
  troop_b_id_ = GOOGLE_ULONGLONG(0);
}

BattleOp::~BattleOp() {
  // @@protoc_insertion_point(destructor:battleproto.BattleOp)
  SharedDtor();
}

void BattleOp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BattleOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleOp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleOp_descriptor_;
}

const BattleOp& BattleOp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_battle_2eproto();
  return *default_instance_;
}

BattleOp* BattleOp::default_instance_ = NULL;

BattleOp* BattleOp::New(::google::protobuf::Arena* arena) const {
  BattleOp* n = new BattleOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BattleOp::Clear() {
// @@protoc_insertion_point(message_clear_start:battleproto.BattleOp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BattleOp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BattleOp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(troop_a_id_, op_type_);

#undef ZR_HELPER_
#undef ZR_

}

bool BattleOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:battleproto.BattleOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .battleproto.BattleOpType op_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::battleproto::BattleOpType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_troop_a_id;
        break;
      }

      // optional uint64 troop_a_id = 2;
      case 2: {
        if (tag == 16) {
         parse_troop_a_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &troop_a_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_troop_b_id;
        break;
      }

      // optional uint64 troop_b_id = 3;
      case 3: {
        if (tag == 24) {
         parse_troop_b_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &troop_b_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:battleproto.BattleOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:battleproto.BattleOp)
  return false;
#undef DO_
}

void BattleOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:battleproto.BattleOp)
  // optional .battleproto.BattleOpType op_type = 1;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op_type(), output);
  }

  // optional uint64 troop_a_id = 2;
  if (this->troop_a_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->troop_a_id(), output);
  }

  // optional uint64 troop_b_id = 3;
  if (this->troop_b_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->troop_b_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:battleproto.BattleOp)
}

::google::protobuf::uint8* BattleOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:battleproto.BattleOp)
  // optional .battleproto.BattleOpType op_type = 1;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op_type(), target);
  }

  // optional uint64 troop_a_id = 2;
  if (this->troop_a_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->troop_a_id(), target);
  }

  // optional uint64 troop_b_id = 3;
  if (this->troop_b_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->troop_b_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:battleproto.BattleOp)
  return target;
}

int BattleOp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:battleproto.BattleOp)
  int total_size = 0;

  // optional .battleproto.BattleOpType op_type = 1;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  // optional uint64 troop_a_id = 2;
  if (this->troop_a_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->troop_a_id());
  }

  // optional uint64 troop_b_id = 3;
  if (this->troop_b_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->troop_b_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:battleproto.BattleOp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BattleOp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BattleOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:battleproto.BattleOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:battleproto.BattleOp)
    MergeFrom(*source);
  }
}

void BattleOp::MergeFrom(const BattleOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:battleproto.BattleOp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
  if (from.troop_a_id() != 0) {
    set_troop_a_id(from.troop_a_id());
  }
  if (from.troop_b_id() != 0) {
    set_troop_b_id(from.troop_b_id());
  }
}

void BattleOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:battleproto.BattleOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleOp::CopyFrom(const BattleOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battleproto.BattleOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleOp::IsInitialized() const {

  return true;
}

void BattleOp::Swap(BattleOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BattleOp::InternalSwap(BattleOp* other) {
  std::swap(op_type_, other->op_type_);
  std::swap(troop_a_id_, other->troop_a_id_);
  std::swap(troop_b_id_, other->troop_b_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BattleOp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BattleOp_descriptor_;
  metadata.reflection = BattleOp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BattleOp

// optional .battleproto.BattleOpType op_type = 1;
void BattleOp::clear_op_type() {
  op_type_ = 0;
}
 ::battleproto::BattleOpType BattleOp::op_type() const {
  // @@protoc_insertion_point(field_get:battleproto.BattleOp.op_type)
  return static_cast< ::battleproto::BattleOpType >(op_type_);
}
 void BattleOp::set_op_type(::battleproto::BattleOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:battleproto.BattleOp.op_type)
}

// optional uint64 troop_a_id = 2;
void BattleOp::clear_troop_a_id() {
  troop_a_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 BattleOp::troop_a_id() const {
  // @@protoc_insertion_point(field_get:battleproto.BattleOp.troop_a_id)
  return troop_a_id_;
}
 void BattleOp::set_troop_a_id(::google::protobuf::uint64 value) {
  
  troop_a_id_ = value;
  // @@protoc_insertion_point(field_set:battleproto.BattleOp.troop_a_id)
}

// optional uint64 troop_b_id = 3;
void BattleOp::clear_troop_b_id() {
  troop_b_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 BattleOp::troop_b_id() const {
  // @@protoc_insertion_point(field_get:battleproto.BattleOp.troop_b_id)
  return troop_b_id_;
}
 void BattleOp::set_troop_b_id(::google::protobuf::uint64 value) {
  
  troop_b_id_ = value;
  // @@protoc_insertion_point(field_set:battleproto.BattleOp.troop_b_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBOpBattle::kOpFieldNumber;
const int PBOpBattle::kTroopInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBOpBattle::PBOpBattle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:battleproto.PBOpBattle)
}

void PBOpBattle::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBOpBattle::PBOpBattle(const PBOpBattle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:battleproto.PBOpBattle)
}

void PBOpBattle::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PBOpBattle::~PBOpBattle() {
  // @@protoc_insertion_point(destructor:battleproto.PBOpBattle)
  SharedDtor();
}

void PBOpBattle::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBOpBattle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBOpBattle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBOpBattle_descriptor_;
}

const PBOpBattle& PBOpBattle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_battle_2eproto();
  return *default_instance_;
}

PBOpBattle* PBOpBattle::default_instance_ = NULL;

PBOpBattle* PBOpBattle::New(::google::protobuf::Arena* arena) const {
  PBOpBattle* n = new PBOpBattle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBOpBattle::Clear() {
// @@protoc_insertion_point(message_clear_start:battleproto.PBOpBattle)
  op_.Clear();
  troop_info_.Clear();
}

bool PBOpBattle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:battleproto.PBOpBattle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .battleproto.BattleOp op = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_op:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_op()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_op;
        if (input->ExpectTag(18)) goto parse_loop_troop_info;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .shareproto.TroopDetailInfo troop_info = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_troop_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_troop_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_troop_info;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:battleproto.PBOpBattle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:battleproto.PBOpBattle)
  return false;
#undef DO_
}

void PBOpBattle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:battleproto.PBOpBattle)
  // repeated .battleproto.BattleOp op = 1;
  for (unsigned int i = 0, n = this->op_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->op(i), output);
  }

  // repeated .shareproto.TroopDetailInfo troop_info = 2;
  for (unsigned int i = 0, n = this->troop_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->troop_info(i), output);
  }

  // @@protoc_insertion_point(serialize_end:battleproto.PBOpBattle)
}

::google::protobuf::uint8* PBOpBattle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:battleproto.PBOpBattle)
  // repeated .battleproto.BattleOp op = 1;
  for (unsigned int i = 0, n = this->op_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->op(i), false, target);
  }

  // repeated .shareproto.TroopDetailInfo troop_info = 2;
  for (unsigned int i = 0, n = this->troop_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->troop_info(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:battleproto.PBOpBattle)
  return target;
}

int PBOpBattle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:battleproto.PBOpBattle)
  int total_size = 0;

  // repeated .battleproto.BattleOp op = 1;
  total_size += 1 * this->op_size();
  for (int i = 0; i < this->op_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->op(i));
  }

  // repeated .shareproto.TroopDetailInfo troop_info = 2;
  total_size += 1 * this->troop_info_size();
  for (int i = 0; i < this->troop_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->troop_info(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBOpBattle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:battleproto.PBOpBattle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PBOpBattle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBOpBattle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:battleproto.PBOpBattle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:battleproto.PBOpBattle)
    MergeFrom(*source);
  }
}

void PBOpBattle::MergeFrom(const PBOpBattle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:battleproto.PBOpBattle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  op_.MergeFrom(from.op_);
  troop_info_.MergeFrom(from.troop_info_);
}

void PBOpBattle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:battleproto.PBOpBattle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBOpBattle::CopyFrom(const PBOpBattle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battleproto.PBOpBattle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBOpBattle::IsInitialized() const {

  return true;
}

void PBOpBattle::Swap(PBOpBattle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBOpBattle::InternalSwap(PBOpBattle* other) {
  op_.UnsafeArenaSwap(&other->op_);
  troop_info_.UnsafeArenaSwap(&other->troop_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBOpBattle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBOpBattle_descriptor_;
  metadata.reflection = PBOpBattle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBOpBattle

// repeated .battleproto.BattleOp op = 1;
int PBOpBattle::op_size() const {
  return op_.size();
}
void PBOpBattle::clear_op() {
  op_.Clear();
}
const ::battleproto::BattleOp& PBOpBattle::op(int index) const {
  // @@protoc_insertion_point(field_get:battleproto.PBOpBattle.op)
  return op_.Get(index);
}
::battleproto::BattleOp* PBOpBattle::mutable_op(int index) {
  // @@protoc_insertion_point(field_mutable:battleproto.PBOpBattle.op)
  return op_.Mutable(index);
}
::battleproto::BattleOp* PBOpBattle::add_op() {
  // @@protoc_insertion_point(field_add:battleproto.PBOpBattle.op)
  return op_.Add();
}
::google::protobuf::RepeatedPtrField< ::battleproto::BattleOp >*
PBOpBattle::mutable_op() {
  // @@protoc_insertion_point(field_mutable_list:battleproto.PBOpBattle.op)
  return &op_;
}
const ::google::protobuf::RepeatedPtrField< ::battleproto::BattleOp >&
PBOpBattle::op() const {
  // @@protoc_insertion_point(field_list:battleproto.PBOpBattle.op)
  return op_;
}

// repeated .shareproto.TroopDetailInfo troop_info = 2;
int PBOpBattle::troop_info_size() const {
  return troop_info_.size();
}
void PBOpBattle::clear_troop_info() {
  troop_info_.Clear();
}
const ::shareproto::TroopDetailInfo& PBOpBattle::troop_info(int index) const {
  // @@protoc_insertion_point(field_get:battleproto.PBOpBattle.troop_info)
  return troop_info_.Get(index);
}
::shareproto::TroopDetailInfo* PBOpBattle::mutable_troop_info(int index) {
  // @@protoc_insertion_point(field_mutable:battleproto.PBOpBattle.troop_info)
  return troop_info_.Mutable(index);
}
::shareproto::TroopDetailInfo* PBOpBattle::add_troop_info() {
  // @@protoc_insertion_point(field_add:battleproto.PBOpBattle.troop_info)
  return troop_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::shareproto::TroopDetailInfo >*
PBOpBattle::mutable_troop_info() {
  // @@protoc_insertion_point(field_mutable_list:battleproto.PBOpBattle.troop_info)
  return &troop_info_;
}
const ::google::protobuf::RepeatedPtrField< ::shareproto::TroopDetailInfo >&
PBOpBattle::troop_info() const {
  // @@protoc_insertion_point(field_list:battleproto.PBOpBattle.troop_info)
  return troop_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBDelTroop::kTroopIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBDelTroop::PBDelTroop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:battleproto.PBDelTroop)
}

void PBDelTroop::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBDelTroop::PBDelTroop(const PBDelTroop& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:battleproto.PBDelTroop)
}

void PBDelTroop::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PBDelTroop::~PBDelTroop() {
  // @@protoc_insertion_point(destructor:battleproto.PBDelTroop)
  SharedDtor();
}

void PBDelTroop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBDelTroop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBDelTroop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBDelTroop_descriptor_;
}

const PBDelTroop& PBDelTroop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_battle_2eproto();
  return *default_instance_;
}

PBDelTroop* PBDelTroop::default_instance_ = NULL;

PBDelTroop* PBDelTroop::New(::google::protobuf::Arena* arena) const {
  PBDelTroop* n = new PBDelTroop;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBDelTroop::Clear() {
// @@protoc_insertion_point(message_clear_start:battleproto.PBDelTroop)
  troop_id_.Clear();
}

bool PBDelTroop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:battleproto.PBDelTroop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 troop_id = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_troop_id())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_troop_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:battleproto.PBDelTroop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:battleproto.PBDelTroop)
  return false;
#undef DO_
}

void PBDelTroop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:battleproto.PBDelTroop)
  // repeated uint64 troop_id = 1;
  if (this->troop_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_troop_id_cached_byte_size_);
  }
  for (int i = 0; i < this->troop_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->troop_id(i), output);
  }

  // @@protoc_insertion_point(serialize_end:battleproto.PBDelTroop)
}

::google::protobuf::uint8* PBDelTroop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:battleproto.PBDelTroop)
  // repeated uint64 troop_id = 1;
  if (this->troop_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _troop_id_cached_byte_size_, target);
  }
  for (int i = 0; i < this->troop_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->troop_id(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:battleproto.PBDelTroop)
  return target;
}

int PBDelTroop::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:battleproto.PBDelTroop)
  int total_size = 0;

  // repeated uint64 troop_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->troop_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->troop_id(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _troop_id_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBDelTroop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:battleproto.PBDelTroop)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PBDelTroop* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBDelTroop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:battleproto.PBDelTroop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:battleproto.PBDelTroop)
    MergeFrom(*source);
  }
}

void PBDelTroop::MergeFrom(const PBDelTroop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:battleproto.PBDelTroop)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  troop_id_.MergeFrom(from.troop_id_);
}

void PBDelTroop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:battleproto.PBDelTroop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBDelTroop::CopyFrom(const PBDelTroop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battleproto.PBDelTroop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBDelTroop::IsInitialized() const {

  return true;
}

void PBDelTroop::Swap(PBDelTroop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBDelTroop::InternalSwap(PBDelTroop* other) {
  troop_id_.UnsafeArenaSwap(&other->troop_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBDelTroop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBDelTroop_descriptor_;
  metadata.reflection = PBDelTroop_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBDelTroop

// repeated uint64 troop_id = 1;
int PBDelTroop::troop_id_size() const {
  return troop_id_.size();
}
void PBDelTroop::clear_troop_id() {
  troop_id_.Clear();
}
 ::google::protobuf::uint64 PBDelTroop::troop_id(int index) const {
  // @@protoc_insertion_point(field_get:battleproto.PBDelTroop.troop_id)
  return troop_id_.Get(index);
}
 void PBDelTroop::set_troop_id(int index, ::google::protobuf::uint64 value) {
  troop_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:battleproto.PBDelTroop.troop_id)
}
 void PBDelTroop::add_troop_id(::google::protobuf::uint64 value) {
  troop_id_.Add(value);
  // @@protoc_insertion_point(field_add:battleproto.PBDelTroop.troop_id)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PBDelTroop::troop_id() const {
  // @@protoc_insertion_point(field_list:battleproto.PBDelTroop.troop_id)
  return troop_id_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PBDelTroop::mutable_troop_id() {
  // @@protoc_insertion_point(field_mutable_list:battleproto.PBDelTroop.troop_id)
  return &troop_id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace battleproto

// @@protoc_insertion_point(global_scope)
