// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common_enum.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "common_enum.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace CommonEnum {

namespace {

const ::google::protobuf::EnumDescriptor* TalentSeekConditionType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AddExpType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AddResType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ExpendResType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EventLogType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AddHeroSkillType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PromotePropertyType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AddHeroType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* OperateQuestType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AddItemType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ExpendItemType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AddAwardType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PushType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* USER_MAIL_TYPE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* USER_ATTR_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_common_5fenum_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_common_5fenum_2eproto() {
  protobuf_AddDesc_common_5fenum_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "common_enum.proto");
  GOOGLE_CHECK(file != NULL);
  TalentSeekConditionType_descriptor_ = file->enum_type(0);
  AddExpType_descriptor_ = file->enum_type(1);
  AddResType_descriptor_ = file->enum_type(2);
  ExpendResType_descriptor_ = file->enum_type(3);
  EventLogType_descriptor_ = file->enum_type(4);
  AddHeroSkillType_descriptor_ = file->enum_type(5);
  PromotePropertyType_descriptor_ = file->enum_type(6);
  AddHeroType_descriptor_ = file->enum_type(7);
  OperateQuestType_descriptor_ = file->enum_type(8);
  AddItemType_descriptor_ = file->enum_type(9);
  ExpendItemType_descriptor_ = file->enum_type(10);
  AddAwardType_descriptor_ = file->enum_type(11);
  PushType_descriptor_ = file->enum_type(12);
  USER_MAIL_TYPE_descriptor_ = file->enum_type(13);
  USER_ATTR_descriptor_ = file->enum_type(14);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_common_5fenum_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_common_5fenum_2eproto() {
}

void protobuf_AddDesc_common_5fenum_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_common_5fenum_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021common_enum.proto\022\nCommonEnum*\305\003\n\027Tale"
    "ntSeekConditionType\022#\n\037TalentSeekConditi"
    "onType_Invalid\020\000\022\"\n\036TalentSeekConditionT"
    "ype_Huoyue\020\001\022!\n\035TalentSeekConditionType_"
    "Login\020\002\022\'\n#TalentSeekConditionType_CityS"
    "hopBuy\020\003\022%\n!TalentSeekConditionType_Guil"
    "dJoin\020\004\022%\n!TalentSeekConditionType_AddFr"
    "iend\020\005\022&\n\"TalentSeekConditionType_ArenaT"
    "imes\020\006\022&\n\"TalentSeekConditionType_FeastT"
    "imes\020\007\022\'\n#TalentSeekConditionType_CycleB"
    "attle\020\010\022\'\n#TalentSeekConditionType_Guild"
    "Donate\020\t\022%\n!TalentSeekConditionType_Adva"
    "nture\020\n*\212\001\n\nAddExpType\022\026\n\022AddExpType_Inv"
    "alid\020\000\022\033\n\027AddExpType_ReqAdventure\020\001\022\032\n\026A"
    "ddExpType_LevelUpCamp\020\002\022\024\n\020AddExpType_Aw"
    "ard\020\003\022\025\n\021AddExpType_Battle\020\004*\316 \n\nAddResT"
    "ype\022\026\n\022AddResType_Invalid\020\000\022\035\n\031AddResTyp"
    "e_JoinGuildAward\020\001\022\032\n\026AddResType_ForceSe"
    "lect\020\002\022\027\n\023AddResType_NewGuide\020\003\022\032\n\026AddRe"
    "sType_CycleBattle\020\004\022\025\n\021AddResType_NewADV"
    "\020\005\022\024\n\020AddResType_Quest\020\006\022\032\n\026AddResType_T"
    "itleSalary\020\007\022\032\n\026AddResType_GuildSalary\020\010"
    "\022\023\n\017AddResType_Camp\020\t\022\031\n\025AddResType_Occu"
    "pyCity\020\n\022\027\n\023AddResType_GoldShop\020\013\022\027\n\023Add"
    "ResType_CoinShop\020\014\022\030\n\024AddResType_GuildSh"
    "op\020\r\022\030\n\024AddResType_MEDALShop\020\016\022\032\n\026AddRes"
    "Type_ExploitShop\020\017\022\031\n\025AddResType_ScriptS"
    "hop\020\020\022\027\n\023AddResType_SoulShop\020\021\022\037\n\033AddRes"
    "Type_CountryBiography\020\022\022\034\n\030AddResType_He"
    "roBiography\020\023\022\037\n\033AddResType_ResourceSold"
    "iers\020\024\022\034\n\030AddResType_ForceResource\020\025\022\027\n\023"
    "AddResType_WorldWar\020\026\022\033\n\027AddResType_Worl"
    "dWarRank\020\027\022\023\n\017AddResType_Gift\020\030\022\027\n\023AddRe"
    "sType_HeroGift\020\031\022\034\n\030AddResType_HeroChall"
    "enge\020\032\022\025\n\021AddResType_Border\020\033\022\035\n\031AddResT"
    "ype_LegionInvasion\020\034\022\024\n\020AddResType_Arena"
    "\020\035\022\031\n\025AddResType_Arena_Rank\020\036\022\036\n\032AddResT"
    "ype_GuildContribute\020\037\022\034\n\030AddResType_Hero"
    "BreakDown\020 \022\033\n\027AddResType_ScriptSwitch\020!"
    "\022\027\n\023AddResType_Recharge\020\"\022\030\n\024AddResType_"
    "MonthCard\020#\022\027\n\023AddResType_WeekCard\020$\022\034\n\030"
    "AddResType_RechargeAward\020%\022\037\n\033AddResType"
    "_RechargeActivity\020&\022\030\n\024AddResType_Promot"
    "ion\020\'\022\030\n\024AddResType_Fightfund\020(\022\027\n\023AddRe"
    "sType_RaffSoul\020)\022\036\n\032AddResType_TrainingS"
    "oldier\020*\022\030\n\024AddResType_CampLevel\020+\022\025\n\021Ad"
    "dResType_Consum\020,\022\030\n\024AddResType_TotalSig"
    "n\020-\022\032\n\026AddResType_OnlineAward\020.\022\026\n\022AddRe"
    "sType_DaySign\020/\022\032\n\026AddResType_DayActivit"
    "y\0200\022\031\n\025AddResType_HeroDragon\0201\022\027\n\023AddRes"
    "Type_HeroRoad\0202\022\031\n\025AddResType_TalentSeek"
    "\0203\022\026\n\022AddResType_UseItem\0204\022\037\n\033AddResType"
    "_OneRaffWorldFree\0205\022\037\n\033AddResType_OneRaf"
    "fWorldGold\0206\022\033\n\027AddResType_TenRaffWorld\020"
    "7\022\037\n\033AddResType_OneRaffForceFree\0208\022\037\n\033Ad"
    "dResType_OneRaffForceGold\0209\022\033\n\027AddResTyp"
    "e_TenRaffForce\020:\022\021\n\rAddResType_GM\020;\022\032\n\026A"
    "ddResType_ComposeHero\020<\022\027\n\023AddResType_Gi"
    "ftCode\020=\022\035\n\031AddResType_FirstWeekAward\020>\022"
    "\025\n\021AddResType_Xuncha\020\?\022\031\n\025AddResType_Sys"
    "temMail\020@\022\"\n\036AddResType_DailySingleRecha"
    "rge\020A\022 \n\034AddResType_WeekRechargeAward\020B\022"
    "\034\n\030AddResType_TheWorldTrend\020C\022\037\n\033AddResT"
    "ype_GetFirstRecharge\020D\022\037\n\033AddResType_Cle"
    "arCycleBattle\020E\022\032\n\026AddResType_RecruitHer"
    "o\020F\022\026\n\022AddResType_Banquet\020G\022\023\n\017AddResTyp"
    "e_Init\020H\022\036\n\032AddResType_AdvancementRank\020I"
    "\022\034\n\030AddResType_GuildActivity\020J\022\032\n\026AddRes"
    "Type_GuildBattle\020K\022\034\n\030AddResType_KillEne"
    "myMail\020L\022\032\n\026AddResType_WeaponForge\020M\022\026\n\022"
    "AddResType_GiftBag\020N\022 \n\034AddResType_TenRa"
    "ffWorldFirst\020O\022 \n\034AddResType_TenRaffForc"
    "eFirst\020P\022\031\n\025AddResType_OldMenBack\020Q\022\033\n\027A"
    "ddResType_LimitBuyShop\020R\022\030\n\024AddResType_L"
    "imitShop\020S\022\037\n\033AddResType_OneRaffLimitFre"
    "e\020T\022\037\n\033AddResType_OneRaffLimitGold\020U\022 \n\034"
    "AddResType_TenRaffLimitFitst\020V\022\033\n\027AddRes"
    "Type_TenRaffLimit\020W\022\027\n\023AddResType_LuckDr"
    "aw\020X\022\035\n\031AddResType_HeroVsplitDown\020Y\022\037\n\033A"
    "ddResType_LittleWarChapter\020Z\022\"\n\036AddResTy"
    "pe_LittleWarClearPoint\020[\022\036\n\032AddResType_L"
    "ittleWarFinish\020\\\022\027\n\023AddResType_EXCHANGE\020"
    "]\022\032\n\026AddResType_NewGuidHero\020^\022\033\n\027AddResT"
    "ype_NewFightfund\020_\022\023\n\017AddResType_Turn\020`\022"
    "!\n\035AddResType_CumulativeRecharge\020a\022\031\n\025Ad"
    "dResType_DailyScore\020b\022\030\n\024AddResType_Guil"
    "dCity\020c\022 \n\034AddResType_EXCHANGE_Activity\020"
    "d\022\034\n\030AddResType_FeastExtAward\020e\022\037\n\033AddRe"
    "sType_ComposeSkillBook\020f\022\032\n\026AddResType_F"
    "orgetSkill\020g\022\031\n\025AddResType_AgentQuest\020h\022"
    "\032\n\026AddResType_AgentGather\020i\022\032\n\026AddResTyp"
    "e_AgentBorder\020j\022\"\n\036AddResType_BattleForc"
    "eResource\020k\022\034\n\030AddResType_HighFightfund\020"
    "l\022\031\n\025AddResType_NewGiftBag\020m\022$\n AddResTy"
    "pe_NewCumulativeRecharge\020n\022\"\n\036AddResType"
    "_NewCumulativeRaffle\020o\022\"\n\036AddResType_New"
    "CumulativeConsum\020p\022\"\n\036AddResType_NewCumu"
    "lativeOnline\020q\022$\n AddResType_NewCumulati"
    "veTraining\020r\022\026\n\022AddResType_NewFund\020s\022\032\n\026"
    "AddResType_NewExchange\020t\022\035\n\031AddResType_N"
    "ewScoreBorder\020u\022\035\n\031AddResType_NewScoreGa"
    "ther\020v\022\034\n\030AddResType_NewScoreEquip\020w\022\037\n\033"
    "AddResType_NewScoreWorldWar\020x\022\034\n\030AddResT"
    "ype_NewBattlePass\020y\022\026\n\022AddResType_NewSho"
    "p\020z\022\026\n\022AddResType_NewSign\020{\022\035\n\031AddResTyp"
    "e_NewPushGiftBag\020|\022\030\n\024AddResType_NewOldM"
    "en\020}\022\026\n\022AddResType_NewTurn\020~\022\026\n\022AddResTy"
    "pe_NewDraw\020\177\022(\n#AddResType_NewCumulative"
    "DayRecharge\020\200\001\022\027\n\022AddResType_NewCard\020\201\001\022"
    "\027\n\022AddResType_NewRank\020\202\001\022\031\n\024AddResType_N"
    "ewBaseLv\020\203\001\022\032\n\025AddResType_NewGuildLv\020\204\001\022"
    "\037\n\032AddResType_NewCRecharge4s1\020\205\001\022\037\n\032AddR"
    "esType_NewLimitGiftBag\020\206\001\022 \n\033AddResType_"
    "NewFirstRecharge\020\207\001\022\"\n\035AddResType_NewFir"
    "stOccupyCity\020\210\001\022(\n#AddResType_NewCumulat"
    "iveAllGoalType\020\211\001\022$\n\037AddResType_UserGoal"
    "QuestChapter\020\212\001\022\035\n\030AddResType_UserGoalQu"
    "est\020\213\001\022\027\n\022AddResType_NewWish\020\214\001\022\027\n\022AddRe"
    "sType_PayBack\020\215\001\022\037\n\032AddResType_WeaponBre"
    "akDown\020\216\001\022\"\n\035AddResType_CompoundInvitati"
    "on\020\217\001*\374\037\n\rExpendResType\022\031\n\025ExpendResType"
    "_Invalid\020\000\022\031\n\025ExpendResType_DoQuest\020\001\022\036\n"
    "\032ExpendResType_RefreshQuest\020\002\022\036\n\032ExpendR"
    "esType_ReqBattleEnd\020\003\022\035\n\031ExpendResType_R"
    "ecruitHero\020\004\022$\n ExpendResType_ClearCampB"
    "arrackCD\020\005\022$\n ExpendResType_ClearDeputeQ"
    "uestCD\020\006\022 \n\034ExpendResType_ChangeCampCity"
    "\020\007\022\030\n\024ExpendResType_SignIn\020\010\022\"\n\036ExpendRe"
    "sType_ActivityReSignIn\020\t\022\035\n\031ExpendResTyp"
    "e_WeaponForge\020\n\022\"\n\036ExpendResType_WeaponS"
    "trengThen\020\013\022\035\n\031ExpendResType_WeaponMerge"
    "\020\014\022\035\n\031ExpendResType_WeaponReset\020\r\022\034\n\030Exp"
    "endResType_EvolveHero\020\016\022\035\n\031ExpendResType"
    "_LevelUpCamp\020\017\022\026\n\022ExpendResType_Shop\020\020\022\035"
    "\n\031ExpendResType_RefreshShop\020\021\022!\n\035ExpendR"
    "esType_GuildContribute\020\022\022%\n!ExpendResTyp"
    "e_GuildTechAccelerate\020\023\022#\n\037ExpendResType"
    "_QuestHeroReduceCD\020\024\022$\n ExpendResType_Ne"
    "wADVHeroReduceCD\020\025\022\037\n\033ExpendResType_Aren"
    "aBuyTimes\020\026\022\035\n\031ExpendResType_CreateGuild"
    "\020\027\022!\n\035ExpendResType_RecruitSoldiers\020\030\022\035\n"
    "\031ExpendResType_LevelUpHero\020\031\022&\n\"ExpendRe"
    "sType_RefreshHeroChallenge\020\032\022\032\n\026ExpendRe"
    "sType_HeroGift\020\033\022\'\n#ExpendResType_LevelU"
    "pCampAccelerate\020\034\022$\n ExpendResType_CampF"
    "armAccelerate\020\035\022&\n\"ExpendResType_CampMar"
    "ketAccelerate\020\036\022\'\n#ExpendResType_CampBar"
    "rackAccelerate\020\037\022&\n\"ExpendResType_CampAr"
    "moryAccelerate\020 \022\036\n\032ExpendResType_CampFa"
    "rmFull\020!\022 \n\034ExpendResType_CampMarketFull"
    "\020\"\022\'\n#ExpendResType_AcceptGovernmentQues"
    "t\020#\022%\n!ExpendResType_AcceptMilitaryQuest"
    "\020$\022\"\n\036ExpendResType_ResourceSoldiers\020%\022\037"
    "\n\033ExpendResType_HeroChallenge\020&\022\037\n\033Expen"
    "dResType_CreateBanquet\020\'\022#\n\037ExpendResTyp"
    "e_BanquetInvitation\020(\022\035\n\031ExpendResType_B"
    "anquetHero\020)\022\035\n\031ExpendResType_DeputeQues"
    "t\020*\022\"\n\036ExpendResType_QuestDoAndSubmit\020+\022"
    "\032\n\026ExpendResType_WorldWar\020,\022\"\n\036ExpendRes"
    "Type_AttackAccelerate\020-\022#\n\037ExpendResType"
    "_HeroChallengeProp\020.\022)\n%ExpendResType_Ge"
    "neralSoulExchangeHero\020/\022\"\n\036ExpendResType"
    "_GuildTechLevelUp\0200\022\036\n\032ExpendResType_Exc"
    "hangeHero\0201\022 \n\034ExpendResType_PlayerClick"
    "Use\0202\022\"\n\036ExpendResType_OneRaffWorldGold\020"
    "3\022\036\n\032ExpendResType_TenRaffWorld\0204\022\"\n\036Exp"
    "endResType_OneRaffForceGold\0205\022\036\n\032ExpendR"
    "esType_TenRaffForce\0206\022\030\n\024ExpendResType_X"
    "uncha\0207\022\037\n\033ExpendResType_LearnBuyTimes\0208"
    "\022\024\n\020ExpendResType_GM\0209\022\031\n\025ExpendResType_"
    "GiftBag\020:\022\"\n\036ExpendResType_OneRaffLimitG"
    "old\020;\022\"\n\036ExpendResType_TenRaffLimitGold\020"
    "<\022\"\n\036ExpendResType_WorldWarSoldiers\020=\022$\n"
    " ExpendResType_WorldWarProvisions\020>\022 \n\034E"
    "xpendResType_WorldWarAttack\020\?\022!\n\035ExpendR"
    "esType_BuyLittleWarNum\020@\022\037\n\033ExpendResTyp"
    "e_HeroBreakDown\020A\022 \n\034ExpendResType_HeroV"
    "splitDown\020B\022\032\n\026ExpendResType_EXCHANGE\020C\022"
    "$\n ExpendResType_ClearNewAdvEventCD\020D\022\"\n"
    "\036ExpendResType_TroopsSupplement\020E\022\026\n\022Exp"
    "endResType_Turn\020F\022\033\n\027ExpendResType_Stand"
    "Hero\020G\022&\n\"ExpendResType_BarrackSoldierUn"
    "lock\020H\022\037\n\033ExpendResType_StandHeroTime\020I\022"
    "#\n\037ExpendResType_EXCHANGE_Activity\020J\022\"\n\036"
    "ExpendResType_ComposeSkillBook\020K\022\035\n\031Expe"
    "ndResType_ForgetSkill\020L\022\034\n\030ExpendResType"
    "_AgentQuest\020M\022\035\n\031ExpendResType_AgentGath"
    "er\020N\022\035\n\031ExpendResType_AgentBorder\020O\022\034\n\030E"
    "xpendResType_NewGiftBag\020P\022\'\n#ExpendResTy"
    "pe_NewCumulativeRecharge\020Q\022%\n!ExpendResT"
    "ype_NewCumulativeRaffle\020R\022%\n!ExpendResTy"
    "pe_NewCumulativeConsum\020S\022%\n!ExpendResTyp"
    "e_NewCumulativeOnline\020T\022\'\n#ExpendResType"
    "_NewCumulativeTraining\020U\022\031\n\025ExpendResTyp"
    "e_NewFund\020V\022\035\n\031ExpendResType_NewExchange"
    "\020W\022\032\n\026ExpendResType_WoodFull\020X\022\033\n\027Expend"
    "ResType_StoneFull\020Y\022\032\n\026ExpendResType_Iro"
    "nFull\020Z\022\032\n\026ExpendResType_CampSwap\020[\022(\n$E"
    "xpendResType_CampBuildingUpgradePos\020\\\022\026\n"
    "\022ExpendResType_Swap\020]\022 \n\034ExpendResType_N"
    "ewScoreBorder\020^\022 \n\034ExpendResType_NewScor"
    "eGather\020_\022\037\n\033ExpendResType_NewScoreEquip"
    "\020`\022\"\n\036ExpendResType_NewScoreWorldWar\020a\022\037"
    "\n\033ExpendResType_NewBattlePass\020b\022\031\n\025Expen"
    "dResType_NewShop\020c\022\031\n\025ExpendResType_NewS"
    "ign\020d\022 \n\034ExpendResType_NewPushGiftBag\020e\022"
    "\033\n\027ExpendResType_NewOldMen\020f\022\031\n\025ExpendRe"
    "sType_NewTurn\020g\022\031\n\025ExpendResType_NewDraw"
    "\020h\022*\n&ExpendResType_NewCumulativeDayRech"
    "arge\020i\022\031\n\025ExpendResType_NewCard\020j\022\031\n\025Exp"
    "endResType_NewRank\020k\022\033\n\027ExpendResType_Ne"
    "wBaseLv\020l\022\034\n\030ExpendResType_NewGuildLv\020m\022"
    "!\n\035ExpendResType_NewCRecharge4s1\020n\022!\n\035Ex"
    "pendResType_NewLimitGiftBag\020o\022\"\n\036ExpendR"
    "esType_NewFirstRecharge\020p\022\036\n\032ExpendResTy"
    "pe_ClearTeachCd\020q\022\035\n\031ExpendResType_Inher"
    "itHero\020r\022$\n ExpendResType_NewFirstOccupy"
    "City\020s\022*\n&ExpendResType_NewCumulativeAll"
    "GoalType\020t\022&\n\"ExpendResType_LimitActivit"
    "yBuyAttr\020u\022\034\n\030ExpendResType_BattleDrum\020v"
    "\022\031\n\025ExpendResType_NewWish\020w\022!\n\035ExpendRes"
    "Type_WeaponBreakDown\020x\022$\n ExpendResType_"
    "CompoundInvitation\020y*\207\005\n\014EventLogType\022\030\n"
    "\024EventLogType_Invalid\020\000\022 \n\034EventLogType_"
    "ResourceSoldier\020\001\022\035\n\031EventLogType_Countr"
    "yQuest\020\002\022\027\n\023EventLogType_NewAdv\020\003\022\033\n\027Eve"
    "ntLogType_CountryBio\020\004\022\030\n\024EventLogType_H"
    "eroBio\020\005\022\034\n\030EventLogType_CycleBattle\020\006\022\026"
    "\n\022EventLogType_Arena\020\007\022\036\n\032EventLogType_F"
    "orceResource\020\010\022\027\n\023EventLogType_Border\020\t\022"
    "\031\n\025EventLogType_WorldWar\020\n\022\036\n\032EventLogTy"
    "pe_HeroChallenge\020\013\022\035\n\031EventLogType_Dispa"
    "tchTeam\020\014\022\033\n\027EventLogType_CycleClear\020\r\022\031"
    "\n\025EventLogType_GiftCode\020\016\022 \n\034EventLogTyp"
    "e_PromoteProperty\020\017\022\027\n\023EventLogType_UpCa"
    "mp\020\020\022\031\n\025EventLogType_JoinGuid\020\021\022\032\n\026Event"
    "LogType_LittleWar\020\022\022\035\n\031EventLogType_Hero"
    "AddSkill\020\023\022\037\n\033EventLogType_LegionInvasio"
    "n\020\024\022\031\n\025EventLogType_NewGuild\020\025*\275\001\n\020AddHe"
    "roSkillType\022\034\n\030AddHeroSkillType_Invalid\020"
    "\000\022\"\n\036AddHeroSkillType_ItemSkillBook\020\001\022\037\n"
    "\033AddHeroSkillType_StudySkill\020\002\022\037\n\033AddHer"
    "oSkillType_EvolveHero\020\003\022%\n!AddHeroSkillT"
    "ype_ItemSkillExpBook\020\004*t\n\023PromotePropert"
    "yType\022\037\n\033PromotePropertyType_Invalid\020\000\022\035"
    "\n\031PromotePropertyType_Study\020\001\022\035\n\031Promote"
    "PropertyType_Quest\020\002*\201\002\n\013AddHeroType\022\027\n\023"
    "AddHeroType_Invalid\020\000\022\022\n\016AddHeroType_Gm\020"
    "\001\022\023\n\017AddHeroType_Buy\020\002\022\027\n\023AddHeroType_Re"
    "cruit\020\003\022\026\n\022AddHeroType_Raffle\020\004\022\027\n\023AddHe"
    "roType_Banquet\020\005\022\032\n\026AddHeroType_InitSele"
    "ct\020\006\022\033\n\027AddHeroType_GeneralSoul\020\007\022\025\n\021Add"
    "HeroType_Award\020\010\022\026\n\022AddHeroType_Puzzle\020\t"
    "*\243\001\n\020OperateQuestType\022\034\n\030OperateQuestTyp"
    "e_Invalid\020\000\022\033\n\027OperateQuestType_Accept\020\001"
    "\022\033\n\027OperateQuestType_Submit\020\002\022\033\n\027Operate"
    "QuestType_Depute\020\003\022\032\n\026OperateQuestType_S"
    "hare\020\004*\333\001\n\013AddItemType\022\027\n\023AddItemType_In"
    "valid\020\000\022\024\n\020AddItemType_Init\020\001\022\023\n\017AddItem"
    "Type_Buy\020\002\022\037\n\033AddItemType_AdvancementRan"
    "k\020\003\022\022\n\016AddItemType_Gm\020\004\022\025\n\021AddItemType_A"
    "ward\020\005\022\035\n\031AddItemType_HeroSkillBook\020\006\022\035\n"
    "\031AddItemType_HeroBreakDown\020\007*\277\006\n\016ExpendI"
    "temType\022\032\n\026ExpendItemType_Invalid\020\000\022!\n\035E"
    "xpendItemType_WorldWarAttack\020\001\022#\n\037Expend"
    "ItemType_QuestDoAndSubmit\020\002\022\036\n\032ExpendIte"
    "mType_AcceptQuest\020\003\022\036\n\032ExpendItemType_De"
    "puteQuest\020\004\022!\n\035ExpendItemType_ReqHeroUse"
    "Item\020\005\022\"\n\036ExpendItemType_ReqGiveHeroGift"
    "\020\006\022!\n\035ExpendItemType_ReqRefreshShop\020\007\022\035\n"
    "\031ExpendItemType_ReqUseItem\020\010\022 \n\034ExpendIt"
    "emType_ReqEvolveHero\020\t\022$\n ExpendItemType"
    "_ReqCampFullOutput\020\n\022!\n\035ExpendItemType_R"
    "eqBanquetHero\020\013\022#\n\037ExpendItemType_ReqCre"
    "ateBanquet\020\014\022$\n ExpendItemType_ReqWriteS"
    "killBook\020\r\022(\n$ExpendItemType_ReqAddWorld"
    "WarPrepare\020\016\022\036\n\032ExpendItemType_CreateGui"
    "ld\020\017\022#\n\037ExpendItemType_ResourcesSoldier\020"
    "\020\022\035\n\031ExpendItemType_EvolveHero\020\021\022\031\n\025Expe"
    "ndItemType_NEWADV\020\022\022\034\n\030ExpendItemType_Ch"
    "allenge\020\023\022\036\n\032ExpendItemType_WeaponForge\020"
    "\034\022#\n\037ExpendItemType_WeaponStrengThen\020\035\022\036"
    "\n\032ExpendItemType_WeaponMerge\020\036\022\036\n\032Expend"
    "ItemType_WeaponReset\020\037*\210\010\n\014AddAwardType\022"
    "\030\n\024AddAwardType_Invalid\020\000\022\031\n\025AddAwardTyp"
    "e_GiftCode\020\001\022\034\n\030AddAwardType_SubmitQuest"
    "\020\002\022\037\n\033AddAwardType_AdvEventBattle\020\003\022&\n\"A"
    "ddAwardType_ReqAdvantureEventDone\020\004\022 \n\034A"
    "ddAwardType_ReqGetMailAward\020\005\022\037\n\033AddAwar"
    "dType_FirstWeekAward\020\006\022\033\n\027AddAwardType_U"
    "seBoxItem\020\007\022\035\n\031AddAwardType_ReqEndBattle"
    "\020\010\022\034\n\030AddAwardType_BioStepDone\020\t\022\033\n\027AddA"
    "wardType_FinishGoal\020\n\022!\n\035AddAwardType_Ge"
    "tFirstRecharge\020\013\022\034\n\030AddAwardType_VSBattl"
    "eEnd\020\014\022\033\n\027AddAwardType_ArenaScore\020\r\022\034\n\030A"
    "ddAwardType_HuoYueAward\020\016\022\036\n\032AddAwardTyp"
    "e_RechargeDaily\020\017\022\033\n\027AddAwardType_Talent"
    "Seek\020\020\022$\n AddAwardType_DailySingleRechar"
    "ge\020\021\022\036\n\032AddAwardType_TotalRecharge\020\022\022\"\n\036"
    "AddAwardType_SingleMaxRecharge\020\023\022\031\n\025AddA"
    "wardType_Activity\020\024\022\034\n\030AddAwardType_Guil"
    "dSalary\020\025\022\"\n\036AddAwardType_WeekRechargeAw"
    "ard\020\026\022\027\n\023AddAwardType_Xuncha\020\027\022\027\n\023AddAwa"
    "rdType_SignIn\020\030\022!\n\035AddAwardType_SignInTo"
    "talAward\020\031\022!\n\035AddAwardType_ClearCycleBat"
    "tle\020\032\022\036\n\032AddAwardType_TheWorldTrend\020\033\022\036\n"
    "\032AddAwardType_HeroChallenge\020\034\022\027\n\023AddAwar"
    "dType_Puzzle\020\035\022\031\n\025AddAwardType_SevenDay\020"
    "\036\022\033\n\027AddAwardType_PlayChange\020\037\022\031\n\025AddAwa"
    "rdType_LuckDraw\020 *\301\002\n\010PushType\022\024\n\020PushTy"
    "pe_Invalid\020\000\022\030\n\024PushType_NewAdvTimes\020\001\022\026"
    "\n\022PushType_AwardMail\020\002\022\025\n\021PushType_FreeR"
    "aff\020\003\022\037\n\033PushType_CollectionResource\020\004\022\026"
    "\n\022PushType_ArenaRank\020\005\022\025\n\021PushType_World"
    "War\020\006\022\022\n\016PushType_Guild\020\007\022\030\n\024PushType_Pr"
    "ivateChat\020\010\022\021\n\rPushType_Camp\020\t\022\032\n\026PushTy"
    "pe_LimitActivity\020\n\022\021\n\rPushType_0To8\020\013\022\026\n"
    "\022PushType_PushOnOff\020\014*Q\n\016USER_MAIL_TYPE\022"
    "\025\n\021MAIL_TYPE_INVALID\020\000\022\022\n\016MAIL_TYPE_MAIL"
    "\020\001\022\024\n\020MAIL_TYPE_BATTLE\020\002*\371b\n\tUSER_ATTR\022\010"
    "\n\004INIT\020\000\022\026\n\021SVR_DAY_START_KEY\020\220N\022\034\n\027SVR_"
    "DAY_ARENA_TIMES_KEY\020\221N\022\034\n\027SVR_DAY_ARENA_"
    "SCORE_KEY\020\222N\022 \n\033SVR_DAY_ARENA_UPDATE_CD_"
    "KEY\020\223N\022 \n\033SVR_DAY_ARENA_SCORE_AWARD_S\020\224N"
    "\022 \n\033SVR_DAY_ARENA_SCORE_AWARD_E\020\235N\022 \n\033SV"
    "R_DAY_HUO_YUE_DAILY_TODAY\020\236N\022 \n\033SVR_DAY_"
    "HUO_YUE_DAILY_START\020\237N\022\036\n\031SVR_DAY_HUO_YU"
    "E_DAILY_END\020\275N\022&\n!SVR_DAY_HUO_YUE_AWARD_"
    "TAKEN_START\020\276N\022$\n\037SVR_DAY_HUO_YUE_AWARD_"
    "TAKEN_END\020\302N\022\035\n\030SVR_DAY_RECHARGE_BOX_KEY"
    "\020\303N\022+\n&SVR_DAY_MAX_SIGNLE_RECHARGE_RECOR"
    "D_KEY\020\304N\022 \n\033SVR_DAY_REWARD_QUEST_NUMBER\020"
    "\305N\022\035\n\030SVR_DAY_CHANGE_CAMP_CITY\020\306N\022\033\n\026SVR"
    "_DAY_TITLE_RANK_VAL\020\307N\022\030\n\023SVR_DAY_LEARN_"
    "TIMES\020\310N\022\036\n\031SVR_DAY_RAFFLE_HERO_TIMES\020\311N"
    "\022!\n\034SVR_DAY_TRAINING_SOLDIER_NUM\020\312N\022#\n\036S"
    "VR_DAY_SENSITIVE_WORD_BEATADD\020\313N\022$\n\037SVR_"
    "DAY_SENSITIVE_WORD_QUESTADD\020\314N\022\"\n\035SVR_DA"
    "Y_RECHARGE_BOX_MINI_KEY\020\315N\022&\n!SVR_DAY_HU"
    "O_YUE_DAILY_AWARD_TAKEN\020\316N\022\035\n\030SVR_DAY_ON"
    "LINE_TIME_TIME\020\320N\022%\n SVR_DAY_CHALLENGE_L"
    "OCK_TIMES_KEY\020\325N\022 \n\033SVR_DAY_CHALLENGE_TI"
    "MES_KEY\020\326N\022$\n\037SVR_DAY_BUY_CHALLENGE_TIME"
    "S_KEY\020\327N\022\035\n\030SVR_DAY_LUCK_DRAW_CONSUM\020\330N\022"
    "\'\n\"SVR_DAY_MAX_SIGNLE_RECHARGE_RECORD\020\331N"
    "\022-\n(SVR_DAY_MAX_SIGNLE_RECHARGE_RECORD_A"
    "WARD\020\332N\022 \n\033SVR_DAY_ACTIVITY_TURN_1_USE\020\333"
    "N\022 \n\033SVR_DAY_ACTIVITY_TURN_2_USE\020\334N\022 \n\033S"
    "VR_DAY_ACTIVITY_TURN_3_USE\020\335N\022$\n\037SVR_DAY"
    "_DAILY_SCORE_BORDER_KILL\020\336N\022\'\n\"SVR_DAY_D"
    "AILY_SCORE_FORCE_RESOURCE\020\337N\022\037\n\032SVR_DAY_"
    "DAILY_SCORE_WEAPON\020\340N\022\"\n\035SVR_DAY_DAILY_S"
    "CORE_WORLD_WAR\020\341N\022\"\n\035SVR_DAY_HUO_YUE_DAI"
    "LY_START_1\020\352N\022 \n\033SVR_DAY_HUO_YUE_DAILY_E"
    "ND_1\020\363N\022\037\n\032SVR_DAY_BUY_ATTR_NUM_START\020\364N"
    "\022\035\n\030SVR_DAY_BUY_ATTR_NUM_END\020\207O\022\034\n\027SVR_D"
    "AY_BUY_WOOD_AMOUNT\020\210O\022\035\n\030SVR_DAY_BUY_STO"
    "NE_AMOUNT\020\211O\022\034\n\027SVR_DAY_BUY_IRON_AMOUNT\020"
    "\212O\022\"\n\035SVR_DAY_BUY_PROVISIONS_AMOUNT\020\213O\022\035"
    "\n\030SVR_DAY_SELL_WOOD_AMOUNT\020\214O\022\036\n\031SVR_DAY"
    "_SELL_STONE_AMOUNT\020\215O\022\035\n\030SVR_DAY_SELL_IR"
    "ON_AMOUNT\020\216O\022#\n\036SVR_DAY_SELL_PROVISIONS_"
    "AMOUNT\020\217O\022 \n\033SVR_DAY_REQUST_FRIEND_COUNT"
    "\020\220O\022\030\n\023SVR_DAY_COME_AMOUNT\020\221O\022\033\n\026SVR_DAY"
    "_RECHARGE_COUNT\020\222O\022 \n\033SVR_DAY_SINGLE_REC"
    "HARGE_MAX\020\223O\022 \n\033SVR_DAY_CLEAR_TEACHER_TI"
    "MES\020\245O\022%\n SVR_DAY_GET_GIFT_TIMES_BEGIN_K"
    "EY\020\204R\022#\n\036SVR_DAY_GET_GIFT_TIMES_END_KEY\020"
    "\367U\022\"\n\035SVR_DAY_LIMIT_BATTLEFIELD_KEY\020\334V\022$"
    "\n\037SVR_DAY_DAY_BUY_BATTLEFIELD_KEY\020\336V\022%\n "
    "SVR_DAY_LIMIT_TRIALOFTACTICS_KEY\020\337V\022\'\n\"S"
    "VR_DAY_DAY_BUY_TRIALOFTACTICS_KEY\020\340V\022\036\n\031"
    "SVR_DAY_LIMIT_ADVISER_KEY\020\341V\022 \n\033SVR_DAY_"
    "DAY_BUY_ADVISER_KEY\020\342V\022\035\n\030SVR_DAY_LIMIT_"
    "JGHERO_KEY\020\343V\022\037\n\032SVR_DAY_DAY_BUY_JGHERO_"
    "KEY\020\344V\022\025\n\017SVR_DAY_END_KEY\020\237\234\001\022\027\n\021CLI_DAY"
    "_START_KEY\020\240\234\001\022)\n#CLI_DAY_SHOP_REFRESH_T"
    "IMES_STAR_KEY\020\241\234\001\022(\n\"CLI_DAY_SHOP_REFRES"
    "H_TIMES_END_KEY\020\204\235\001\022(\n\"CLI_DAY_HERO_CHAL"
    "LENGE_REFRESH_KEY\020\205\235\001\022\025\n\017CLI_DAY_END_KEY"
    "\020\257\352\001\022\026\n\020PM_DAY_START_KEY\020\260\352\001\022\024\n\016PM_DAY_E"
    "ND_KEY\020\277\270\002\022\030\n\022SVR_WEEK_START_KEY\020\300\270\002\022 \n\032"
    "SVR_WEEK_RECHARGE_BOX_DAYS\020\301\270\002\022!\n\033SVR_WE"
    "EK_RECHARGE_BOX_TAKEN\020\302\270\002\022%\n\037SVR_WEEK_RE"
    "CHARGE_BOX_MINI_DAYS\020\303\270\002\022&\n SVR_WEEK_REC"
    "HARGE_BOX_MINI_TAKEN\020\304\270\002\022\026\n\020SVR_WEEK_END"
    "_KEY\020\317\206\003\022\030\n\022CLI_WEEK_START_KEY\020\320\206\003\022\026\n\020CL"
    "I_WEEK_END_KEY\020\337\324\003\022\027\n\021PM_WEEK_START_KEY\020"
    "\340\324\003\022\025\n\017PM_WEEK_END_KEY\020\357\242\004\022\031\n\023SVR_MONTH_"
    "START_KEY\020\360\242\004\022\027\n\021SVR_MONTH_END_KEY\020\377\360\004\022\031"
    "\n\023CLI_MONTH_START_KEY\020\200\361\004\022\027\n\021CLI_MONTH_E"
    "ND_KEY\020\217\277\005\022\030\n\022PM_MONTH_START_KEY\020\220\277\005\022\026\n\020"
    "PM_MONTH_END_KEY\020\237\215\006\022\033\n\025SVR_FOREVER_STAR"
    "T_KEY\020\240\215\006\022$\n\036SVR_FOREVER_ARENA_TOP_RANK_"
    "KEY\020\241\215\006\022)\n#SVR_FOREVER_ARENA_TOP_RANK_TI"
    "ME_KEY\020\242\215\006\022!\n\033SVR_FOREVER_ARENA_PVP_MEDA"
    "L\020\243\215\006\022\"\n\034SVR_FOREVER_GUILD_CONTRIBUTE\020\244\215"
    "\006\022!\n\033SVR_FOREVER_HUO_YUE_CURRENT\020\245\215\006\022 \n\032"
    "SVR_FOREVER_RECHARGE_TOTAL\020\246\215\006\022-\n\'SVR_FO"
    "REVER_RECHARGE_TOTAL_AWARD_RECORD\020\247\215\006\022\031\n"
    "\023SVR_FOREVER_SOCIATY\020\250\215\006\022$\n\036SVR_FOREVER_"
    "DISCOUNT_EXPIRE_TS\020\251\215\006\022,\n&SVR_FOREVER_LA"
    "ST_GET_DISCOUNT_AWARD_TS\020\252\215\006\022&\n SVR_FORE"
    "VER_DISCOUNT_DAILY_AWARD\020\253\215\006\022\"\n\034SVR_FORE"
    "VER_TOTAL_LOGIN_DAYS\020\254\215\006\022#\n\035SVR_FOREVER_"
    "LAST_OFFLINE_TIME\020\255\215\006\022\'\n!SVR_FOREVER_FIR"
    "ST_RECHARGE_REWARD\020\256\215\006\022\"\n\034SVR_FOREVER_FI"
    "RST_WEEK_AWARD\020\257\215\006\022\031\n\023SVR_FOREVER_SELHER"
    "O\020\260\215\006\022\032\n\024SVR_FOREVER_RAFF_DAY\020\261\215\006\022 \n\032SVR"
    "_FOREVER_BANNED_TO_CHAT\020\262\215\006\022!\n\033SVR_FOREV"
    "ER_BANNED_TO_LOGIN\020\263\215\006\022)\n#SVR_FOREVER_RE"
    "SOURCES_SOLDIER_LEVEL\020\264\215\006\022%\n\037SVR_FOREVER"
    "_SINGLE_RECHARGE_MAX\020\265\215\006\0222\n,SVR_FOREVER_"
    "SIGNLE_RECHARGE_MAX_AWARD_RECORD\020\266\215\006\022\036\n\030"
    "SVR_FOREVER_ARENA_PLAYER\020\267\215\006\022\033\n\025SVR_FORE"
    "VER_SOULSTONE\020\270\215\006\022#\n\035SVR_FOREVER_USER_FI"
    "GHT_RECORD\020\271\215\006\022-\n\'SVR_FOREVER_RECHARGE_T"
    "OTAL_WITHOUT_CARD\020\272\215\006\022,\n&SVR_FOREVER_USE"
    "R_LAST_JOIN_WORLDWAR_ID\020\273\215\006\022$\n\036SVR_FOREV"
    "ER_SIGN_IN_REMEDY_CNT\020\274\215\006\022&\n SVR_FOREVER"
    "_SIGN_IN_AWARD_RECORD\020\275\215\006\022\037\n\031SVR_FOREVER"
    "_AUTO_WORK_KEY\020\276\215\006\022*\n$SVR_FOREVER_DISCOU"
    "NT_MONTH_EXPIRE_TS\020\277\215\006\0222\n,SVR_FOREVER_LA"
    "ST_GET_DISCOUNT_MONTH_AWARD_TS\020\300\215\006\022,\n&SV"
    "R_FOREVER_DISCOUNT_MONTH_DAILY_AWARD\020\301\215\006"
    "\022\'\n!SVR_FOREVER_SENSITIVE_WORD_CREDIT\020\302\215"
    "\006\022)\n#SVR_FOREVER_SENSITIVE_WORD_INITFLAG"
    "\020\303\215\006\022/\n)SVR_FOREVER_SENSITIVE_WORD_FORBI"
    "D_ENDTIME\020\304\215\006\022\'\n!SVR_DAY_SENSITIVE_WORD_"
    "ONLINETIME\020\305\215\006\022\"\n\034SVR_FOREVER_KILL_ENEMY"
    "_SCORE\020\306\215\006\022\034\n\026SVR_FOREVER_CONSUM_NUM\020\307\215\006"
    "\022\035\n\027SVR_FOREVER_GUILD_LEVEL\020\310\215\006\022 \n\032SVR_F"
    "OREVER_ARENA_RANK_KEY\020\311\215\006\022\037\n\031SVR_FOREVER"
    "_SERVER_ID_KEY\020\312\215\006\022\"\n\034SVR_FOREVER_REFLUS"
    "T_DAY_TIME\020\313\215\006\022\036\n\030SVR_FOREVER_RANK_LVL_K"
    "EY\020\314\215\006\022!\n\033SVR_FOREVER_SCRIPT_TEAM_KEY\020\322\215"
    "\006\022)\n#SVR_FOREVER_OCCUPY_CITY_AWARD_BEGIN"
    "\020\300\254\006\022\'\n!SVR_FOREVER_OCCUPY_CITY_AWARD_EN"
    "D\020\243\255\006\022\037\n\031SVR_FOREVER_SCRIPT_ID_KEY\020\310\323\006\022%"
    "\n\037SVR_FOREVER_SCRIPT_TWO_PLAY_KEY\020\311\323\006\022\'\n"
    "!SVR_FOREVER_SCRIPT_TWO_SOURCE_KEY\020\312\323\006\022\'"
    "\n!SVR_FOREVER_SCRIPT_THR_SOURCE_KEY\020\313\323\006\022"
    "\'\n!SVR_FOREVER_SCRIPT_DATA_CLEAN_KEY\020\314\323\006"
    "\022\'\n!SVR_FOREVER_SCRIPT_ITEM_CLEAN_KEY\020\315\323"
    "\006\022#\n\035SVR_FOREVER_SET_PHONE_NUM_KEY\020\316\323\006\022\037"
    "\n\031SVR_FOREVER_SKILL_VERSION\020\317\323\006\022%\n\037SVR_F"
    "OREVER_SKILL_URGENT_CHANGE\020\320\323\006\022\'\n!SVR_FO"
    "REVER_RECHARGE_NEW_ACTIVITY\020\321\323\006\022.\n(SVR_F"
    "OREVER_RECHARGE_NEW_ACTIVITY_RECORD\020\322\323\006\022"
    "!\n\033SVR_FOREVER_RECHARGE_RECORD\020\323\323\006\022&\n SV"
    "R_FOREVER_SKILL_EXP_COMPENSATE\020\324\323\006\022\034\n\026SV"
    "R_FOREVER_SKILL_SORT\020\325\323\006\022\'\n!SVR_FOREVER_"
    "SKILL_EXP_COMPENSATE1\020\326\323\006\022!\n\033SVR_FOREVER"
    "_WORK_AGENT_HERO\020\327\323\006\022)\n#SVR_FOREVER_NEWA"
    "CTIVITY_REFRESHTIME\020\330\323\006\022-\n\'SVR_FOREVER_C"
    "AMP_BUILDING_UPGRADE_POS_4\020\331\323\006\022-\n\'SVR_FO"
    "REVER_CAMP_BUILDING_UPGRADE_POS_3\020\332\323\006\022 \n"
    "\032SVR_FOREVER_NEW_GUIDE_TYPE\020\254\324\006\022#\n\035SVR_F"
    "OREVER_CHANGE_SERVER_KEY\020\255\324\006\022&\n SVR_FORE"
    "VER_SERVER_ON_CHANGE_KEY\020\256\324\006\022 \n\032SVR_FORE"
    "VER_ITEM_CLEAR_KEY\020\257\324\006\022)\n#SVR_FOREVER_BA"
    "TTLEFIELD_CURRENT_KEY\020\260\324\006\022,\n&SVR_FOREVER"
    "_TRIALOFTACTICS_CURRENT_KEY\020\261\324\006\022%\n\037SVR_F"
    "OREVER_ADVISER_CURRENT_KEY\020\262\324\006\022$\n\036SVR_FO"
    "REVER_JGHERO_CURRENT_KEY\020\263\324\006\022\"\n\034SVR_FORE"
    "VER_GUILD_WORLD_RANK\020\220\325\006\022\"\n\034SVR_FOREVER_"
    "GUILD_FORCE_RANK\020\221\325\006\022\034\n\026SVR_FOREVER_PLAY"
    "_FORCE\020\222\325\006\022,\n&SVR_FOREVER_LAST_PLAY_GUIL"
    "D_WORLD_RANK\020\223\325\006\022,\n&SVR_FOREVER_LAST_PLA"
    "Y_GUILD_FORCE_RANK\020\224\325\006\022!\n\033SVR_FOREVER_LA"
    "ST_PLAY_FORCE\020\225\325\006\022(\n\"SVR_FOREVER_MERGE_S"
    "ERVER_BEGIN_KEY\020\274\327\006\022&\n SVR_FOREVER_MERGE"
    "_SERVER_END_KEY\020\305\327\006\022\031\n\023SVR_FOREVER_END_K"
    "EY\020\257\333\006\022\033\n\025CLI_FOREVER_START_KEY\020\260\333\006\022&\n C"
    "LI_FOREVER_TALENTSEEK_AWARD_KEY\020\261\333\006\022*\n$C"
    "LI_FOREVER_TALENTSEEK_AWARD_END_KEY\020\225\334\006\022"
    " \n\032CLI_FOREVER_TALENTSEEK_KEY\020\226\334\006\022$\n\036CLI"
    "_FOREVER_TALENTSEEK_END_KEY\020\372\334\006\022&\n CLI_F"
    "OREVER_JOIN_GUILD_AWARD_KEY\020\334\335\006\022#\n\035CLI_F"
    "OREVER_TOTAL_EXPLOIT_KEY\020\335\335\006\022\035\n\027CLI_FORE"
    "VER_LEARN_TIMES\020\336\335\006\022\035\n\027CLI_FOREVER_SIGN_"
    "IN_BUY\020\337\335\006\022\"\n\034CLI_FOREVER_OLDMEM_BACK_TI"
    "ME\020\340\335\006\022#\n\035CLI_FOREVER_OLDMEM_BACK_AWARD\020"
    "\341\335\006\022$\n\036CLI_FOREVER_LITTLEWAR_CURPOINT\020\342\335"
    "\006\022$\n\036CLI_FOREVER_LITTLEWAR_RESTIMES\020\343\335\006\022"
    "\"\n\034CLI_FOREVER_LITTLEWAR_RESSET\020\344\335\006\022 \n\032C"
    "LI_FOREVER_SEVENDAY_SCORE\020\345\335\006\022\036\n\030CLI_FOR"
    "EVER_SHOP_REFLUSH\020\346\335\006\022#\n\035CLI_FOREVER_SER"
    "VER_MAIL_INDEX\020\347\335\006\022\"\n\034CLI_FOREVER_OLDMEM"
    "_BACK_ACTV\020\350\335\006\022\036\n\030CLI_FOREVER_ACTIVITY_K"
    "EY\020\270\202\007\022(\n\"CLI_FOREVER_ACTIVITY_KEY_USER_"
    "RANK\020\271\202\007\022\'\n!CLI_FOREVER_ACTIVITY_KEY_REC"
    "HARGE\020\272\202\007\022*\n$CLI_FOREVER_ACTIVITY_KEY_GU"
    "ILD_LEVEL\020\273\202\007\022)\n#CLI_FOREVER_ACTIVITY_KE"
    "Y_FIGHT_FUND\020\274\202\007\022*\n$CLI_FOREVER_ACTIVITY"
    "_KEY_OCCUPY_CITY\020\275\202\007\022.\n(CLI_FOREVER_ACTI"
    "VITY_KEY_RECHARGE_1_IN_4\020\276\202\007\022*\n$CLI_FORE"
    "VER_ACTIVITY_KEY_RAFFLE_HERO\020\277\202\007\022)\n#CLI_"
    "FOREVER_ACTIVITY_KEY_BASE_LEVEL\020\300\202\007\022/\n)C"
    "LI_FOREVER_ACTIVITY_KEY_TRAINING_SOLDIER"
    "\020\301\202\007\0224\n.CLI_FOREVER_ACTIVITY_KEY_RECHARG"
    "E_1_IN_4_EXTRA\020\302\202\007\022)\n#CLI_FOREVER_ACTIVI"
    "TY_KEY_KILL_ENEMY\020\303\202\007\022%\n\037CLI_FOREVER_ACT"
    "IVITY_KEY_CONSUM\020\304\202\007\022)\n#CLI_FOREVER_ACTI"
    "VITY_KEY_LIMIT_SHOP\020\305\202\007\022)\n#CLI_FOREVER_A"
    "CTIVITY_KEY_TOTAL_SIGN\020\306\202\007\022*\n$CLI_FOREVE"
    "R_ACTIVITY_KEY_ONLINE_TIME\020\307\202\007\022%\n\037CLI_FO"
    "REVER_ACTIVITY_KEY_PUZZLE\020\310\202\007\022*\n$CLI_FOR"
    "EVER_ACTIVITY_KEY_SPRING_SIGN\020\311\202\007\022(\n\"CLI"
    "_FOREVER_ACTIVITY_KEY_LUCK_DRAW\020\312\202\007\022(\n\"C"
    "LI_FOREVER_ACTIVITY_KEY_EXCHAENGE\020\313\202\007\022+\n"
    "%CLI_FOREVER_ACTIVITY_KEY_NEWFIGHTFUND\020\314"
    "\202\007\022%\n\037CLI_FOREVER_ACTIVITY_KEY_TURN_1\020\315\202"
    "\007\022%\n\037CLI_FOREVER_ACTIVITY_KEY_TURN_2\020\316\202\007"
    "\022%\n\037CLI_FOREVER_ACTIVITY_KEY_TURN_3\020\317\202\007\022"
    ".\n(CLI_FOREVER_ACTIVITY_KEY_RECHARGE_SHO"
    "P_1\020\320\202\007\022.\n(CLI_FOREVER_ACTIVITY_KEY_RECH"
    "ARGE_SHOP_2\020\321\202\007\022.\n(CLI_FOREVER_ACTIVITY_"
    "KEY_RECHARGE_SHOP_3\020\322\202\007\0222\n,CLI_FOREVER_A"
    "CTIVITY_KEY_CUMULATIVE_RECHARGE\020\323\202\007\022*\n$C"
    "LI_FOREVER_ACTIVITY_KEY_BORDER_KILL\020\324\202\007\022"
    "-\n\'CLI_FOREVER_ACTIVITY_KEY_FORCE_RESOUR"
    "CE\020\325\202\007\022%\n\037CLI_FOREVER_ACTIVITY_KEY_WEAPO"
    "N\020\326\202\007\022(\n\"CLI_FOREVER_ACTIVITY_KEY_WORLD_"
    "WAR\020\327\202\007\022*\n$CLI_FOREVER_ACTIVITY_KEY_EXCH"
    "AENGE_1\020\330\202\007\022*\n$CLI_FOREVER_ACTIVITY_KEY_"
    "EXCHAENGE_2\020\331\202\007\022*\n$CLI_FOREVER_ACTIVITY_"
    "KEY_EXCHAENGE_3\020\332\202\007\022*\n$CLI_FOREVER_ACTIV"
    "ITY_KEY_EXCHAENGE_4\020\333\202\007\022\'\n!CLI_FOREVER_A"
    "CTIVITY_KEY_SEVENDAY\020\334\202\007\022,\n&CLI_FOREVER_"
    "ACTIVITY_KEY_EVERYDAY_SIGN\020\335\202\007\022,\n&CLI_FO"
    "REVER_ACTIVITY_KEY_SEVENDAY_SIGN\020\336\202\007\022)\n#"
    "CLI_FOREVER_ACTIVITY_KEY_MONTH_CARD\020\337\202\007\022"
    "(\n\"CLI_FOREVER_ACTIVITY_KEY_WEEK_CARD\020\340\202"
    "\007\022-\n\'CLI_FOREVER_ACTIVITY_KEY_FIRST_RECH"
    "ARGE\020\341\202\007\022)\n#CLI_FOREVER_ACTIVITY_KEY_TAL"
    "ENTSEEK\020\342\202\007\022&\n CLI_FOREVER_ACTIVITY_KEY_"
    "BAGCODE\020\343\202\007\0221\n+CLI_FOREVER_ACTIVITY_KEY_"
    "NEW_PLAYER_GIFTBAG\020\344\202\007\022,\n&CLI_FOREVER_AC"
    "TIVITY_KEY_STAGE_GIFTBAG\020\345\202\007\022*\n$CLI_FORE"
    "VER_ACTIVITY_KEY_EXP_GIFTBAG\020\346\202\007\022,\n&CLI_"
    "FOREVER_ACTIVITY_KEY_LEVEL_GIFTBAG\020\347\202\007\022-"
    "\n\'CLI_FOREVER_ACTIVITY_KEY_RANDOM_GIFTBA"
    "G\020\350\202\007\022/\n)CLI_FOREVER_ACTIVITY_KEY_HEROGI"
    "FT_GIFTBAG\020\351\202\007\0220\n*CLI_FOREVER_ACTIVITY_K"
    "EY_DAYTOTAL_RECHARGE\020\352\202\007\022-\n\'CLI_FOREVER_"
    "ACTIVITY_KEY_TOTAL_RECHARGE\020\353\202\007\022*\n$CLI_F"
    "OREVER_ACTIVITY_KEY_OLDMEN_BACK\020\354\202\007\022+\n%C"
    "LI_FOREVER_ACTIVITY_KEY_LIMITNUM_DAY\020\355\202\007"
    "\022-\n\'CLI_FOREVER_ACTIVITY_KEY_LIMITNUM_AC"
    "T_1\020\356\202\007\022-\n\'CLI_FOREVER_ACTIVITY_KEY_LIMI"
    "TNUM_ACT_2\020\357\202\007\022-\n\'CLI_FOREVER_ACTIVITY_K"
    "EY_LIMITNUM_ACT_3\020\360\202\007\022*\n$CLI_FOREVER_ACT"
    "IVITY_KEY_RECHARGE_30\020\361\202\007\022-\n\'CLI_FOREVER"
    "_ACTIVITY_KEY_RECHARGE_1_3_6\020\362\202\007\022,\n&CLI_"
    "FOREVER_ACTIVITY_KEY_HIGHFIGHTFUND\020\363\202\007\022+"
    "\n%CLI_FOREVER_ACTIVITY_KEY_SUPER_WEAPON\020"
    "\364\202\007\022,\n&CLI_FOREVER_ACTIVITY_KEY_HERO_GIF"
    "T_BIG\020\365\202\007\022,\n&CLI_FOREVER_ACTIVITY_KEY_RE"
    "CHARGE_GIFT\020\366\202\007\022-\n\'CLI_FOREVER_ACTIVITY_"
    "KEY_PRINCIPAL_GIFT\020\367\202\007\022&\n CLI_FOREVER_AC"
    "TIVITY_VERSION_KEY\020\310\205\007\022#\n\035CLI_FOREVER_AC"
    "TIVITY_DATA_KEY\020\330\210\007\022.\n(CLI_FOREVER_ACTIV"
    "ITY_DATA_KEY_TOTAL_SIGN\020\331\210\007\0220\n*CLI_FOREV"
    "ER_ACTIVITY_KEY_NEWFIGHTFUND_FLAG\020\332\210\007\022\'\n"
    "!STR_FOREVER_ACTIVITY_TURN_1_SCORE\020\333\210\007\022\'"
    "\n!STR_FOREVER_ACTIVITY_TURN_2_SCORE\020\334\210\007\022"
    "\'\n!STR_FOREVER_ACTIVITY_TURN_3_SCORE\020\335\210\007"
    "\022%\n\037STR_FOREVER_ACTIVITY_TURN_1_NUM\020\336\210\007\022"
    "%\n\037STR_FOREVER_ACTIVITY_TURN_2_NUM\020\337\210\007\022%"
    "\n\037STR_FOREVER_ACTIVITY_TURN_3_NUM\020\340\210\007\022%\n"
    "\037STR_FOREVER_ACTIVITY_SHOP_1_NUM\020\341\210\007\022%\n\037"
    "STR_FOREVER_ACTIVITY_SHOP_2_NUM\020\342\210\007\022%\n\037S"
    "TR_FOREVER_ACTIVITY_SHOP_3_NUM\020\343\210\007\0221\n+CL"
    "I_FOREVER_ACTIVITY_KEY_HIGHFIGHTFUND_FLA"
    "G\020\344\210\007\022\"\n\034CLI_FOREVER_ACTIVITY_KEY_END\020\237\212"
    "\007\022-\n\'CLI_FOREVER_EQUIP_KEY_RESET_SCORE_S"
    "TART\020\240\212\007\022+\n%CLI_FOREVER_EQUIP_KEY_RESET_"
    "SCORE_END\020\223\216\007\022/\n)CLI_FOREVER_LITTLEWAR_C"
    "HAPTER_AWARD_START\020\224\216\007\022-\n\'CLI_FOREVER_LI"
    "TTLEWAR_CHAPTER_AWARD_END\020\261\216\007\022!\n\033CLI_FOR"
    "EVER_FEAST_NUM_START\020\262\216\007\022\037\n\031CLI_FOREVER_"
    "FEAST_NUM_END\020\367\216\007\022\'\n!CLI_FOREVER_PLAY_CH"
    "ANGE_START_KEY\020\210\222\007\022%\n\037CLI_FOREVER_PLAY_C"
    "HANGE_END_KEY\020\320\223\007\022)\n#CLI_FOREVER_LAST_PL"
    "AY_GUILD_LVL_KEY\020\321\223\007\022(\n\"CLI_FOREVER_LAST"
    "_PLAY_AREA_LVL_KEY\020\322\223\007\0220\n*CLI_FOREVER_LA"
    "ST_PLAY_PLAYERDATA_START_KEY\020\264\224\007\022.\n(CLI_"
    "FOREVER_LAST_PLAY_PLAYERDATA_END_KEY\020\374\225\007"
    "\022\031\n\023CLI_FOREVER_END_KEY\020\277\251\007\022\032\n\024PM_FOREVE"
    "R_START_KEY\020\300\251\007\022!\n\033PM_FOREVER_SYS_MAIL_E"
    "ND_KEY\020\247\261\007\022,\n&PM_FOREVER_FIRST_CITY_REWA"
    "RD_START_KEY\020\250\261\007\022*\n$PM_FOREVER_FIRST_CIT"
    "Y_REWARD_END_KEY\020\324\263\007\022+\n%PM_FOREVER_TWT_N"
    "ORMAL_AWARD_START_KEY\020\325\263\007\022)\n#PM_FOREVER_"
    "TWT_NORMAL_AWARD_END_KEY\020\270\264\007\022*\n$PM_FOREV"
    "ER_TWT_EXTRA_AWARD_START_KEY\020\271\264\007\022(\n\"PM_F"
    "OREVER_TWT_EXTRA_AWARD_END_KEY\020\234\265\007\0220\n*PM"
    "_FOREVER_TWT_ACHIEVEMENT_AWARD_START_KEY"
    "\020\235\265\007\022.\n(PM_FOREVER_TWT_ACHIEVEMENT_AWARD"
    "_END_KEY\020\204\275\007\022/\n)PM_FOREVER_DATA_TRANSFOR"
    "M_AWARD_START_KEY\020\205\275\007\022-\n\'PM_FOREVER_DATA"
    "_TRANSFORM_AWARD_END_KEY\020\350\275\007\022\030\n\022PM_FOREV"
    "ER_END_KEY\020\317\367\007\022\033\n\025STR_FOREVER_START_KEY\020"
    "\320\367\007\022!\n\033STR_FOREVER_PURCHASE_RECORD\020\321\367\007\022\037"
    "\n\031STR_FOREVER_RECRUIT_HEROS\020\322\367\007\022!\n\033STR_F"
    "OREVER_FIRST_HAVE_HERO\020\323\367\007\022#\n\035STR_FOREVE"
    "R_RAFFLE_HERO_TIMES\020\324\367\007\022#\n\035STR_FOREVER_U"
    "SER_BANQUET_INFO\020\325\367\007\022\033\n\025STR_FOREVER_USER"
    "_TEAM\020\326\367\007\022\034\n\026STR_FOREVER_CLUSTER_ID\020\327\367\007\022"
    "\036\n\030STR_FOREVER_USER_ADDDATA\020\330\367\007\022\034\n\026STR_F"
    "OREVER_ATLAS_HERO\020\331\367\007\022 \n\032STR_FOREVER_CHA"
    "LLENGE_PROP\020\332\367\007\022&\n STR_FOREVER_CHALLENGE"
    "_HERO_LEVEL\020\333\367\007\022\035\n\027STR_FOREVER_GIFTBAG_B"
    "UY\020\334\367\007\022\032\n\024STR_FOREVER_PUSH_SET\020\335\367\007\022\037\n\031ST"
    "R_FOREVER_USER_TEAM_MIN\020\264\370\007\022\037\n\031STR_FOREV"
    "ER_USER_TEAM_MAX\020\307\370\007\022#\n\035STR_FOREVER_USER"
    "_SIGN_IN_INFO\020\310\370\007\022\035\n\027STR_FOREVER_USER_NE"
    "WADV\020\311\370\007\022%\n\037STR_FOREVER_USER_GUILDTECH_B"
    "UFF\020\312\370\007\022\035\n\027STR_FOREVER_USER_PUZZLE\020\313\370\007\022\037"
    "\n\031STR_FOREVER_USER_SEVENDAY\020\314\370\007\022 \n\032STR_F"
    "OREVER_USER_LUCK_DRAW\020\315\370\007\022!\n\033STR_FOREVER"
    "_LITTLE_WAR_TEAM\020\316\370\007\022\036\n\030STR_FOREVER_USER"
    "_CHAPTER\020\317\370\007\022)\n#STR_FOREVER_ACTIVITY_EXC"
    "HANGE_TIMES\020\320\370\007\022%\n\037STR_FOREVER_CUMULATIV"
    "E_RECHARGE\020\321\370\007\022&\n STR_FOREVER_DAILY_SCOR"
    "E_AWARD_ID\020\323\370\007\022%\n\037STR_FOREVER_CAN_WORK_A"
    "GENT_HERO\020\324\370\007\022$\n\036STR_FOREVER_FORBIT_CHAT"
    "_STRING\020\325\370\007\022%\n\037STR_FOREVER_FORBIT_LOGIN_"
    "STRING\020\326\370\007\022!\n\033STR_FOREVER_WORKAGENT_FIEL"
    "D\020\327\370\007\022\035\n\027STR_FOREVER_BATTLE_DRUM\020\330\370\007\022 \n\032"
    "STR_FOREVER_SPECIAL_EVENTS\020\270\377\007\022!\n\033STR_FO"
    "REVER_FORCE_CITY_RANK\020\271\377\007\022&\n STR_FOREVER"
    "_LAST_FORCE_CITY_RANK\020\272\377\007\022\031\n\023STR_FOREVER"
    "_END_KEY\020\337\305\010\022\'\n!PM_FOREVER_NEW_SYS_MAIL_"
    "START_KEY\020\300\232\014\022%\n\037PM_FOREVER_NEW_SYS_MAIL"
    "_END_KEY\020\340\247\022b\006proto3", 25460);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common_enum.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_common_5fenum_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_common_5fenum_2eproto {
  StaticDescriptorInitializer_common_5fenum_2eproto() {
    protobuf_AddDesc_common_5fenum_2eproto();
  }
} static_descriptor_initializer_common_5fenum_2eproto_;
const ::google::protobuf::EnumDescriptor* TalentSeekConditionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TalentSeekConditionType_descriptor_;
}
bool TalentSeekConditionType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AddExpType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddExpType_descriptor_;
}
bool AddExpType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AddResType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddResType_descriptor_;
}
bool AddResType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ExpendResType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExpendResType_descriptor_;
}
bool ExpendResType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EventLogType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventLogType_descriptor_;
}
bool EventLogType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AddHeroSkillType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddHeroSkillType_descriptor_;
}
bool AddHeroSkillType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PromotePropertyType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PromotePropertyType_descriptor_;
}
bool PromotePropertyType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AddHeroType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddHeroType_descriptor_;
}
bool AddHeroType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OperateQuestType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperateQuestType_descriptor_;
}
bool OperateQuestType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AddItemType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddItemType_descriptor_;
}
bool AddItemType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ExpendItemType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExpendItemType_descriptor_;
}
bool ExpendItemType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AddAwardType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddAwardType_descriptor_;
}
bool AddAwardType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PushType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PushType_descriptor_;
}
bool PushType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* USER_MAIL_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return USER_MAIL_TYPE_descriptor_;
}
bool USER_MAIL_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* USER_ATTR_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return USER_ATTR_descriptor_;
}
bool USER_ATTR_IsValid(int value) {
  switch(value) {
    case 0:
    case 10000:
    case 10001:
    case 10002:
    case 10003:
    case 10004:
    case 10013:
    case 10014:
    case 10015:
    case 10045:
    case 10046:
    case 10050:
    case 10051:
    case 10052:
    case 10053:
    case 10054:
    case 10055:
    case 10056:
    case 10057:
    case 10058:
    case 10059:
    case 10060:
    case 10061:
    case 10062:
    case 10064:
    case 10069:
    case 10070:
    case 10071:
    case 10072:
    case 10073:
    case 10074:
    case 10075:
    case 10076:
    case 10077:
    case 10078:
    case 10079:
    case 10080:
    case 10081:
    case 10090:
    case 10099:
    case 10100:
    case 10119:
    case 10120:
    case 10121:
    case 10122:
    case 10123:
    case 10124:
    case 10125:
    case 10126:
    case 10127:
    case 10128:
    case 10129:
    case 10130:
    case 10131:
    case 10149:
    case 10500:
    case 10999:
    case 11100:
    case 11102:
    case 11103:
    case 11104:
    case 11105:
    case 11106:
    case 11107:
    case 11108:
    case 19999:
    case 20000:
    case 20001:
    case 20100:
    case 20101:
    case 29999:
    case 30000:
    case 39999:
    case 40000:
    case 40001:
    case 40002:
    case 40003:
    case 40004:
    case 49999:
    case 50000:
    case 59999:
    case 60000:
    case 69999:
    case 70000:
    case 79999:
    case 80000:
    case 89999:
    case 90000:
    case 99999:
    case 100000:
    case 100001:
    case 100002:
    case 100003:
    case 100004:
    case 100005:
    case 100006:
    case 100007:
    case 100008:
    case 100009:
    case 100010:
    case 100011:
    case 100012:
    case 100013:
    case 100014:
    case 100015:
    case 100016:
    case 100017:
    case 100018:
    case 100019:
    case 100020:
    case 100021:
    case 100022:
    case 100023:
    case 100024:
    case 100025:
    case 100026:
    case 100027:
    case 100028:
    case 100029:
    case 100030:
    case 100031:
    case 100032:
    case 100033:
    case 100034:
    case 100035:
    case 100036:
    case 100037:
    case 100038:
    case 100039:
    case 100040:
    case 100041:
    case 100042:
    case 100043:
    case 100044:
    case 100050:
    case 104000:
    case 104099:
    case 109000:
    case 109001:
    case 109002:
    case 109003:
    case 109004:
    case 109005:
    case 109006:
    case 109007:
    case 109008:
    case 109009:
    case 109010:
    case 109011:
    case 109012:
    case 109013:
    case 109014:
    case 109015:
    case 109016:
    case 109017:
    case 109018:
    case 109100:
    case 109101:
    case 109102:
    case 109103:
    case 109104:
    case 109105:
    case 109106:
    case 109107:
    case 109200:
    case 109201:
    case 109202:
    case 109203:
    case 109204:
    case 109205:
    case 109500:
    case 109509:
    case 109999:
    case 110000:
    case 110001:
    case 110101:
    case 110102:
    case 110202:
    case 110300:
    case 110301:
    case 110302:
    case 110303:
    case 110304:
    case 110305:
    case 110306:
    case 110307:
    case 110308:
    case 110309:
    case 110310:
    case 110311:
    case 110312:
    case 115000:
    case 115001:
    case 115002:
    case 115003:
    case 115004:
    case 115005:
    case 115006:
    case 115007:
    case 115008:
    case 115009:
    case 115010:
    case 115011:
    case 115012:
    case 115013:
    case 115014:
    case 115015:
    case 115016:
    case 115017:
    case 115018:
    case 115019:
    case 115020:
    case 115021:
    case 115022:
    case 115023:
    case 115024:
    case 115025:
    case 115026:
    case 115027:
    case 115028:
    case 115029:
    case 115030:
    case 115031:
    case 115032:
    case 115033:
    case 115034:
    case 115035:
    case 115036:
    case 115037:
    case 115038:
    case 115039:
    case 115040:
    case 115041:
    case 115042:
    case 115043:
    case 115044:
    case 115045:
    case 115046:
    case 115047:
    case 115048:
    case 115049:
    case 115050:
    case 115051:
    case 115052:
    case 115053:
    case 115054:
    case 115055:
    case 115056:
    case 115057:
    case 115058:
    case 115059:
    case 115060:
    case 115061:
    case 115062:
    case 115063:
    case 115400:
    case 115800:
    case 115801:
    case 115802:
    case 115803:
    case 115804:
    case 115805:
    case 115806:
    case 115807:
    case 115808:
    case 115809:
    case 115810:
    case 115811:
    case 115812:
    case 115999:
    case 116000:
    case 116499:
    case 116500:
    case 116529:
    case 116530:
    case 116599:
    case 117000:
    case 117200:
    case 117201:
    case 117202:
    case 117300:
    case 117500:
    case 119999:
    case 120000:
    case 120999:
    case 121000:
    case 121300:
    case 121301:
    case 121400:
    case 121401:
    case 121500:
    case 121501:
    case 122500:
    case 122501:
    case 122600:
    case 129999:
    case 130000:
    case 130001:
    case 130002:
    case 130003:
    case 130004:
    case 130005:
    case 130006:
    case 130007:
    case 130008:
    case 130009:
    case 130010:
    case 130011:
    case 130012:
    case 130013:
    case 130100:
    case 130119:
    case 130120:
    case 130121:
    case 130122:
    case 130123:
    case 130124:
    case 130125:
    case 130126:
    case 130127:
    case 130128:
    case 130129:
    case 130131:
    case 130132:
    case 130133:
    case 130134:
    case 130135:
    case 130136:
    case 131000:
    case 131001:
    case 131002:
    case 139999:
    case 200000:
    case 300000:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CommonEnum

// @@protoc_insertion_point(global_scope)
