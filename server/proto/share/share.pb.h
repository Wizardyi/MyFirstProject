// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: share.proto

#ifndef PROTOBUF_share_2eproto__INCLUDED
#define PROTOBUF_share_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace shareproto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_share_2eproto();
void protobuf_AssignDesc_share_2eproto();
void protobuf_ShutdownFile_share_2eproto();

class PlayerRegisterInfo;
class PlayerTroopInfo;
class ServerInfo;
class TroopAttackInfo;
class TroopDetailInfo;

enum RegisterType {
  PLAYER_ON = 0,
  PLAYER_OFF = 1,
  RegisterType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RegisterType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RegisterType_IsValid(int value);
const RegisterType RegisterType_MIN = PLAYER_ON;
const RegisterType RegisterType_MAX = PLAYER_OFF;
const int RegisterType_ARRAYSIZE = RegisterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegisterType_descriptor();
inline const ::std::string& RegisterType_Name(RegisterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegisterType_descriptor(), value);
}
inline bool RegisterType_Parse(
    const ::std::string& name, RegisterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegisterType>(
    RegisterType_descriptor(), name, value);
}
// ===================================================================

class ServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shareproto.ServerInfo) */ {
 public:
  ServerInfo();
  virtual ~ServerInfo();

  ServerInfo(const ServerInfo& from);

  inline ServerInfo& operator=(const ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerInfo& default_instance();

  void Swap(ServerInfo* other);

  // implements Message ----------------------------------------------

  inline ServerInfo* New() const { return New(NULL); }

  ServerInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerInfo& from);
  void MergeFrom(const ServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_id = 1;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // optional uint32 user_number = 2;
  void clear_user_number();
  static const int kUserNumberFieldNumber = 2;
  ::google::protobuf::uint32 user_number() const;
  void set_user_number(::google::protobuf::uint32 value);

  // optional uint32 play_id = 3;
  void clear_play_id();
  static const int kPlayIdFieldNumber = 3;
  ::google::protobuf::uint32 play_id() const;
  void set_play_id(::google::protobuf::uint32 value);

  // optional uint32 permission = 4;
  void clear_permission();
  static const int kPermissionFieldNumber = 4;
  ::google::protobuf::uint32 permission() const;
  void set_permission(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shareproto.ServerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 server_id_;
  ::google::protobuf::uint32 user_number_;
  ::google::protobuf::uint32 play_id_;
  ::google::protobuf::uint32 permission_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_share_2eproto();
  friend void protobuf_AssignDesc_share_2eproto();
  friend void protobuf_ShutdownFile_share_2eproto();

  void InitAsDefaultInstance();
  static ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class PlayerRegisterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shareproto.PlayerRegisterInfo) */ {
 public:
  PlayerRegisterInfo();
  virtual ~PlayerRegisterInfo();

  PlayerRegisterInfo(const PlayerRegisterInfo& from);

  inline PlayerRegisterInfo& operator=(const PlayerRegisterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerRegisterInfo& default_instance();

  void Swap(PlayerRegisterInfo* other);

  // implements Message ----------------------------------------------

  inline PlayerRegisterInfo* New() const { return New(NULL); }

  PlayerRegisterInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerRegisterInfo& from);
  void MergeFrom(const PlayerRegisterInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerRegisterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .shareproto.RegisterType register_type = 1;
  void clear_register_type();
  static const int kRegisterTypeFieldNumber = 1;
  ::shareproto::RegisterType register_type() const;
  void set_register_type(::shareproto::RegisterType value);

  // optional uint32 player_id = 2;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 online_id = 3;
  void clear_online_id();
  static const int kOnlineIdFieldNumber = 3;
  ::google::protobuf::uint32 online_id() const;
  void set_online_id(::google::protobuf::uint32 value);

  // optional bytes player_nick = 4;
  void clear_player_nick();
  static const int kPlayerNickFieldNumber = 4;
  const ::std::string& player_nick() const;
  void set_player_nick(const ::std::string& value);
  void set_player_nick(const char* value);
  void set_player_nick(const void* value, size_t size);
  ::std::string* mutable_player_nick();
  ::std::string* release_player_nick();
  void set_allocated_player_nick(::std::string* player_nick);

  // optional bytes source_number = 5;
  void clear_source_number();
  static const int kSourceNumberFieldNumber = 5;
  const ::std::string& source_number() const;
  void set_source_number(const ::std::string& value);
  void set_source_number(const char* value);
  void set_source_number(const void* value, size_t size);
  ::std::string* mutable_source_number();
  ::std::string* release_source_number();
  void set_allocated_source_number(::std::string* source_number);

  // optional uint32 server_id = 6;
  void clear_server_id();
  static const int kServerIdFieldNumber = 6;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // optional uint32 platform_id = 7;
  void clear_platform_id();
  static const int kPlatformIdFieldNumber = 7;
  ::google::protobuf::uint32 platform_id() const;
  void set_platform_id(::google::protobuf::uint32 value);

  // optional uint32 source_id = 8;
  void clear_source_id();
  static const int kSourceIdFieldNumber = 8;
  ::google::protobuf::uint32 source_id() const;
  void set_source_id(::google::protobuf::uint32 value);

  // optional uint32 gate_id = 9;
  void clear_gate_id();
  static const int kGateIdFieldNumber = 9;
  ::google::protobuf::uint32 gate_id() const;
  void set_gate_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shareproto.PlayerRegisterInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int register_type_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::internal::ArenaStringPtr player_nick_;
  ::google::protobuf::uint32 online_id_;
  ::google::protobuf::uint32 server_id_;
  ::google::protobuf::internal::ArenaStringPtr source_number_;
  ::google::protobuf::uint32 platform_id_;
  ::google::protobuf::uint32 source_id_;
  ::google::protobuf::uint32 gate_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_share_2eproto();
  friend void protobuf_AssignDesc_share_2eproto();
  friend void protobuf_ShutdownFile_share_2eproto();

  void InitAsDefaultInstance();
  static PlayerRegisterInfo* default_instance_;
};
// -------------------------------------------------------------------

class PlayerTroopInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shareproto.PlayerTroopInfo) */ {
 public:
  PlayerTroopInfo();
  virtual ~PlayerTroopInfo();

  PlayerTroopInfo(const PlayerTroopInfo& from);

  inline PlayerTroopInfo& operator=(const PlayerTroopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerTroopInfo& default_instance();

  void Swap(PlayerTroopInfo* other);

  // implements Message ----------------------------------------------

  inline PlayerTroopInfo* New() const { return New(NULL); }

  PlayerTroopInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerTroopInfo& from);
  void MergeFrom(const PlayerTroopInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerTroopInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 troop_id = 2;
  void clear_troop_id();
  static const int kTroopIdFieldNumber = 2;
  ::google::protobuf::uint32 troop_id() const;
  void set_troop_id(::google::protobuf::uint32 value);

  // optional uint32 pos_x = 3;
  void clear_pos_x();
  static const int kPosXFieldNumber = 3;
  ::google::protobuf::uint32 pos_x() const;
  void set_pos_x(::google::protobuf::uint32 value);

  // optional uint32 pos_y = 4;
  void clear_pos_y();
  static const int kPosYFieldNumber = 4;
  ::google::protobuf::uint32 pos_y() const;
  void set_pos_y(::google::protobuf::uint32 value);

  // optional uint32 target_pos_x = 5;
  void clear_target_pos_x();
  static const int kTargetPosXFieldNumber = 5;
  ::google::protobuf::uint32 target_pos_x() const;
  void set_target_pos_x(::google::protobuf::uint32 value);

  // optional uint32 target_pos_y = 6;
  void clear_target_pos_y();
  static const int kTargetPosYFieldNumber = 6;
  ::google::protobuf::uint32 target_pos_y() const;
  void set_target_pos_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shareproto.PlayerTroopInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 troop_id_;
  ::google::protobuf::uint32 pos_x_;
  ::google::protobuf::uint32 pos_y_;
  ::google::protobuf::uint32 target_pos_x_;
  ::google::protobuf::uint32 target_pos_y_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_share_2eproto();
  friend void protobuf_AssignDesc_share_2eproto();
  friend void protobuf_ShutdownFile_share_2eproto();

  void InitAsDefaultInstance();
  static PlayerTroopInfo* default_instance_;
};
// -------------------------------------------------------------------

class TroopDetailInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shareproto.TroopDetailInfo) */ {
 public:
  TroopDetailInfo();
  virtual ~TroopDetailInfo();

  TroopDetailInfo(const TroopDetailInfo& from);

  inline TroopDetailInfo& operator=(const TroopDetailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TroopDetailInfo& default_instance();

  void Swap(TroopDetailInfo* other);

  // implements Message ----------------------------------------------

  inline TroopDetailInfo* New() const { return New(NULL); }

  TroopDetailInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TroopDetailInfo& from);
  void MergeFrom(const TroopDetailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TroopDetailInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 troop_id = 1;
  void clear_troop_id();
  static const int kTroopIdFieldNumber = 1;
  ::google::protobuf::uint64 troop_id() const;
  void set_troop_id(::google::protobuf::uint64 value);

  // optional float hp = 2;
  void clear_hp();
  static const int kHpFieldNumber = 2;
  float hp() const;
  void set_hp(float value);

  // optional float attack = 3;
  void clear_attack();
  static const int kAttackFieldNumber = 3;
  float attack() const;
  void set_attack(float value);

  // optional uint32 attack_cd = 4;
  void clear_attack_cd();
  static const int kAttackCdFieldNumber = 4;
  ::google::protobuf::uint32 attack_cd() const;
  void set_attack_cd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shareproto.TroopDetailInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 troop_id_;
  float hp_;
  float attack_;
  ::google::protobuf::uint32 attack_cd_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_share_2eproto();
  friend void protobuf_AssignDesc_share_2eproto();
  friend void protobuf_ShutdownFile_share_2eproto();

  void InitAsDefaultInstance();
  static TroopDetailInfo* default_instance_;
};
// -------------------------------------------------------------------

class TroopAttackInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shareproto.TroopAttackInfo) */ {
 public:
  TroopAttackInfo();
  virtual ~TroopAttackInfo();

  TroopAttackInfo(const TroopAttackInfo& from);

  inline TroopAttackInfo& operator=(const TroopAttackInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TroopAttackInfo& default_instance();

  void Swap(TroopAttackInfo* other);

  // implements Message ----------------------------------------------

  inline TroopAttackInfo* New() const { return New(NULL); }

  TroopAttackInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TroopAttackInfo& from);
  void MergeFrom(const TroopAttackInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TroopAttackInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 attack_player_id = 1;
  void clear_attack_player_id();
  static const int kAttackPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 attack_player_id() const;
  void set_attack_player_id(::google::protobuf::uint32 value);

  // optional uint32 attack_troop_id = 2;
  void clear_attack_troop_id();
  static const int kAttackTroopIdFieldNumber = 2;
  ::google::protobuf::uint32 attack_troop_id() const;
  void set_attack_troop_id(::google::protobuf::uint32 value);

  // optional uint32 be_attacked_player_id = 3;
  void clear_be_attacked_player_id();
  static const int kBeAttackedPlayerIdFieldNumber = 3;
  ::google::protobuf::uint32 be_attacked_player_id() const;
  void set_be_attacked_player_id(::google::protobuf::uint32 value);

  // optional uint32 be_attacked_troop_id = 4;
  void clear_be_attacked_troop_id();
  static const int kBeAttackedTroopIdFieldNumber = 4;
  ::google::protobuf::uint32 be_attacked_troop_id() const;
  void set_be_attacked_troop_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shareproto.TroopAttackInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 attack_player_id_;
  ::google::protobuf::uint32 attack_troop_id_;
  ::google::protobuf::uint32 be_attacked_player_id_;
  ::google::protobuf::uint32 be_attacked_troop_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_share_2eproto();
  friend void protobuf_AssignDesc_share_2eproto();
  friend void protobuf_ShutdownFile_share_2eproto();

  void InitAsDefaultInstance();
  static TroopAttackInfo* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerInfo

// optional uint32 server_id = 1;
inline void ServerInfo::clear_server_id() {
  server_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerInfo::server_id() const {
  // @@protoc_insertion_point(field_get:shareproto.ServerInfo.server_id)
  return server_id_;
}
inline void ServerInfo::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:shareproto.ServerInfo.server_id)
}

// optional uint32 user_number = 2;
inline void ServerInfo::clear_user_number() {
  user_number_ = 0u;
}
inline ::google::protobuf::uint32 ServerInfo::user_number() const {
  // @@protoc_insertion_point(field_get:shareproto.ServerInfo.user_number)
  return user_number_;
}
inline void ServerInfo::set_user_number(::google::protobuf::uint32 value) {
  
  user_number_ = value;
  // @@protoc_insertion_point(field_set:shareproto.ServerInfo.user_number)
}

// optional uint32 play_id = 3;
inline void ServerInfo::clear_play_id() {
  play_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerInfo::play_id() const {
  // @@protoc_insertion_point(field_get:shareproto.ServerInfo.play_id)
  return play_id_;
}
inline void ServerInfo::set_play_id(::google::protobuf::uint32 value) {
  
  play_id_ = value;
  // @@protoc_insertion_point(field_set:shareproto.ServerInfo.play_id)
}

// optional uint32 permission = 4;
inline void ServerInfo::clear_permission() {
  permission_ = 0u;
}
inline ::google::protobuf::uint32 ServerInfo::permission() const {
  // @@protoc_insertion_point(field_get:shareproto.ServerInfo.permission)
  return permission_;
}
inline void ServerInfo::set_permission(::google::protobuf::uint32 value) {
  
  permission_ = value;
  // @@protoc_insertion_point(field_set:shareproto.ServerInfo.permission)
}

// -------------------------------------------------------------------

// PlayerRegisterInfo

// optional .shareproto.RegisterType register_type = 1;
inline void PlayerRegisterInfo::clear_register_type() {
  register_type_ = 0;
}
inline ::shareproto::RegisterType PlayerRegisterInfo::register_type() const {
  // @@protoc_insertion_point(field_get:shareproto.PlayerRegisterInfo.register_type)
  return static_cast< ::shareproto::RegisterType >(register_type_);
}
inline void PlayerRegisterInfo::set_register_type(::shareproto::RegisterType value) {
  
  register_type_ = value;
  // @@protoc_insertion_point(field_set:shareproto.PlayerRegisterInfo.register_type)
}

// optional uint32 player_id = 2;
inline void PlayerRegisterInfo::clear_player_id() {
  player_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerRegisterInfo::player_id() const {
  // @@protoc_insertion_point(field_get:shareproto.PlayerRegisterInfo.player_id)
  return player_id_;
}
inline void PlayerRegisterInfo::set_player_id(::google::protobuf::uint32 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:shareproto.PlayerRegisterInfo.player_id)
}

// optional uint32 online_id = 3;
inline void PlayerRegisterInfo::clear_online_id() {
  online_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerRegisterInfo::online_id() const {
  // @@protoc_insertion_point(field_get:shareproto.PlayerRegisterInfo.online_id)
  return online_id_;
}
inline void PlayerRegisterInfo::set_online_id(::google::protobuf::uint32 value) {
  
  online_id_ = value;
  // @@protoc_insertion_point(field_set:shareproto.PlayerRegisterInfo.online_id)
}

// optional bytes player_nick = 4;
inline void PlayerRegisterInfo::clear_player_nick() {
  player_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerRegisterInfo::player_nick() const {
  // @@protoc_insertion_point(field_get:shareproto.PlayerRegisterInfo.player_nick)
  return player_nick_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerRegisterInfo::set_player_nick(const ::std::string& value) {
  
  player_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shareproto.PlayerRegisterInfo.player_nick)
}
inline void PlayerRegisterInfo::set_player_nick(const char* value) {
  
  player_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shareproto.PlayerRegisterInfo.player_nick)
}
inline void PlayerRegisterInfo::set_player_nick(const void* value, size_t size) {
  
  player_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shareproto.PlayerRegisterInfo.player_nick)
}
inline ::std::string* PlayerRegisterInfo::mutable_player_nick() {
  
  // @@protoc_insertion_point(field_mutable:shareproto.PlayerRegisterInfo.player_nick)
  return player_nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerRegisterInfo::release_player_nick() {
  // @@protoc_insertion_point(field_release:shareproto.PlayerRegisterInfo.player_nick)
  
  return player_nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerRegisterInfo::set_allocated_player_nick(::std::string* player_nick) {
  if (player_nick != NULL) {
    
  } else {
    
  }
  player_nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_nick);
  // @@protoc_insertion_point(field_set_allocated:shareproto.PlayerRegisterInfo.player_nick)
}

// optional bytes source_number = 5;
inline void PlayerRegisterInfo::clear_source_number() {
  source_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerRegisterInfo::source_number() const {
  // @@protoc_insertion_point(field_get:shareproto.PlayerRegisterInfo.source_number)
  return source_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerRegisterInfo::set_source_number(const ::std::string& value) {
  
  source_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shareproto.PlayerRegisterInfo.source_number)
}
inline void PlayerRegisterInfo::set_source_number(const char* value) {
  
  source_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shareproto.PlayerRegisterInfo.source_number)
}
inline void PlayerRegisterInfo::set_source_number(const void* value, size_t size) {
  
  source_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shareproto.PlayerRegisterInfo.source_number)
}
inline ::std::string* PlayerRegisterInfo::mutable_source_number() {
  
  // @@protoc_insertion_point(field_mutable:shareproto.PlayerRegisterInfo.source_number)
  return source_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerRegisterInfo::release_source_number() {
  // @@protoc_insertion_point(field_release:shareproto.PlayerRegisterInfo.source_number)
  
  return source_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerRegisterInfo::set_allocated_source_number(::std::string* source_number) {
  if (source_number != NULL) {
    
  } else {
    
  }
  source_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_number);
  // @@protoc_insertion_point(field_set_allocated:shareproto.PlayerRegisterInfo.source_number)
}

// optional uint32 server_id = 6;
inline void PlayerRegisterInfo::clear_server_id() {
  server_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerRegisterInfo::server_id() const {
  // @@protoc_insertion_point(field_get:shareproto.PlayerRegisterInfo.server_id)
  return server_id_;
}
inline void PlayerRegisterInfo::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:shareproto.PlayerRegisterInfo.server_id)
}

// optional uint32 platform_id = 7;
inline void PlayerRegisterInfo::clear_platform_id() {
  platform_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerRegisterInfo::platform_id() const {
  // @@protoc_insertion_point(field_get:shareproto.PlayerRegisterInfo.platform_id)
  return platform_id_;
}
inline void PlayerRegisterInfo::set_platform_id(::google::protobuf::uint32 value) {
  
  platform_id_ = value;
  // @@protoc_insertion_point(field_set:shareproto.PlayerRegisterInfo.platform_id)
}

// optional uint32 source_id = 8;
inline void PlayerRegisterInfo::clear_source_id() {
  source_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerRegisterInfo::source_id() const {
  // @@protoc_insertion_point(field_get:shareproto.PlayerRegisterInfo.source_id)
  return source_id_;
}
inline void PlayerRegisterInfo::set_source_id(::google::protobuf::uint32 value) {
  
  source_id_ = value;
  // @@protoc_insertion_point(field_set:shareproto.PlayerRegisterInfo.source_id)
}

// optional uint32 gate_id = 9;
inline void PlayerRegisterInfo::clear_gate_id() {
  gate_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerRegisterInfo::gate_id() const {
  // @@protoc_insertion_point(field_get:shareproto.PlayerRegisterInfo.gate_id)
  return gate_id_;
}
inline void PlayerRegisterInfo::set_gate_id(::google::protobuf::uint32 value) {
  
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:shareproto.PlayerRegisterInfo.gate_id)
}

// -------------------------------------------------------------------

// PlayerTroopInfo

// optional uint32 player_id = 1;
inline void PlayerTroopInfo::clear_player_id() {
  player_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerTroopInfo::player_id() const {
  // @@protoc_insertion_point(field_get:shareproto.PlayerTroopInfo.player_id)
  return player_id_;
}
inline void PlayerTroopInfo::set_player_id(::google::protobuf::uint32 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:shareproto.PlayerTroopInfo.player_id)
}

// optional uint32 troop_id = 2;
inline void PlayerTroopInfo::clear_troop_id() {
  troop_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerTroopInfo::troop_id() const {
  // @@protoc_insertion_point(field_get:shareproto.PlayerTroopInfo.troop_id)
  return troop_id_;
}
inline void PlayerTroopInfo::set_troop_id(::google::protobuf::uint32 value) {
  
  troop_id_ = value;
  // @@protoc_insertion_point(field_set:shareproto.PlayerTroopInfo.troop_id)
}

// optional uint32 pos_x = 3;
inline void PlayerTroopInfo::clear_pos_x() {
  pos_x_ = 0u;
}
inline ::google::protobuf::uint32 PlayerTroopInfo::pos_x() const {
  // @@protoc_insertion_point(field_get:shareproto.PlayerTroopInfo.pos_x)
  return pos_x_;
}
inline void PlayerTroopInfo::set_pos_x(::google::protobuf::uint32 value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:shareproto.PlayerTroopInfo.pos_x)
}

// optional uint32 pos_y = 4;
inline void PlayerTroopInfo::clear_pos_y() {
  pos_y_ = 0u;
}
inline ::google::protobuf::uint32 PlayerTroopInfo::pos_y() const {
  // @@protoc_insertion_point(field_get:shareproto.PlayerTroopInfo.pos_y)
  return pos_y_;
}
inline void PlayerTroopInfo::set_pos_y(::google::protobuf::uint32 value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:shareproto.PlayerTroopInfo.pos_y)
}

// optional uint32 target_pos_x = 5;
inline void PlayerTroopInfo::clear_target_pos_x() {
  target_pos_x_ = 0u;
}
inline ::google::protobuf::uint32 PlayerTroopInfo::target_pos_x() const {
  // @@protoc_insertion_point(field_get:shareproto.PlayerTroopInfo.target_pos_x)
  return target_pos_x_;
}
inline void PlayerTroopInfo::set_target_pos_x(::google::protobuf::uint32 value) {
  
  target_pos_x_ = value;
  // @@protoc_insertion_point(field_set:shareproto.PlayerTroopInfo.target_pos_x)
}

// optional uint32 target_pos_y = 6;
inline void PlayerTroopInfo::clear_target_pos_y() {
  target_pos_y_ = 0u;
}
inline ::google::protobuf::uint32 PlayerTroopInfo::target_pos_y() const {
  // @@protoc_insertion_point(field_get:shareproto.PlayerTroopInfo.target_pos_y)
  return target_pos_y_;
}
inline void PlayerTroopInfo::set_target_pos_y(::google::protobuf::uint32 value) {
  
  target_pos_y_ = value;
  // @@protoc_insertion_point(field_set:shareproto.PlayerTroopInfo.target_pos_y)
}

// -------------------------------------------------------------------

// TroopDetailInfo

// optional uint64 troop_id = 1;
inline void TroopDetailInfo::clear_troop_id() {
  troop_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TroopDetailInfo::troop_id() const {
  // @@protoc_insertion_point(field_get:shareproto.TroopDetailInfo.troop_id)
  return troop_id_;
}
inline void TroopDetailInfo::set_troop_id(::google::protobuf::uint64 value) {
  
  troop_id_ = value;
  // @@protoc_insertion_point(field_set:shareproto.TroopDetailInfo.troop_id)
}

// optional float hp = 2;
inline void TroopDetailInfo::clear_hp() {
  hp_ = 0;
}
inline float TroopDetailInfo::hp() const {
  // @@protoc_insertion_point(field_get:shareproto.TroopDetailInfo.hp)
  return hp_;
}
inline void TroopDetailInfo::set_hp(float value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:shareproto.TroopDetailInfo.hp)
}

// optional float attack = 3;
inline void TroopDetailInfo::clear_attack() {
  attack_ = 0;
}
inline float TroopDetailInfo::attack() const {
  // @@protoc_insertion_point(field_get:shareproto.TroopDetailInfo.attack)
  return attack_;
}
inline void TroopDetailInfo::set_attack(float value) {
  
  attack_ = value;
  // @@protoc_insertion_point(field_set:shareproto.TroopDetailInfo.attack)
}

// optional uint32 attack_cd = 4;
inline void TroopDetailInfo::clear_attack_cd() {
  attack_cd_ = 0u;
}
inline ::google::protobuf::uint32 TroopDetailInfo::attack_cd() const {
  // @@protoc_insertion_point(field_get:shareproto.TroopDetailInfo.attack_cd)
  return attack_cd_;
}
inline void TroopDetailInfo::set_attack_cd(::google::protobuf::uint32 value) {
  
  attack_cd_ = value;
  // @@protoc_insertion_point(field_set:shareproto.TroopDetailInfo.attack_cd)
}

// -------------------------------------------------------------------

// TroopAttackInfo

// optional uint32 attack_player_id = 1;
inline void TroopAttackInfo::clear_attack_player_id() {
  attack_player_id_ = 0u;
}
inline ::google::protobuf::uint32 TroopAttackInfo::attack_player_id() const {
  // @@protoc_insertion_point(field_get:shareproto.TroopAttackInfo.attack_player_id)
  return attack_player_id_;
}
inline void TroopAttackInfo::set_attack_player_id(::google::protobuf::uint32 value) {
  
  attack_player_id_ = value;
  // @@protoc_insertion_point(field_set:shareproto.TroopAttackInfo.attack_player_id)
}

// optional uint32 attack_troop_id = 2;
inline void TroopAttackInfo::clear_attack_troop_id() {
  attack_troop_id_ = 0u;
}
inline ::google::protobuf::uint32 TroopAttackInfo::attack_troop_id() const {
  // @@protoc_insertion_point(field_get:shareproto.TroopAttackInfo.attack_troop_id)
  return attack_troop_id_;
}
inline void TroopAttackInfo::set_attack_troop_id(::google::protobuf::uint32 value) {
  
  attack_troop_id_ = value;
  // @@protoc_insertion_point(field_set:shareproto.TroopAttackInfo.attack_troop_id)
}

// optional uint32 be_attacked_player_id = 3;
inline void TroopAttackInfo::clear_be_attacked_player_id() {
  be_attacked_player_id_ = 0u;
}
inline ::google::protobuf::uint32 TroopAttackInfo::be_attacked_player_id() const {
  // @@protoc_insertion_point(field_get:shareproto.TroopAttackInfo.be_attacked_player_id)
  return be_attacked_player_id_;
}
inline void TroopAttackInfo::set_be_attacked_player_id(::google::protobuf::uint32 value) {
  
  be_attacked_player_id_ = value;
  // @@protoc_insertion_point(field_set:shareproto.TroopAttackInfo.be_attacked_player_id)
}

// optional uint32 be_attacked_troop_id = 4;
inline void TroopAttackInfo::clear_be_attacked_troop_id() {
  be_attacked_troop_id_ = 0u;
}
inline ::google::protobuf::uint32 TroopAttackInfo::be_attacked_troop_id() const {
  // @@protoc_insertion_point(field_get:shareproto.TroopAttackInfo.be_attacked_troop_id)
  return be_attacked_troop_id_;
}
inline void TroopAttackInfo::set_be_attacked_troop_id(::google::protobuf::uint32 value) {
  
  be_attacked_troop_id_ = value;
  // @@protoc_insertion_point(field_set:shareproto.TroopAttackInfo.be_attacked_troop_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace shareproto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::shareproto::RegisterType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shareproto::RegisterType>() {
  return ::shareproto::RegisterType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_share_2eproto__INCLUDED
