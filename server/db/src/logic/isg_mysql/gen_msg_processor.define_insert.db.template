int ${table_processor_class_name}::process(userid_t userid, const char* body, int bodylen, std::string& ack_body)
{
        ${table_proto_data_name} msg;                              
        msg.Clear();
		if (!msg.ParseFromArray(body, bodylen))
        {
                return db_err_proto_format_err;                        
        }

        ${table_proto_data_name} ack;
${table_insert_func_call}
        ack.SerializeToString(&ack_body);
	return 0;
}
